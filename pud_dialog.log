2025-01-14 12:25:56,310 - root - DEBUG - Toolbar setup completed
2025-01-14 12:25:56,318 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 12:25:56,321 - root - DEBUG - Table setup completed
2025-01-14 12:25:56,321 - root - DEBUG - UI setup completed successfully
2025-01-14 12:25:56,321 - root - DEBUG - Signal connections established
2025-01-14 12:25:56,323 - root - INFO - Scenario changed to: Active_Wells
2025-01-14 12:25:56,325 - root - DEBUG - UI updated for scenario: Active_Wells
2025-01-14 12:25:56,327 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 12:25:57,881 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 12:25:59,405 - root - INFO - Initial data loaded successfully
2025-01-14 12:25:59,405 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 12:26:14,745 - root - INFO - Scenario changed to: test
2025-01-14 12:26:14,746 - root - DEBUG - UI updated for scenario: test
2025-01-14 12:26:14,755 - root - DEBUG - Row 0 populated successfully
2025-01-14 12:26:14,755 - root - INFO - Well pads table populated successfully
2025-01-14 12:26:20,971 - root - INFO - Starting add_well process
2025-01-14 12:26:23,007 - root - DEBUG - Add well dialog cancelled
2025-01-14 12:26:25,888 - root - INFO - Scenario changed to: Active_Wells
2025-01-14 12:26:25,889 - root - DEBUG - UI updated for scenario: Active_Wells
2025-01-14 12:26:25,890 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 12:32:59,074 - root - DEBUG - Toolbar setup completed
2025-01-14 12:32:59,075 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 12:32:59,077 - root - DEBUG - Table setup completed
2025-01-14 12:32:59,077 - root - DEBUG - UI setup completed successfully
2025-01-14 12:32:59,077 - root - DEBUG - Signal connections established
2025-01-14 12:32:59,079 - root - INFO - Scenario changed to: test
2025-01-14 12:32:59,080 - root - DEBUG - UI updated for scenario: test
2025-01-14 12:32:59,082 - root - DEBUG - Row 0 populated successfully
2025-01-14 12:32:59,082 - root - INFO - Well pads table populated successfully
2025-01-14 12:32:59,084 - root - DEBUG - Row 0 populated successfully
2025-01-14 12:32:59,084 - root - INFO - Well pads table populated successfully
2025-01-14 12:32:59,084 - root - INFO - Initial data loaded successfully
2025-01-14 12:32:59,085 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 12:33:11,809 - root - INFO - Starting add_well process
2025-01-14 12:33:13,867 - root - DEBUG - Add well dialog cancelled
2025-01-14 13:00:11,029 - root - INFO - Starting add_well process
2025-01-14 13:00:14,374 - root - DEBUG - Add well dialog cancelled
2025-01-14 13:00:15,760 - root - INFO - Dialog closed successfully
2025-01-14 14:09:34,583 - root - DEBUG - Toolbar setup completed
2025-01-14 14:09:34,584 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:09:34,593 - root - DEBUG - Table setup completed
2025-01-14 14:09:34,593 - root - DEBUG - UI setup completed successfully
2025-01-14 14:09:34,593 - root - DEBUG - Signal connections established
2025-01-14 14:09:34,595 - root - INFO - Scenario changed to: test
2025-01-14 14:09:34,597 - root - ERROR - Error updating UI for scenario: 'PUDPropertiesDialog' object has no attribute 'add_well4'
2025-01-14 14:09:34,597 - root - ERROR - Error in on_scenario_changed: 'PUDPropertiesDialog' object has no attribute 'add_well4'
2025-01-14 14:09:36,903 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:09:36,903 - root - INFO - Well pads table populated successfully
2025-01-14 14:09:36,903 - root - INFO - Initial data loaded successfully
2025-01-14 14:09:36,904 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:14:48,296 - root - DEBUG - Toolbar setup completed
2025-01-14 14:14:48,297 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:14:48,299 - root - DEBUG - Table setup completed
2025-01-14 14:14:48,300 - root - DEBUG - UI setup completed successfully
2025-01-14 14:14:48,300 - root - DEBUG - Signal connections established
2025-01-14 14:14:48,302 - root - INFO - Scenario changed to: test
2025-01-14 14:14:48,303 - root - ERROR - Error updating UI for scenario: 'PUDPropertiesDialog' object has no attribute 'add_well4'
2025-01-14 14:14:48,303 - root - ERROR - Error in on_scenario_changed: 'PUDPropertiesDialog' object has no attribute 'add_well4'
2025-01-14 14:14:49,625 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:14:49,625 - root - INFO - Well pads table populated successfully
2025-01-14 14:14:49,626 - root - INFO - Initial data loaded successfully
2025-01-14 14:14:49,626 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:17:46,696 - root - WARNING - Icon not found: C:\Users\jerem\source\repos\Combined\Icons\Icons/Add Scenario
2025-01-14 14:17:46,698 - root - WARNING - Icon not found: C:\Users\jerem\source\repos\Combined\Icons\Icons/Update Curve
2025-01-14 14:17:46,698 - root - WARNING - Icon not found: C:\Users\jerem\source\repos\Combined\Icons\Icons/delete
2025-01-14 14:17:46,698 - root - WARNING - Icon not found: C:\Users\jerem\source\repos\Combined\Icons\Icons/add
2025-01-14 14:17:46,698 - root - WARNING - Icon not found: C:\Users\jerem\source\repos\Combined\Icons\Icons/Launch Graph
2025-01-14 14:17:46,699 - root - DEBUG - Toolbar setup completed
2025-01-14 14:17:46,699 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:17:46,701 - root - DEBUG - Table setup completed
2025-01-14 14:17:46,701 - root - DEBUG - UI setup completed successfully
2025-01-14 14:17:46,702 - root - DEBUG - Signal connections established
2025-01-14 14:17:46,703 - root - INFO - Scenario changed to: test
2025-01-14 14:17:46,704 - root - ERROR - Error updating UI for scenario: 'PUDPropertiesDialog' object has no attribute 'add_scenario4'
2025-01-14 14:17:46,704 - root - ERROR - Error in on_scenario_changed: 'PUDPropertiesDialog' object has no attribute 'add_scenario4'
2025-01-14 14:17:48,156 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:17:48,156 - root - INFO - Well pads table populated successfully
2025-01-14 14:17:48,156 - root - INFO - Initial data loaded successfully
2025-01-14 14:17:48,156 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:19:15,652 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 14:32:00,956 - root - DEBUG - Toolbar setup completed
2025-01-14 14:32:00,959 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:32:00,961 - root - DEBUG - Table setup completed
2025-01-14 14:32:00,961 - root - DEBUG - UI setup completed successfully
2025-01-14 14:32:00,961 - root - DEBUG - Signal connections established
2025-01-14 14:32:00,963 - root - INFO - Scenario changed to: test
2025-01-14 14:32:00,964 - root - ERROR - Error updating UI for scenario: 'PUDPropertiesDialog' object has no attribute 'add_well4'
2025-01-14 14:32:00,964 - root - ERROR - Error in on_scenario_changed: 'PUDPropertiesDialog' object has no attribute 'add_well4'
2025-01-14 14:32:02,199 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:32:02,200 - root - INFO - Well pads table populated successfully
2025-01-14 14:32:02,200 - root - INFO - Initial data loaded successfully
2025-01-14 14:32:02,200 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:32:46,829 - root - INFO - Launching combined cashflow for scenario: test
2025-01-14 14:34:37,123 - root - INFO - Running scenario: test
2025-01-14 14:35:40,373 - root - DEBUG - Toolbar setup completed
2025-01-14 14:35:40,374 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:35:40,376 - root - DEBUG - Table setup completed
2025-01-14 14:35:40,376 - root - DEBUG - UI setup completed successfully
2025-01-14 14:35:40,377 - root - DEBUG - Signal connections established
2025-01-14 14:35:40,379 - root - INFO - Scenario changed to: test
2025-01-14 14:35:40,380 - root - DEBUG - UI updated for scenario: test
2025-01-14 14:35:40,382 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:35:40,382 - root - INFO - Well pads table populated successfully
2025-01-14 14:35:40,383 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:35:40,384 - root - INFO - Well pads table populated successfully
2025-01-14 14:35:40,384 - root - INFO - Initial data loaded successfully
2025-01-14 14:35:40,384 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:36:10,708 - root - ERROR - Error saving wells to scenario: 'DatabaseManager' object has no attribute 'get_wells_in_scenario'
2025-01-14 14:38:06,019 - root - DEBUG - Toolbar setup completed
2025-01-14 14:38:06,020 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:38:06,022 - root - DEBUG - Table setup completed
2025-01-14 14:38:06,023 - root - DEBUG - UI setup completed successfully
2025-01-14 14:38:06,023 - root - DEBUG - Signal connections established
2025-01-14 14:38:06,025 - root - INFO - Scenario changed to: test
2025-01-14 14:38:06,026 - root - DEBUG - UI updated for scenario: test
2025-01-14 14:38:06,029 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:38:06,029 - root - INFO - Well pads table populated successfully
2025-01-14 14:38:06,031 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:38:06,032 - root - INFO - Well pads table populated successfully
2025-01-14 14:38:06,032 - root - INFO - Initial data loaded successfully
2025-01-14 14:38:06,032 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:38:13,615 - root - ERROR - Error updating scenario details: 'DatabaseManager' object has no attribute 'update_scenario_details'
2025-01-14 14:40:22,694 - root - DEBUG - Toolbar setup completed
2025-01-14 14:40:22,695 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:40:22,698 - root - DEBUG - Table setup completed
2025-01-14 14:40:22,698 - root - DEBUG - UI setup completed successfully
2025-01-14 14:40:22,698 - root - DEBUG - Signal connections established
2025-01-14 14:40:22,700 - root - INFO - Scenario changed to: test
2025-01-14 14:40:22,701 - root - DEBUG - UI updated for scenario: test
2025-01-14 14:40:22,703 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:40:22,703 - root - INFO - Well pads table populated successfully
2025-01-14 14:40:22,705 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:40:22,706 - root - INFO - Well pads table populated successfully
2025-01-14 14:40:22,706 - root - INFO - Initial data loaded successfully
2025-01-14 14:40:22,706 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:40:30,479 - root - ERROR - Error updating scenario details: 'DatabaseManager' object has no attribute 'update_scenario_details'
2025-01-14 14:41:26,774 - root - DEBUG - Toolbar setup completed
2025-01-14 14:41:26,775 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:41:26,777 - root - DEBUG - Table setup completed
2025-01-14 14:41:26,777 - root - DEBUG - UI setup completed successfully
2025-01-14 14:41:26,778 - root - DEBUG - Signal connections established
2025-01-14 14:41:26,780 - root - INFO - Scenario changed to: test
2025-01-14 14:41:26,781 - root - DEBUG - UI updated for scenario: test
2025-01-14 14:41:26,783 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:41:26,783 - root - INFO - Well pads table populated successfully
2025-01-14 14:41:26,785 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:41:26,785 - root - INFO - Well pads table populated successfully
2025-01-14 14:41:26,785 - root - INFO - Initial data loaded successfully
2025-01-14 14:41:26,786 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:48:51,659 - root - DEBUG - Toolbar setup completed
2025-01-14 14:48:51,660 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:48:51,662 - root - DEBUG - Table setup completed
2025-01-14 14:48:51,662 - root - DEBUG - UI setup completed successfully
2025-01-14 14:48:51,663 - root - DEBUG - Signal connections established
2025-01-14 14:48:51,666 - root - INFO - Scenario changed to: test
2025-01-14 14:48:51,667 - root - DEBUG - UI updated for scenario: test
2025-01-14 14:48:51,670 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:48:51,671 - root - INFO - Well pads table populated successfully
2025-01-14 14:48:51,673 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:48:51,673 - root - INFO - Well pads table populated successfully
2025-01-14 14:48:51,674 - root - INFO - Initial data loaded successfully
2025-01-14 14:48:51,674 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:49:01,100 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:49:01,100 - root - INFO - Well pads table populated successfully
2025-01-14 14:49:40,557 - root - DEBUG - Toolbar setup completed
2025-01-14 14:49:40,559 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:49:40,561 - root - DEBUG - Table setup completed
2025-01-14 14:49:40,561 - root - DEBUG - UI setup completed successfully
2025-01-14 14:49:40,562 - root - DEBUG - Signal connections established
2025-01-14 14:49:40,564 - root - INFO - Scenario changed to: test
2025-01-14 14:49:40,565 - root - DEBUG - UI updated for scenario: test
2025-01-14 14:49:40,568 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:49:40,568 - root - INFO - Well pads table populated successfully
2025-01-14 14:49:40,570 - root - DEBUG - Row 0 populated successfully
2025-01-14 14:49:40,570 - root - INFO - Well pads table populated successfully
2025-01-14 14:49:40,570 - root - INFO - Initial data loaded successfully
2025-01-14 14:49:40,570 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:49:43,455 - root - INFO - Dialog closed successfully
2025-01-14 14:51:38,608 - root - DEBUG - Toolbar setup completed
2025-01-14 14:51:38,610 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:51:38,612 - root - DEBUG - Table setup completed
2025-01-14 14:51:38,613 - root - DEBUG - UI setup completed successfully
2025-01-14 14:51:38,613 - root - DEBUG - Signal connections established
2025-01-14 14:51:38,616 - root - INFO - No scenarios to load
2025-01-14 14:51:38,616 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:51:53,528 - root - INFO - Dialog closed successfully
2025-01-14 14:57:11,695 - root - DEBUG - Toolbar setup completed
2025-01-14 14:57:11,695 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 14:57:11,697 - root - DEBUG - Table setup completed
2025-01-14 14:57:11,697 - root - DEBUG - UI setup completed successfully
2025-01-14 14:57:11,697 - root - DEBUG - Signal connections established
2025-01-14 14:57:11,699 - root - INFO - No scenarios to load
2025-01-14 14:57:11,699 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 14:57:48,988 - root - INFO - Dialog closed successfully
2025-01-14 15:01:14,852 - root - DEBUG - Toolbar setup completed
2025-01-14 15:01:14,854 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 15:01:14,856 - root - DEBUG - Table setup completed
2025-01-14 15:01:14,856 - root - DEBUG - UI setup completed successfully
2025-01-14 15:01:14,856 - root - DEBUG - Signal connections established
2025-01-14 15:01:14,859 - root - INFO - No scenarios to load
2025-01-14 15:01:14,859 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 15:03:23,059 - root - DEBUG - Toolbar setup completed
2025-01-14 15:03:23,060 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 15:03:23,063 - root - DEBUG - Table setup completed
2025-01-14 15:03:23,063 - root - DEBUG - UI setup completed successfully
2025-01-14 15:03:23,063 - root - DEBUG - Signal connections established
2025-01-14 15:03:23,065 - root - INFO - No scenarios to load
2025-01-14 15:03:23,065 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 15:03:34,830 - root - ERROR - Error saving wells to scenario: DatabaseManager.insert_scenario_name() missing 1 required positional argument: 'is_active'
2025-01-14 15:07:57,337 - root - DEBUG - Toolbar setup completed
2025-01-14 15:07:57,339 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 15:07:57,340 - root - DEBUG - Table setup completed
2025-01-14 15:07:57,341 - root - DEBUG - UI setup completed successfully
2025-01-14 15:07:57,341 - root - DEBUG - Signal connections established
2025-01-14 15:07:57,342 - root - INFO - No scenarios to load
2025-01-14 15:07:57,342 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 15:09:25,247 - root - INFO - Well pads table populated successfully
2025-01-14 15:36:58,361 - root - DEBUG - Toolbar setup completed
2025-01-14 15:36:58,363 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 15:36:58,374 - root - DEBUG - Table setup completed
2025-01-14 15:36:58,375 - root - DEBUG - UI setup completed successfully
2025-01-14 15:36:58,375 - root - DEBUG - Signal connections established
2025-01-14 15:36:58,377 - root - INFO - Scenario changed to: first
2025-01-14 15:36:58,379 - root - DEBUG - UI updated for scenario: first
2025-01-14 15:36:58,383 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 15:37:00,890 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 15:37:05,062 - root - INFO - Initial data loaded successfully
2025-01-14 15:37:05,063 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:26:50,533 - root - DEBUG - Toolbar setup completed
2025-01-14 16:26:50,535 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:26:50,541 - root - DEBUG - Table setup completed
2025-01-14 16:26:50,542 - root - DEBUG - UI setup completed successfully
2025-01-14 16:26:50,542 - root - DEBUG - Signal connections established
2025-01-14 16:26:50,545 - root - INFO - No scenarios to load
2025-01-14 16:26:50,545 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:26:55,372 - root - INFO - Dialog closed successfully
2025-01-14 16:27:21,095 - root - DEBUG - Toolbar setup completed
2025-01-14 16:27:21,095 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:27:21,098 - root - DEBUG - Table setup completed
2025-01-14 16:27:21,098 - root - DEBUG - UI setup completed successfully
2025-01-14 16:27:21,098 - root - DEBUG - Signal connections established
2025-01-14 16:27:21,099 - root - INFO - No scenarios to load
2025-01-14 16:27:21,100 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:32:28,587 - root - ERROR - Error saving wells to database: 'pad_name'
2025-01-14 16:32:31,388 - root - INFO - Well pads table populated successfully
2025-01-14 16:41:03,704 - root - DEBUG - Toolbar setup completed
2025-01-14 16:41:03,705 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:41:03,707 - root - DEBUG - Table setup completed
2025-01-14 16:41:03,707 - root - DEBUG - UI setup completed successfully
2025-01-14 16:41:03,708 - root - DEBUG - Signal connections established
2025-01-14 16:41:03,710 - root - INFO - No scenarios to load
2025-01-14 16:41:03,710 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:41:05,243 - root - INFO - Dialog closed successfully
2025-01-14 16:41:16,856 - root - DEBUG - Toolbar setup completed
2025-01-14 16:41:16,857 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:41:16,858 - root - DEBUG - Table setup completed
2025-01-14 16:41:16,858 - root - DEBUG - UI setup completed successfully
2025-01-14 16:41:16,858 - root - DEBUG - Signal connections established
2025-01-14 16:41:16,860 - root - INFO - No scenarios to load
2025-01-14 16:41:16,860 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:41:59,578 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-14 16:41:59,580 - root - INFO - Well pads table populated successfully
2025-01-14 16:44:26,466 - root - DEBUG - Toolbar setup completed
2025-01-14 16:44:26,467 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:44:26,469 - root - DEBUG - Table setup completed
2025-01-14 16:44:26,469 - root - DEBUG - UI setup completed successfully
2025-01-14 16:44:26,470 - root - DEBUG - Signal connections established
2025-01-14 16:44:26,471 - root - INFO - Scenario changed to: gga
2025-01-14 16:44:26,472 - root - DEBUG - UI updated for scenario: gga
2025-01-14 16:44:26,473 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:44:28,095 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:44:28,765 - root - INFO - Initial data loaded successfully
2025-01-14 16:44:28,765 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:44:33,953 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-14 16:44:33,953 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:52:49,644 - root - DEBUG - Toolbar setup completed
2025-01-14 16:52:49,645 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:52:49,646 - root - DEBUG - Table setup completed
2025-01-14 16:52:49,648 - root - DEBUG - UI setup completed successfully
2025-01-14 16:52:49,648 - root - DEBUG - Signal connections established
2025-01-14 16:52:49,649 - root - INFO - Scenario changed to: gga
2025-01-14 16:52:49,650 - root - DEBUG - UI updated for scenario: gga
2025-01-14 16:52:49,652 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:52:51,078 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:52:53,160 - root - INFO - Initial data loaded successfully
2025-01-14 16:52:53,160 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:53:11,432 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-14 16:53:11,433 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:54:12,317 - root - DEBUG - Toolbar setup completed
2025-01-14 16:54:12,318 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:54:12,320 - root - DEBUG - Table setup completed
2025-01-14 16:54:12,321 - root - DEBUG - UI setup completed successfully
2025-01-14 16:54:12,322 - root - DEBUG - Signal connections established
2025-01-14 16:54:12,323 - root - INFO - Scenario changed to: gga
2025-01-14 16:54:12,324 - root - DEBUG - UI updated for scenario: gga
2025-01-14 16:54:12,325 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:54:13,740 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:54:14,170 - root - INFO - Initial data loaded successfully
2025-01-14 16:54:14,170 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:54:15,505 - root - INFO - Launching combined cashflow for scenario: gga
2025-01-14 16:54:20,800 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 16:55:53,228 - root - DEBUG - Toolbar setup completed
2025-01-14 16:55:53,229 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 16:55:53,231 - root - DEBUG - Table setup completed
2025-01-14 16:55:53,231 - root - DEBUG - UI setup completed successfully
2025-01-14 16:55:53,232 - root - DEBUG - Signal connections established
2025-01-14 16:55:53,233 - root - INFO - Scenario changed to: gga
2025-01-14 16:55:53,234 - root - DEBUG - UI updated for scenario: gga
2025-01-14 16:55:53,236 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:55:55,207 - root - ERROR - Error populating well pads table: 'NoneType' object is not iterable
2025-01-14 16:55:55,493 - root - INFO - Initial data loaded successfully
2025-01-14 16:55:55,493 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 16:55:59,516 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 17:00:42,914 - root - DEBUG - Toolbar setup completed
2025-01-14 17:00:42,915 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 17:00:42,918 - root - DEBUG - Table setup completed
2025-01-14 17:00:42,918 - root - DEBUG - UI setup completed successfully
2025-01-14 17:00:42,918 - root - DEBUG - Signal connections established
2025-01-14 17:00:42,921 - root - INFO - No scenarios to load
2025-01-14 17:00:42,921 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 17:00:49,259 - root - INFO - Dialog closed successfully
2025-01-14 17:00:50,643 - root - DEBUG - Toolbar setup completed
2025-01-14 17:00:50,643 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 17:00:50,645 - root - DEBUG - Table setup completed
2025-01-14 17:00:50,645 - root - DEBUG - UI setup completed successfully
2025-01-14 17:00:50,645 - root - DEBUG - Signal connections established
2025-01-14 17:00:50,646 - root - INFO - No scenarios to load
2025-01-14 17:00:50,646 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 17:00:52,688 - root - INFO - Dialog closed successfully
2025-01-14 17:01:00,174 - root - DEBUG - Toolbar setup completed
2025-01-14 17:01:00,175 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 17:01:00,176 - root - DEBUG - Table setup completed
2025-01-14 17:01:00,176 - root - DEBUG - UI setup completed successfully
2025-01-14 17:01:00,176 - root - DEBUG - Signal connections established
2025-01-14 17:01:00,178 - root - INFO - No scenarios to load
2025-01-14 17:01:00,179 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 17:01:06,536 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 17:02:15,343 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-14 17:02:17,647 - root - INFO - Well pads table populated successfully
2025-01-14 17:10:02,169 - root - DEBUG - Toolbar setup completed
2025-01-14 17:10:02,170 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 17:10:02,172 - root - DEBUG - Table setup completed
2025-01-14 17:10:02,172 - root - DEBUG - UI setup completed successfully
2025-01-14 17:10:02,172 - root - DEBUG - Signal connections established
2025-01-14 17:10:02,174 - root - INFO - Scenario changed to: aser
2025-01-14 17:10:02,175 - root - DEBUG - UI updated for scenario: aser
2025-01-14 17:10:02,185 - root - INFO - Well pads table populated successfully.
2025-01-14 17:10:02,188 - root - INFO - Well pads table populated successfully.
2025-01-14 17:10:02,188 - root - INFO - Initial data loaded successfully
2025-01-14 17:10:02,188 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 17:59:01,690 - root - DEBUG - Table item changed - Row: 3, Column: 1, Value: 2000-01-11
2025-01-14 17:59:01,691 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-14 17:59:05,548 - root - DEBUG - Table item changed - Row: 4, Column: 1, Value: 2000-01-01
2025-01-14 17:59:05,548 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-14 18:17:48,382 - root - DEBUG - Table item changed - Row: 2, Column: 1, Value: 2000-01-01
2025-01-14 18:17:48,384 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-14 19:26:45,617 - root - DEBUG - Toolbar setup completed
2025-01-14 19:26:45,619 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:26:45,620 - root - DEBUG - Table setup completed
2025-01-14 19:26:45,621 - root - DEBUG - UI setup completed successfully
2025-01-14 19:26:45,621 - root - DEBUG - Signal connections established
2025-01-14 19:26:45,623 - root - INFO - No scenarios to load
2025-01-14 19:26:45,623 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:26:50,637 - root - INFO - Dialog closed successfully
2025-01-14 19:26:52,457 - root - DEBUG - Toolbar setup completed
2025-01-14 19:26:52,457 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:26:52,458 - root - DEBUG - Table setup completed
2025-01-14 19:26:52,459 - root - DEBUG - UI setup completed successfully
2025-01-14 19:26:52,459 - root - DEBUG - Signal connections established
2025-01-14 19:26:52,460 - root - INFO - No scenarios to load
2025-01-14 19:26:52,460 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:26:55,975 - root - INFO - Dialog closed successfully
2025-01-14 19:27:03,026 - root - DEBUG - Toolbar setup completed
2025-01-14 19:27:03,026 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:27:03,027 - root - DEBUG - Table setup completed
2025-01-14 19:27:03,027 - root - DEBUG - UI setup completed successfully
2025-01-14 19:27:03,028 - root - DEBUG - Signal connections established
2025-01-14 19:27:03,028 - root - INFO - No scenarios to load
2025-01-14 19:27:03,028 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:29:30,652 - root - INFO - Dialog closed successfully
2025-01-14 19:29:45,170 - root - DEBUG - Toolbar setup completed
2025-01-14 19:29:45,170 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:29:45,172 - root - DEBUG - Table setup completed
2025-01-14 19:29:45,172 - root - DEBUG - UI setup completed successfully
2025-01-14 19:29:45,172 - root - DEBUG - Signal connections established
2025-01-14 19:29:45,173 - root - INFO - No scenarios to load
2025-01-14 19:29:45,173 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:29:47,054 - root - INFO - Dialog closed successfully
2025-01-14 19:31:30,492 - root - DEBUG - Toolbar setup completed
2025-01-14 19:31:30,493 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:31:30,495 - root - DEBUG - Table setup completed
2025-01-14 19:31:30,497 - root - DEBUG - UI setup completed successfully
2025-01-14 19:31:30,497 - root - DEBUG - Signal connections established
2025-01-14 19:31:30,498 - root - INFO - No scenarios to load
2025-01-14 19:31:30,498 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:31:31,880 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 19:34:08,581 - root - ERROR - Error saving wells to database: name 'selfscenario_id' is not defined
2025-01-14 19:34:46,258 - root - DEBUG - Toolbar setup completed
2025-01-14 19:34:46,259 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:34:46,262 - root - DEBUG - Table setup completed
2025-01-14 19:34:46,262 - root - DEBUG - UI setup completed successfully
2025-01-14 19:34:46,262 - root - DEBUG - Signal connections established
2025-01-14 19:34:46,264 - root - INFO - Scenario changed to: Test
2025-01-14 19:34:46,265 - root - DEBUG - UI updated for scenario: Test
2025-01-14 19:34:46,266 - root - INFO - Well pads table populated successfully.
2025-01-14 19:34:46,267 - root - INFO - Well pads table populated successfully.
2025-01-14 19:34:46,267 - root - INFO - Initial data loaded successfully
2025-01-14 19:34:46,267 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:34:49,355 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 19:35:28,109 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-14 19:35:39,097 - root - INFO - Well pads table populated successfully.
2025-01-14 19:42:04,625 - root - DEBUG - Toolbar setup completed
2025-01-14 19:42:04,627 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:42:04,629 - root - DEBUG - Table setup completed
2025-01-14 19:42:04,629 - root - DEBUG - UI setup completed successfully
2025-01-14 19:42:04,629 - root - DEBUG - Signal connections established
2025-01-14 19:42:04,630 - root - INFO - Scenario changed to: Test
2025-01-14 19:42:04,631 - root - DEBUG - UI updated for scenario: Test
2025-01-14 19:42:04,640 - root - ERROR - Unexpected error while populating row 0: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,640 - root - ERROR - Unexpected error while populating row 1: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,641 - root - ERROR - Unexpected error while populating row 2: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,641 - root - ERROR - Unexpected error while populating row 3: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,641 - root - ERROR - Unexpected error while populating row 4: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,642 - root - ERROR - Unexpected error while populating row 5: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,642 - root - ERROR - Unexpected error while populating row 6: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,643 - root - ERROR - Unexpected error while populating row 7: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,643 - root - ERROR - Unexpected error while populating row 8: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,644 - root - ERROR - Unexpected error while populating row 9: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,644 - root - ERROR - Unexpected error while populating row 10: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,644 - root - ERROR - Unexpected error while populating row 11: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,645 - root - ERROR - Unexpected error while populating row 12: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,645 - root - ERROR - Unexpected error while populating row 13: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,645 - root - ERROR - Unexpected error while populating row 14: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,646 - root - ERROR - Unexpected error while populating row 15: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,646 - root - ERROR - Unexpected error while populating row 16: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,646 - root - ERROR - Unexpected error while populating row 17: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,647 - root - ERROR - Unexpected error while populating row 18: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,647 - root - ERROR - Unexpected error while populating row 19: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,647 - root - ERROR - Unexpected error while populating row 20: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,648 - root - ERROR - Unexpected error while populating row 21: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,648 - root - ERROR - Unexpected error while populating row 22: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,649 - root - ERROR - Unexpected error while populating row 23: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,649 - root - ERROR - Unexpected error while populating row 24: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,649 - root - ERROR - Unexpected error while populating row 25: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,650 - root - ERROR - Unexpected error while populating row 26: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,650 - root - INFO - Well pads table populated successfully.
2025-01-14 19:42:04,652 - root - ERROR - Unexpected error while populating row 0: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,652 - root - ERROR - Unexpected error while populating row 1: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,654 - root - ERROR - Unexpected error while populating row 2: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,654 - root - ERROR - Unexpected error while populating row 3: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,654 - root - ERROR - Unexpected error while populating row 4: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,654 - root - ERROR - Unexpected error while populating row 5: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,655 - root - ERROR - Unexpected error while populating row 6: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,655 - root - ERROR - Unexpected error while populating row 7: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,656 - root - ERROR - Unexpected error while populating row 8: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,656 - root - ERROR - Unexpected error while populating row 9: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,657 - root - ERROR - Unexpected error while populating row 10: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,657 - root - ERROR - Unexpected error while populating row 11: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,657 - root - ERROR - Unexpected error while populating row 12: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,658 - root - ERROR - Unexpected error while populating row 13: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,658 - root - ERROR - Unexpected error while populating row 14: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,659 - root - ERROR - Unexpected error while populating row 15: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,660 - root - ERROR - Unexpected error while populating row 16: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,660 - root - ERROR - Unexpected error while populating row 17: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,660 - root - ERROR - Unexpected error while populating row 18: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,661 - root - ERROR - Unexpected error while populating row 19: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,661 - root - ERROR - Unexpected error while populating row 20: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,662 - root - ERROR - Unexpected error while populating row 21: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,662 - root - ERROR - Unexpected error while populating row 22: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,662 - root - ERROR - Unexpected error while populating row 23: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,663 - root - ERROR - Unexpected error while populating row 24: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,663 - root - ERROR - Unexpected error while populating row 25: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,664 - root - ERROR - Unexpected error while populating row 26: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:42:04,664 - root - INFO - Well pads table populated successfully.
2025-01-14 19:42:04,664 - root - INFO - Initial data loaded successfully
2025-01-14 19:42:04,664 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:51:52,257 - root - DEBUG - Toolbar setup completed
2025-01-14 19:51:52,258 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:51:52,260 - root - DEBUG - Table setup completed
2025-01-14 19:51:52,260 - root - DEBUG - UI setup completed successfully
2025-01-14 19:51:52,261 - root - DEBUG - Signal connections established
2025-01-14 19:51:52,262 - root - INFO - Scenario changed to: Test
2025-01-14 19:51:52,263 - root - DEBUG - UI updated for scenario: Test
2025-01-14 19:51:52,265 - root - ERROR - Unexpected error while populating row 0: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,265 - root - ERROR - Unexpected error while populating row 1: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,266 - root - ERROR - Unexpected error while populating row 2: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,266 - root - ERROR - Unexpected error while populating row 3: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,267 - root - ERROR - Unexpected error while populating row 4: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,267 - root - ERROR - Unexpected error while populating row 5: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,268 - root - ERROR - Unexpected error while populating row 6: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,268 - root - ERROR - Unexpected error while populating row 7: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,269 - root - ERROR - Unexpected error while populating row 8: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,269 - root - ERROR - Unexpected error while populating row 9: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,270 - root - ERROR - Unexpected error while populating row 10: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,270 - root - ERROR - Unexpected error while populating row 11: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,270 - root - ERROR - Unexpected error while populating row 12: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,271 - root - ERROR - Unexpected error while populating row 13: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,271 - root - ERROR - Unexpected error while populating row 14: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,272 - root - ERROR - Unexpected error while populating row 15: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,272 - root - ERROR - Unexpected error while populating row 16: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,273 - root - ERROR - Unexpected error while populating row 17: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,273 - root - ERROR - Unexpected error while populating row 18: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,274 - root - ERROR - Unexpected error while populating row 19: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,274 - root - ERROR - Unexpected error while populating row 20: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,274 - root - ERROR - Unexpected error while populating row 21: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,275 - root - ERROR - Unexpected error while populating row 22: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,275 - root - ERROR - Unexpected error while populating row 23: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,275 - root - ERROR - Unexpected error while populating row 24: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,276 - root - ERROR - Unexpected error while populating row 25: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,276 - root - ERROR - Unexpected error while populating row 26: 'PUDPropertiesDialog' object has no attribute 'decline_curvenames'
2025-01-14 19:51:52,276 - root - INFO - Well pads table populated successfully.
2025-01-14 19:51:52,284 - root - INFO - Well pads table populated successfully.
2025-01-14 19:51:52,284 - root - INFO - Initial data loaded successfully
2025-01-14 19:51:52,284 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:52:58,842 - root - DEBUG - Toolbar setup completed
2025-01-14 19:52:58,843 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:52:58,845 - root - DEBUG - Table setup completed
2025-01-14 19:52:58,845 - root - DEBUG - UI setup completed successfully
2025-01-14 19:52:58,846 - root - DEBUG - Signal connections established
2025-01-14 19:52:58,848 - root - INFO - Scenario changed to: Test
2025-01-14 19:52:58,849 - root - DEBUG - UI updated for scenario: Test
2025-01-14 19:52:58,852 - root - ERROR - Unexpected error while populating row 0: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,853 - root - ERROR - Unexpected error while populating row 1: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,853 - root - ERROR - Unexpected error while populating row 2: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,854 - root - ERROR - Unexpected error while populating row 3: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,855 - root - ERROR - Unexpected error while populating row 4: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,855 - root - ERROR - Unexpected error while populating row 5: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,856 - root - ERROR - Unexpected error while populating row 6: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,856 - root - ERROR - Unexpected error while populating row 7: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,857 - root - ERROR - Unexpected error while populating row 8: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,857 - root - ERROR - Unexpected error while populating row 9: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,858 - root - ERROR - Unexpected error while populating row 10: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,858 - root - ERROR - Unexpected error while populating row 11: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,859 - root - ERROR - Unexpected error while populating row 12: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,859 - root - ERROR - Unexpected error while populating row 13: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,860 - root - ERROR - Unexpected error while populating row 14: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,860 - root - ERROR - Unexpected error while populating row 15: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,861 - root - ERROR - Unexpected error while populating row 16: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,862 - root - ERROR - Unexpected error while populating row 17: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,862 - root - ERROR - Unexpected error while populating row 18: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,863 - root - ERROR - Unexpected error while populating row 19: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,863 - root - ERROR - Unexpected error while populating row 20: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,864 - root - ERROR - Unexpected error while populating row 21: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,864 - root - ERROR - Unexpected error while populating row 22: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,865 - root - ERROR - Unexpected error while populating row 23: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,866 - root - ERROR - Unexpected error while populating row 24: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,866 - root - ERROR - Unexpected error while populating row 25: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,867 - root - ERROR - Unexpected error while populating row 26: 'PUDPropertiesDialog' object has no attribute 'decline_curve_names'
2025-01-14 19:52:58,867 - root - INFO - Well pads table populated successfully.
2025-01-14 19:52:58,869 - root - INFO - Well pads table populated successfully.
2025-01-14 19:52:58,869 - root - INFO - Initial data loaded successfully
2025-01-14 19:52:58,870 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:54:38,904 - root - DEBUG - Toolbar setup completed
2025-01-14 19:54:38,905 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:54:38,907 - root - DEBUG - Table setup completed
2025-01-14 19:54:38,907 - root - DEBUG - UI setup completed successfully
2025-01-14 19:54:38,908 - root - DEBUG - Signal connections established
2025-01-14 19:54:38,909 - root - INFO - Scenario changed to: Test
2025-01-14 19:54:38,910 - root - DEBUG - UI updated for scenario: Test
2025-01-14 19:54:38,912 - root - ERROR - Unexpected error while populating row 0: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,913 - root - ERROR - Unexpected error while populating row 1: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,913 - root - ERROR - Unexpected error while populating row 2: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,914 - root - ERROR - Unexpected error while populating row 3: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,914 - root - ERROR - Unexpected error while populating row 4: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,915 - root - ERROR - Unexpected error while populating row 5: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,915 - root - ERROR - Unexpected error while populating row 6: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,916 - root - ERROR - Unexpected error while populating row 7: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,916 - root - ERROR - Unexpected error while populating row 8: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,917 - root - ERROR - Unexpected error while populating row 9: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,917 - root - ERROR - Unexpected error while populating row 10: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,918 - root - ERROR - Unexpected error while populating row 11: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,918 - root - ERROR - Unexpected error while populating row 12: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,919 - root - ERROR - Unexpected error while populating row 13: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,919 - root - ERROR - Unexpected error while populating row 14: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,919 - root - ERROR - Unexpected error while populating row 15: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,920 - root - ERROR - Unexpected error while populating row 16: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,920 - root - ERROR - Unexpected error while populating row 17: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,920 - root - ERROR - Unexpected error while populating row 18: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,921 - root - ERROR - Unexpected error while populating row 19: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,921 - root - ERROR - Unexpected error while populating row 20: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,922 - root - ERROR - Unexpected error while populating row 21: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,922 - root - ERROR - Unexpected error while populating row 22: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,923 - root - ERROR - Unexpected error while populating row 23: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,923 - root - ERROR - Unexpected error while populating row 24: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,923 - root - ERROR - Unexpected error while populating row 25: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,924 - root - ERROR - Unexpected error while populating row 26: 'PUDPropertiesDialog' object has no attribute 'decline_curves'
2025-01-14 19:54:38,924 - root - INFO - Well pads table populated successfully.
2025-01-14 19:54:38,925 - root - INFO - Well pads table populated successfully.
2025-01-14 19:54:38,926 - root - INFO - Initial data loaded successfully
2025-01-14 19:54:38,926 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 19:57:15,518 - root - DEBUG - Toolbar setup completed
2025-01-14 19:57:15,519 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 19:57:15,521 - root - DEBUG - Table setup completed
2025-01-14 19:57:15,521 - root - DEBUG - UI setup completed successfully
2025-01-14 19:57:15,521 - root - DEBUG - Signal connections established
2025-01-14 19:57:15,524 - root - INFO - Scenario changed to: Test
2025-01-14 19:57:15,525 - root - DEBUG - UI updated for scenario: Test
2025-01-14 19:57:15,534 - root - INFO - Well pads table populated successfully.
2025-01-14 19:57:15,535 - root - INFO - Well pads table populated successfully.
2025-01-14 19:57:15,536 - root - INFO - Initial data loaded successfully
2025-01-14 19:57:15,536 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 20:07:13,810 - root - DEBUG - Toolbar setup completed
2025-01-14 20:07:13,812 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 20:07:13,814 - root - DEBUG - Table setup completed
2025-01-14 20:07:13,814 - root - DEBUG - UI setup completed successfully
2025-01-14 20:07:13,814 - root - DEBUG - Signal connections established
2025-01-14 20:07:13,817 - root - ERROR - Error loading initial data: 'PUDPropertiesDialog' object has no attribute 'db_manager_get_active_scenario_name'
2025-01-14 20:07:15,121 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 20:07:52,941 - root - DEBUG - Toolbar setup completed
2025-01-14 20:07:52,942 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 20:07:52,944 - root - DEBUG - Table setup completed
2025-01-14 20:07:52,944 - root - DEBUG - UI setup completed successfully
2025-01-14 20:07:52,945 - root - DEBUG - Signal connections established
2025-01-14 20:07:52,948 - root - WARNING - No active scenario found.
2025-01-14 20:07:55,401 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 20:11:48,378 - root - DEBUG - Toolbar setup completed
2025-01-14 20:11:48,379 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 20:11:48,382 - root - DEBUG - Table setup completed
2025-01-14 20:11:48,382 - root - DEBUG - UI setup completed successfully
2025-01-14 20:11:48,383 - root - DEBUG - Signal connections established
2025-01-14 20:11:48,386 - root - WARNING - No active scenario found.
2025-01-14 20:11:49,783 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 20:11:55,620 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 20:11:57,947 - root - DEBUG - Value of is_active before insertion: True
2025-01-14 21:10:22,533 - root - INFO - Scenario 3 updated with 27 wells.
2025-01-14 21:10:22,551 - root - INFO - Well pads table populated successfully.
2025-01-14 21:11:02,590 - root - ERROR - Error deleting pad: 'DatabaseManager' object has no attribute 'delete_pad'
2025-01-14 21:11:13,174 - root - INFO - Adding new scenario
2025-01-14 21:11:14,675 - root - INFO - Adding new scenario
2025-01-14 21:12:48,336 - root - ERROR - Error deleting pad: 'DatabaseManager' object has no attribute 'delete_pad'
2025-01-14 21:24:13,541 - root - DEBUG - Toolbar setup completed
2025-01-14 21:24:13,542 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 21:24:13,544 - root - DEBUG - Table setup completed
2025-01-14 21:24:13,544 - root - DEBUG - UI setup completed successfully
2025-01-14 21:24:13,545 - root - DEBUG - Signal connections established
2025-01-14 21:24:13,549 - root - INFO - Scenario changed to: Test112
2025-01-14 21:24:13,549 - root - DEBUG - UI updated for scenario: Test112
2025-01-14 21:24:13,557 - root - INFO - Well pads table populated successfully.
2025-01-14 21:24:13,565 - root - INFO - Well pads table populated successfully.
2025-01-14 21:24:13,565 - root - INFO - Initial data loaded successfully.
2025-01-14 21:24:13,566 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 21:24:20,372 - root - INFO - Scenario 'Test2' added successfully with ID 4. Active: 0
2025-01-14 21:24:20,375 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-14 21:24:20,379 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-14 21:24:20,385 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-14 21:24:20,391 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-14 21:24:20,395 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-14 21:24:20,400 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-14 21:24:20,405 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-14 21:24:20,410 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-14 21:24:20,416 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-14 21:24:20,420 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-14 21:24:20,426 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-14 21:24:20,432 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-14 21:24:20,437 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-14 21:24:20,443 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-14 21:24:20,449 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-14 21:24:20,455 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-14 21:24:20,460 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-14 21:24:20,467 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-14 21:24:20,472 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-14 21:24:20,477 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-14 21:24:20,484 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-14 21:24:20,489 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-14 21:24:20,494 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-14 21:24:20,500 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-14 21:24:20,505 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-14 21:24:20,510 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-14 21:24:20,516 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-14 21:24:21,998 - root - INFO - Scenario 4 updated with 27 wells.
2025-01-14 21:24:22,009 - root - INFO - Well pads table populated successfully.
2025-01-14 21:24:26,226 - root - INFO - Scenario changed to: Test
2025-01-14 21:24:26,227 - root - DEBUG - UI updated for scenario: Test
2025-01-14 21:24:26,237 - root - INFO - Well pads table populated successfully.
2025-01-14 21:24:26,902 - root - INFO - Scenario changed to: Test112
2025-01-14 21:24:26,903 - root - DEBUG - UI updated for scenario: Test112
2025-01-14 21:24:26,913 - root - INFO - Well pads table populated successfully.
2025-01-14 21:24:35,111 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg1
2025-01-14 21:24:35,111 - root - ERROR - Error saving wells to database: DatabaseManager.get_well_pad_id() takes 2 positional arguments but 3 were given
2025-01-14 21:24:38,142 - root - INFO - Well pads table populated successfully.
2025-01-14 21:24:53,734 - root - INFO - Scenario 'Test4' added successfully with ID 5. Active: 0
2025-01-14 21:24:53,737 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-14 21:24:53,740 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-14 21:24:53,745 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-14 21:24:53,749 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-14 21:24:53,754 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-14 21:24:53,759 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-14 21:24:53,765 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-14 21:24:53,771 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-14 21:24:53,776 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-14 21:24:53,782 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-14 21:24:53,788 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-14 21:24:53,792 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-14 21:24:53,798 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-14 21:24:53,803 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-14 21:24:53,809 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-14 21:24:53,814 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-14 21:24:53,819 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-14 21:24:53,824 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-14 21:24:53,830 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-14 21:24:53,835 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-14 21:24:53,840 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-14 21:24:53,846 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-14 21:24:53,853 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-14 21:24:53,859 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-14 21:24:53,864 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-14 21:24:53,870 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-14 21:24:53,875 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-14 21:24:55,294 - root - INFO - Scenario 5 updated with 27 wells.
2025-01-14 21:24:55,306 - root - INFO - Well pads table populated successfully.
2025-01-14 21:25:07,891 - root - INFO - Scenario 'Test5' added successfully with ID 6. Active: 0
2025-01-14 21:25:07,893 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-14 21:25:07,897 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-14 21:25:07,904 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-14 21:25:07,909 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-14 21:25:07,915 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-14 21:25:07,920 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-14 21:25:07,925 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-14 21:25:07,930 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-14 21:25:07,935 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-14 21:25:07,940 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-14 21:25:07,946 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-14 21:25:07,951 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-14 21:25:07,957 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-14 21:25:07,962 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-14 21:25:07,968 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-14 21:25:07,974 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-14 21:25:07,979 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-14 21:25:07,985 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-14 21:25:07,990 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-14 21:25:07,996 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-14 21:25:08,002 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-14 21:25:08,007 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-14 21:25:08,013 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-14 21:25:08,019 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-14 21:25:08,024 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-14 21:25:08,030 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-14 21:25:08,036 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-14 21:25:09,240 - root - INFO - Scenario 6 updated with 27 wells.
2025-01-14 21:25:09,255 - root - INFO - Well pads table populated successfully.
2025-01-14 21:28:18,091 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg1
2025-01-14 21:28:18,092 - root - ERROR - Error saving wells to database: DatabaseManager.get_well_pad_id() takes 2 positional arguments but 3 were given
2025-01-14 21:28:24,481 - root - INFO - Well pads table populated successfully.
2025-01-14 21:29:05,412 - root - DEBUG - Toolbar setup completed
2025-01-14 21:29:05,413 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 21:29:05,416 - root - DEBUG - Table setup completed
2025-01-14 21:29:05,416 - root - DEBUG - UI setup completed successfully
2025-01-14 21:29:05,416 - root - DEBUG - Signal connections established
2025-01-14 21:29:05,419 - root - INFO - Scenario changed to: Test112
2025-01-14 21:29:05,420 - root - DEBUG - UI updated for scenario: Test112
2025-01-14 21:29:05,427 - root - INFO - Well pads table populated successfully.
2025-01-14 21:29:05,437 - root - INFO - Well pads table populated successfully.
2025-01-14 21:29:05,437 - root - INFO - Initial data loaded successfully.
2025-01-14 21:29:05,437 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 21:29:07,547 - root - INFO - Scenario changed to: Test4
2025-01-14 21:29:07,548 - root - DEBUG - UI updated for scenario: Test4
2025-01-14 21:29:07,557 - root - INFO - Well pads table populated successfully.
2025-01-14 21:29:10,720 - root - INFO - Scenario changed to: Test5
2025-01-14 21:29:10,721 - root - DEBUG - UI updated for scenario: Test5
2025-01-14 21:29:10,729 - root - INFO - Well pads table populated successfully.
2025-01-14 21:29:23,650 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg2
2025-01-14 21:29:23,665 - root - ERROR - Error saving wells to database: 'num_wells'
2025-01-14 21:29:26,760 - root - INFO - Well pads table populated successfully.
2025-01-14 21:44:50,347 - root - DEBUG - Toolbar setup completed
2025-01-14 21:44:50,348 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 21:44:50,351 - root - DEBUG - Table setup completed
2025-01-14 21:44:50,351 - root - DEBUG - UI setup completed successfully
2025-01-14 21:44:50,351 - root - DEBUG - Signal connections established
2025-01-14 21:44:50,353 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 21:53:03,316 - root - DEBUG - Toolbar setup completed
2025-01-14 21:53:03,318 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 21:53:03,320 - root - DEBUG - Table setup completed
2025-01-14 21:53:03,320 - root - DEBUG - UI setup completed successfully
2025-01-14 21:53:03,320 - root - DEBUG - Signal connections established
2025-01-14 21:53:03,323 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 21:53:07,320 - root - INFO - Well pads table populated successfully.
2025-01-14 21:53:07,320 - root - INFO - Initial data loaded successfully.
2025-01-14 21:53:08,277 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 21:53:20,922 - root - INFO - Scenario 'tes2' added successfully with ID 3. Active: 0
2025-01-14 21:53:20,936 - root - INFO - Scenario changed to: tes2
2025-01-14 21:53:20,937 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 21:53:20,940 - root - INFO - Well pads table populated successfully.
2025-01-14 21:53:20,942 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-14 21:53:20,947 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-14 21:53:20,951 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-14 21:53:20,957 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-14 21:53:20,963 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-14 21:53:20,969 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-14 21:53:20,974 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-14 21:53:20,980 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-14 21:53:20,986 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-14 21:53:20,992 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-14 21:53:20,999 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-14 21:53:21,006 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-14 21:53:21,012 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-14 21:53:21,018 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-14 21:53:21,025 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-14 21:53:21,030 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-14 21:53:21,037 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-14 21:53:21,044 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-14 21:53:21,050 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-14 21:53:21,056 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-14 21:53:21,063 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-14 21:53:21,069 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-14 21:53:21,075 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-14 21:53:21,082 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-14 21:53:21,088 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-14 21:53:21,095 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-14 21:53:21,100 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-14 21:53:22,445 - root - INFO - Scenario 3 updated with 27 wells.
2025-01-14 21:53:22,457 - root - INFO - Well pads table populated successfully.
2025-01-14 21:56:50,224 - root - DEBUG - Toolbar setup completed
2025-01-14 21:56:50,225 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 21:56:50,228 - root - DEBUG - Table setup completed
2025-01-14 21:56:50,228 - root - DEBUG - UI setup completed successfully
2025-01-14 21:56:50,228 - root - DEBUG - Signal connections established
2025-01-14 21:56:50,231 - root - INFO - Scenario changed to: tes2
2025-01-14 21:56:50,231 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 21:56:50,245 - root - INFO - Well pads table populated successfully.
2025-01-14 21:56:50,255 - root - INFO - Well pads table populated successfully.
2025-01-14 21:56:50,255 - root - INFO - Initial data loaded successfully.
2025-01-14 21:56:50,255 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 21:56:53,415 - root - INFO - Scenario changed to: tes1
2025-01-14 21:56:53,416 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 21:56:53,426 - root - INFO - Well pads table populated successfully.
2025-01-14 21:57:15,448 - root - INFO - Scenario 'tes3' added successfully with ID 4. Active: 0
2025-01-14 21:57:15,461 - root - INFO - Scenario changed to: tes3
2025-01-14 21:57:15,462 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 21:57:15,463 - root - INFO - Well pads table populated successfully.
2025-01-14 21:57:15,464 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-14 21:57:15,468 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-14 21:57:15,473 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-14 21:57:15,478 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-14 21:57:15,483 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-14 21:57:15,489 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-14 21:57:15,495 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-14 21:57:16,690 - root - INFO - Scenario 4 updated with 7 wells.
2025-01-14 21:57:16,695 - root - INFO - Well pads table populated successfully.
2025-01-14 21:57:19,490 - root - INFO - Scenario changed to: tes2
2025-01-14 21:57:19,491 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 21:57:19,500 - root - INFO - Well pads table populated successfully.
2025-01-14 21:57:20,901 - root - INFO - Scenario changed to: tes1
2025-01-14 21:57:20,902 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 21:57:20,912 - root - INFO - Well pads table populated successfully.
2025-01-14 22:03:20,156 - root - DEBUG - Toolbar setup completed
2025-01-14 22:03:20,157 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:03:20,160 - root - DEBUG - Table setup completed
2025-01-14 22:03:20,160 - root - DEBUG - UI setup completed successfully
2025-01-14 22:03:20,161 - root - DEBUG - Signal connections established
2025-01-14 22:03:20,164 - root - INFO - Scenario changed to: tes3
2025-01-14 22:03:20,164 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:03:20,168 - root - INFO - Well pads table populated successfully.
2025-01-14 22:03:20,172 - root - INFO - Well pads table populated successfully.
2025-01-14 22:03:20,172 - root - INFO - Initial data loaded successfully.
2025-01-14 22:03:20,172 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:03:24,905 - root - ERROR - Error deleting pad: 'NoneType' object has no attribute 'text'
2025-01-14 22:06:01,722 - root - DEBUG - Toolbar setup completed
2025-01-14 22:06:01,723 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:06:01,726 - root - DEBUG - Table setup completed
2025-01-14 22:06:01,727 - root - DEBUG - UI setup completed successfully
2025-01-14 22:06:01,727 - root - DEBUG - Signal connections established
2025-01-14 22:06:01,730 - root - INFO - Scenario changed to: tes3
2025-01-14 22:06:01,731 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:06:01,735 - root - INFO - Well pads table populated successfully.
2025-01-14 22:06:01,738 - root - INFO - Well pads table populated successfully.
2025-01-14 22:06:01,738 - root - INFO - Initial data loaded successfully.
2025-01-14 22:06:01,738 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:06:03,859 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 22:07:33,749 - root - DEBUG - Toolbar setup completed
2025-01-14 22:07:33,750 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:07:33,753 - root - DEBUG - Table setup completed
2025-01-14 22:07:33,753 - root - DEBUG - UI setup completed successfully
2025-01-14 22:07:33,753 - root - DEBUG - Signal connections established
2025-01-14 22:07:33,757 - root - INFO - Scenario changed to: tes3
2025-01-14 22:07:33,758 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:07:33,762 - root - INFO - Well pads table populated successfully.
2025-01-14 22:07:33,765 - root - INFO - Well pads table populated successfully.
2025-01-14 22:07:33,765 - root - INFO - Initial data loaded successfully.
2025-01-14 22:07:33,765 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:07:36,156 - root - DEBUG - Selected item: WP1L1Side1Leg2
2025-01-14 22:07:36,158 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 22:08:12,711 - root - ERROR - Error deleting pad: 'NoneType' object has no attribute 'text'
2025-01-14 22:10:21,410 - root - DEBUG - Toolbar setup completed
2025-01-14 22:10:21,411 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:10:21,414 - root - DEBUG - Table setup completed
2025-01-14 22:10:21,414 - root - DEBUG - UI setup completed successfully
2025-01-14 22:10:21,414 - root - DEBUG - Signal connections established
2025-01-14 22:10:21,418 - root - INFO - Scenario changed to: tes3
2025-01-14 22:10:21,418 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:10:21,423 - root - INFO - Well pads table populated successfully.
2025-01-14 22:10:21,426 - root - INFO - Well pads table populated successfully.
2025-01-14 22:10:21,426 - root - INFO - Initial data loaded successfully.
2025-01-14 22:10:21,426 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:10:23,140 - root - DEBUG - Selected row: 0
2025-01-14 22:10:23,140 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 22:10:57,239 - root - DEBUG - UWI: WP1L1Side1Leg2
2025-01-14 22:11:17,851 - root - ERROR - Error deleting pad: 'PUDPropertiesDialog' object has no attribute 'current_scenario_id'
2025-01-14 22:13:11,750 - root - DEBUG - Toolbar setup completed
2025-01-14 22:13:11,752 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:13:11,754 - root - DEBUG - Table setup completed
2025-01-14 22:13:11,754 - root - DEBUG - UI setup completed successfully
2025-01-14 22:13:11,754 - root - DEBUG - Signal connections established
2025-01-14 22:13:11,757 - root - INFO - Scenario changed to: tes3
2025-01-14 22:13:11,758 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:13:11,761 - root - INFO - Well pads table populated successfully.
2025-01-14 22:13:11,765 - root - INFO - Well pads table populated successfully.
2025-01-14 22:13:11,766 - root - INFO - Initial data loaded successfully.
2025-01-14 22:13:11,766 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:13:14,252 - root - DEBUG - Selected row: 0
2025-01-14 22:13:14,252 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 22:13:19,653 - root - DEBUG - UWI: WP1L1Side1Leg2
2025-01-14 22:13:47,035 - root - ERROR - Error deleting pad: 'PUDPropertiesDialog' object has no attribute 'current_scenario_id'
2025-01-14 22:14:48,965 - root - DEBUG - Toolbar setup completed
2025-01-14 22:14:48,965 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:14:48,968 - root - DEBUG - Table setup completed
2025-01-14 22:14:48,968 - root - DEBUG - UI setup completed successfully
2025-01-14 22:14:48,969 - root - DEBUG - Signal connections established
2025-01-14 22:14:48,972 - root - INFO - Scenario changed to: tes3
2025-01-14 22:14:48,973 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:14:48,977 - root - INFO - Well pads table populated successfully.
2025-01-14 22:14:48,980 - root - INFO - Well pads table populated successfully.
2025-01-14 22:14:48,980 - root - INFO - Initial data loaded successfully.
2025-01-14 22:14:48,980 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:14:52,488 - root - DEBUG - Selected row: 0
2025-01-14 22:14:52,489 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-14 22:15:05,723 - root - DEBUG - UWI: WP1L1Side1Leg2
2025-01-14 22:15:29,413 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP1L1Side1Leg2
2025-01-14 22:15:34,583 - root - INFO - Pad deleted: UWI=WP1L1Side1Leg2, Scenario ID=4
2025-01-14 22:16:24,725 - root - INFO - Scenario changed to: tes2
2025-01-14 22:16:24,733 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:16:24,744 - root - INFO - Well pads table populated successfully.
2025-01-14 22:16:29,410 - root - INFO - Scenario changed to: tes3
2025-01-14 22:16:29,411 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:16:29,416 - root - INFO - Well pads table populated successfully.
2025-01-14 22:16:57,116 - root - DEBUG - Selected row: 1
2025-01-14 22:16:59,652 - root - DEBUG - UWI: WP8L1Side1Leg3
2025-01-14 22:17:00,825 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP8L1Side1Leg3
2025-01-14 22:17:00,826 - root - INFO - Pad deleted: UWI=WP8L1Side1Leg3, Scenario ID=4
2025-01-14 22:17:13,857 - root - INFO - Scenario changed to: tes2
2025-01-14 22:17:13,865 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:17:13,875 - root - INFO - Well pads table populated successfully.
2025-01-14 22:17:15,077 - root - INFO - Scenario changed to: tes3
2025-01-14 22:17:15,078 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:17:15,081 - root - INFO - Well pads table populated successfully.
2025-01-14 22:17:32,338 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:17:32,347 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:17:32,348 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:17:32,350 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:17:32,352 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:17:32,353 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:17:32,355 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:17:32,356 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:17:32,357 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:17:32,359 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:17:32,359 - root - ERROR - Error saving wells to database: 'DatabaseManager' object has no attribute 'remove_well_from_scenario'
2025-01-14 22:18:29,051 - root - DEBUG - Toolbar setup completed
2025-01-14 22:18:29,052 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:18:29,055 - root - DEBUG - Table setup completed
2025-01-14 22:18:29,055 - root - DEBUG - UI setup completed successfully
2025-01-14 22:18:29,056 - root - DEBUG - Signal connections established
2025-01-14 22:18:29,060 - root - INFO - Scenario changed to: tes3
2025-01-14 22:18:29,062 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:18:29,065 - root - INFO - Well pads table populated successfully.
2025-01-14 22:18:29,067 - root - INFO - Well pads table populated successfully.
2025-01-14 22:18:29,068 - root - INFO - Initial data loaded successfully.
2025-01-14 22:18:29,068 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:18:37,251 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:18:37,253 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:18:37,254 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:18:37,255 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:18:37,256 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:18:37,258 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:18:37,259 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:18:37,261 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:18:37,263 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:18:37,264 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:18:37,265 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:18:37,265 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:18:37,266 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:18:37,267 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:18:37,267 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:18:37,267 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:18:37,268 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:18:37,268 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:18:37,269 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:18:37,269 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:18:37,269 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:18:37,270 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:18:37,270 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:18:37,271 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:18:37,271 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:18:37,272 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:18:37,272 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:18:37,273 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:18:37,273 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:18:37,274 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:18:37,274 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:18:37,275 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:18:37,276 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:18:37,276 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:18:37,277 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:18:37,277 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:18:37,277 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:18:37,278 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:18:37,278 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:18:37,279 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:18:37,280 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:18:37,280 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:18:37,281 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:18:37,281 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:18:37,282 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:18:37,282 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:18:38,588 - root - INFO - Scenario 2 updated with 8 wells.
2025-01-14 22:18:38,598 - root - INFO - Well pads table populated successfully.
2025-01-14 22:18:45,981 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:18:45,983 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:18:45,984 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:18:45,984 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:18:45,985 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:18:45,985 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:18:45,986 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:18:45,986 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:18:45,987 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:18:45,987 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:18:45,988 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg3, UWI=2
2025-01-14 22:18:45,988 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:18:45,988 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg1, UWI=2
2025-01-14 22:18:45,989 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:18:45,989 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg3, UWI=2
2025-01-14 22:18:45,990 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:18:45,991 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg2, UWI=2
2025-01-14 22:18:45,991 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:18:45,992 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg2, UWI=2
2025-01-14 22:18:45,992 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:18:45,993 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg3, UWI=2
2025-01-14 22:18:45,993 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:18:45,994 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:18:45,994 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:18:45,995 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:18:45,995 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:18:45,995 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:18:45,996 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:18:45,996 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:18:45,997 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:18:45,997 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:18:45,997 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:18:45,998 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:18:45,998 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:18:45,999 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:18:45,999 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:18:46,000 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:18:46,000 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:18:46,001 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:18:46,001 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:18:46,002 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:18:46,002 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:18:46,003 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:18:46,003 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:18:46,004 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:18:46,004 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:18:46,005 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:18:46,005 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:18:46,006 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:18:46,006 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:18:46,007 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:18:46,007 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:18:46,008 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:18:46,994 - root - INFO - Scenario 2 updated with 1 wells.
2025-01-14 22:18:47,009 - root - INFO - Well pads table populated successfully.
2025-01-14 22:18:59,333 - root - INFO - Scenario changed to: tes2
2025-01-14 22:18:59,334 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:18:59,348 - root - INFO - Well pads table populated successfully.
2025-01-14 22:19:00,484 - root - INFO - Scenario changed to: tes3
2025-01-14 22:19:00,485 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:19:00,488 - root - INFO - Well pads table populated successfully.
2025-01-14 22:19:02,337 - root - INFO - Scenario changed to: tes2
2025-01-14 22:19:02,338 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:19:02,348 - root - INFO - Well pads table populated successfully.
2025-01-14 22:19:04,259 - root - INFO - Scenario changed to: tes3
2025-01-14 22:19:04,260 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:19:04,264 - root - INFO - Well pads table populated successfully.
2025-01-14 22:19:11,168 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:19:11,169 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:19:11,171 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:19:11,172 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:19:11,173 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:19:11,174 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:19:11,176 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:19:11,177 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:19:11,179 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:19:11,180 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:19:11,182 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:19:11,183 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:19:11,184 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:19:11,185 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:19:11,186 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:19:11,186 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:19:11,187 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:19:11,187 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:19:11,188 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:19:11,188 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:19:11,188 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:19:11,189 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:19:11,190 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:19:11,190 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:19:11,191 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:19:11,191 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:19:11,192 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:19:11,192 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:19:11,192 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:19:11,193 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:19:11,193 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:19:11,193 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:19:11,194 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:19:11,194 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:19:11,195 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:19:11,195 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:19:11,196 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:19:11,196 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:19:11,196 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:19:11,196 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:19:11,197 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:19:12,352 - root - INFO - Scenario 2 updated with 13 wells.
2025-01-14 22:19:12,362 - root - INFO - Well pads table populated successfully.
2025-01-14 22:19:21,391 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:19:21,392 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:19:21,393 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:19:21,394 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:19:21,395 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:19:21,396 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:19:21,397 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:19:21,399 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:19:21,400 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:19:21,401 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:19:21,402 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:19:21,404 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:19:21,404 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:19:21,405 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:19:21,405 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:19:21,406 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:19:21,407 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:19:21,407 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:19:21,408 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:19:21,408 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:19:21,409 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:19:21,409 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:19:21,410 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:19:21,410 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:19:21,411 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:19:21,411 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:19:21,411 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:19:21,412 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:19:21,412 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:19:21,412 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:19:21,413 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:19:21,413 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:19:21,414 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:19:21,414 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:19:21,415 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:19:21,415 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:19:21,416 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:19:21,416 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:19:21,416 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:19:21,417 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:19:21,417 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:19:21,418 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:19:21,418 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:19:22,569 - root - INFO - Scenario 2 updated with 11 wells.
2025-01-14 22:19:22,581 - root - INFO - Well pads table populated successfully.
2025-01-14 22:20:28,669 - root - DEBUG - Toolbar setup completed
2025-01-14 22:20:28,670 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:20:28,672 - root - DEBUG - Table setup completed
2025-01-14 22:20:28,673 - root - DEBUG - UI setup completed successfully
2025-01-14 22:20:28,673 - root - DEBUG - Signal connections established
2025-01-14 22:20:28,677 - root - INFO - Scenario changed to: tes3
2025-01-14 22:20:28,678 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:20:28,682 - root - INFO - Well pads table populated successfully.
2025-01-14 22:20:28,684 - root - INFO - Well pads table populated successfully.
2025-01-14 22:20:28,684 - root - INFO - Initial data loaded successfully.
2025-01-14 22:20:28,685 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:20:36,882 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:20:36,884 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:20:36,886 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:20:36,887 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:20:36,888 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:20:36,890 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:20:36,891 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:20:36,892 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:20:36,895 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:20:36,897 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:20:36,898 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:20:36,898 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:20:36,899 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:20:36,899 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:20:36,900 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:20:36,900 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:20:36,901 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:20:36,901 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:20:36,902 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:20:36,902 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:20:36,903 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:20:36,903 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:20:36,904 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:20:36,904 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:20:36,905 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:20:36,905 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:20:36,906 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:20:36,906 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:20:36,907 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:20:36,907 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:20:36,908 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:20:36,908 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:20:36,909 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:20:36,909 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:20:36,910 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:20:36,910 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:20:36,910 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:20:36,911 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:20:36,911 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:20:36,911 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:20:36,912 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:20:36,912 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:20:36,913 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:20:36,913 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:20:36,914 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:20:36,924 - root - INFO - Well pads table populated successfully.
2025-01-14 22:20:38,158 - root - INFO - Scenario 2 updated with 9 wells.
2025-01-14 22:20:38,175 - root - INFO - Well pads table populated successfully.
2025-01-14 22:20:59,397 - root - DEBUG - Table item changed - Row: 11, Column: 0, Value: c
2025-01-14 22:20:59,398 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-14 22:22:42,658 - root - DEBUG - Toolbar setup completed
2025-01-14 22:22:42,659 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:22:42,661 - root - DEBUG - Table setup completed
2025-01-14 22:22:42,661 - root - DEBUG - UI setup completed successfully
2025-01-14 22:22:42,662 - root - DEBUG - Signal connections established
2025-01-14 22:22:42,665 - root - INFO - Scenario changed to: tes3
2025-01-14 22:22:42,666 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:22:42,669 - root - INFO - Well pads table populated successfully.
2025-01-14 22:22:42,672 - root - INFO - Well pads table populated successfully.
2025-01-14 22:22:42,672 - root - INFO - Initial data loaded successfully.
2025-01-14 22:22:42,672 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:22:44,167 - root - INFO - Adding new scenario
2025-01-14 22:22:49,892 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:22:49,894 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:22:49,895 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:22:49,896 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:22:49,897 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:22:49,898 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:22:49,899 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:22:49,901 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:22:49,902 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:22:49,903 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:22:49,904 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:22:49,904 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:22:49,905 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:22:49,906 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:22:49,906 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:22:49,907 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:22:49,907 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:22:49,908 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:22:49,908 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:22:49,909 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:22:49,909 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:22:49,909 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:22:49,910 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:22:49,910 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:22:49,911 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:22:49,911 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:22:49,911 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:22:49,912 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:22:49,912 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:22:49,912 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:22:49,913 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:22:49,913 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:22:49,914 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:22:49,914 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:22:49,915 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:22:49,915 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:22:49,915 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:22:49,916 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:22:49,916 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:22:49,917 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:22:49,918 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:22:49,918 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:22:49,919 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:22:49,919 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:22:49,920 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:22:51,230 - root - INFO - Scenario 2 updated with 9 wells.
2025-01-14 22:22:51,241 - root - INFO - Well pads table populated successfully.
2025-01-14 22:23:10,195 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:23:10,196 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:23:10,197 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:23:10,197 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:23:10,198 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:23:10,198 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:23:10,198 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:23:10,199 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:23:10,199 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:23:10,200 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:23:10,200 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg3, UWI=2
2025-01-14 22:23:10,200 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:23:10,201 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg1, UWI=2
2025-01-14 22:23:10,201 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:23:10,202 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg3, UWI=2
2025-01-14 22:23:10,202 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:23:10,203 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg2, UWI=2
2025-01-14 22:23:10,203 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:23:10,204 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg2, UWI=2
2025-01-14 22:23:10,204 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:23:10,205 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg3, UWI=2
2025-01-14 22:23:10,205 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:23:10,206 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:23:10,206 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:23:10,206 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:23:10,207 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:23:10,207 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:23:10,207 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:23:10,208 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:23:10,208 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:23:10,209 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:23:10,209 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:23:10,211 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:23:10,211 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:23:10,212 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:23:10,212 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:23:10,213 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:23:10,213 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:23:10,214 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:23:10,214 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:23:10,215 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:23:10,215 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:23:10,216 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:23:10,216 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:23:10,217 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:23:10,217 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:23:10,217 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:23:10,218 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:23:10,218 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:23:10,218 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:23:10,219 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:23:10,219 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:23:10,220 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:23:11,392 - root - INFO - Scenario 2 updated with 1 wells.
2025-01-14 22:23:11,403 - root - INFO - Well pads table populated successfully.
2025-01-14 22:23:24,686 - root - INFO - Scenario changed to: tes2
2025-01-14 22:23:24,687 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:23:24,697 - root - INFO - Well pads table populated successfully.
2025-01-14 22:23:27,499 - root - INFO - Scenario changed to: tes1
2025-01-14 22:23:27,500 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 22:23:27,510 - root - INFO - Well pads table populated successfully.
2025-01-14 22:23:28,954 - root - INFO - Scenario changed to: tes2
2025-01-14 22:23:28,955 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:23:28,968 - root - INFO - Well pads table populated successfully.
2025-01-14 22:23:30,431 - root - INFO - Scenario changed to: tes3
2025-01-14 22:23:30,432 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:23:30,435 - root - INFO - Well pads table populated successfully.
2025-01-14 22:23:32,355 - root - INFO - Scenario changed to: tes2
2025-01-14 22:23:32,355 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:23:32,366 - root - INFO - Well pads table populated successfully.
2025-01-14 22:24:06,864 - root - DEBUG - Toolbar setup completed
2025-01-14 22:24:06,865 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:24:06,867 - root - DEBUG - Table setup completed
2025-01-14 22:24:06,867 - root - DEBUG - UI setup completed successfully
2025-01-14 22:24:06,867 - root - DEBUG - Signal connections established
2025-01-14 22:24:06,871 - root - INFO - Scenario changed to: tes3
2025-01-14 22:24:06,872 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:24:06,876 - root - INFO - Well pads table populated successfully.
2025-01-14 22:24:06,878 - root - INFO - Well pads table populated successfully.
2025-01-14 22:24:06,878 - root - INFO - Initial data loaded successfully.
2025-01-14 22:24:06,878 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:24:09,294 - root - INFO - Scenario changed to: tes2
2025-01-14 22:24:09,295 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:24:09,306 - root - INFO - Well pads table populated successfully.
2025-01-14 22:25:27,308 - root - DEBUG - Toolbar setup completed
2025-01-14 22:25:27,309 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:25:27,312 - root - DEBUG - Table setup completed
2025-01-14 22:25:27,312 - root - DEBUG - UI setup completed successfully
2025-01-14 22:25:27,313 - root - DEBUG - Signal connections established
2025-01-14 22:25:27,316 - root - INFO - Scenario changed to: tes3
2025-01-14 22:25:27,318 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:25:27,322 - root - INFO - Well pads table populated successfully.
2025-01-14 22:25:27,324 - root - INFO - Well pads table populated successfully.
2025-01-14 22:25:27,324 - root - INFO - Initial data loaded successfully.
2025-01-14 22:25:27,325 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:25:28,451 - root - INFO - Adding new scenario
2025-01-14 22:25:33,229 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:25:33,230 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:25:33,231 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:25:33,231 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:25:33,232 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:25:33,232 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:25:33,232 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:25:33,233 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:25:33,233 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:25:33,233 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:25:33,234 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg3, UWI=2
2025-01-14 22:25:33,234 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:25:33,235 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg1, UWI=2
2025-01-14 22:25:33,235 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:25:33,235 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg3, UWI=2
2025-01-14 22:25:33,236 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:25:33,237 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg2, UWI=2
2025-01-14 22:25:33,237 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:25:33,238 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg2, UWI=2
2025-01-14 22:25:33,238 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:25:33,239 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg3, UWI=2
2025-01-14 22:25:33,239 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:25:33,240 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:25:33,240 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:25:33,240 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:25:33,240 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:25:33,241 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:25:33,241 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:25:33,242 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:25:33,242 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:25:33,243 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:25:33,244 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:25:33,244 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:25:33,245 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:25:33,245 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:25:33,246 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:25:33,246 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:25:33,246 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:25:33,247 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:25:33,247 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:25:33,248 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:25:33,248 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:25:33,248 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:25:33,249 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:25:33,249 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:25:33,249 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:25:33,250 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:25:33,250 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:25:33,251 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:25:33,251 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:25:33,252 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:25:33,252 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:25:33,253 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:25:34,424 - root - INFO - Scenario 2 updated with 1 wells.
2025-01-14 22:25:34,425 - root - ERROR - Error in scenario_pud_select: PUDPropertiesDialog.on_scenario_changed() missing 1 required positional argument: 'scenario_name'
2025-01-14 22:27:50,094 - root - DEBUG - Toolbar setup completed
2025-01-14 22:27:50,095 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:27:50,098 - root - DEBUG - Table setup completed
2025-01-14 22:27:50,098 - root - DEBUG - UI setup completed successfully
2025-01-14 22:27:50,099 - root - DEBUG - Signal connections established
2025-01-14 22:27:50,103 - root - INFO - Scenario changed to: tes3
2025-01-14 22:27:50,104 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:27:50,107 - root - INFO - Well pads table populated successfully.
2025-01-14 22:27:50,110 - root - INFO - Well pads table populated successfully.
2025-01-14 22:27:50,110 - root - INFO - Initial data loaded successfully.
2025-01-14 22:27:50,110 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:27:58,024 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:27:58,026 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:27:58,027 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:27:58,027 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:27:58,028 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:27:58,028 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:27:58,029 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:27:58,030 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:27:58,031 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:27:58,031 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:27:58,032 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg3, UWI=2
2025-01-14 22:27:58,032 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:27:58,033 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg1, UWI=2
2025-01-14 22:27:58,033 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:27:58,034 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg3, UWI=2
2025-01-14 22:27:58,034 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:27:58,036 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg2, UWI=2
2025-01-14 22:27:58,036 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:27:58,037 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg2, UWI=2
2025-01-14 22:27:58,037 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:27:58,038 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg3, UWI=2
2025-01-14 22:27:58,038 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:27:58,039 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:27:58,039 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:27:58,039 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:27:58,039 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:27:58,040 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:27:58,040 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:27:58,041 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:27:58,041 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:27:58,041 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:27:58,042 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:27:58,042 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:27:58,043 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:27:58,043 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:27:58,043 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:27:58,045 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:27:58,045 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:27:58,045 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:27:58,045 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:27:58,046 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:27:58,046 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:27:58,047 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:27:58,047 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:27:58,048 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:27:58,048 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:27:58,048 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:27:58,049 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:27:58,049 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:27:58,049 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:27:58,050 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:27:58,050 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:27:58,051 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:27:59,172 - root - INFO - Scenario 2 updated with 1 wells.
2025-01-14 22:27:59,172 - root - INFO - Scenario changed to: tes3
2025-01-14 22:27:59,173 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:27:59,177 - root - INFO - Well pads table populated successfully.
2025-01-14 22:27:59,183 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:04,714 - root - INFO - Scenario changed to: tes2
2025-01-14 22:28:04,715 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:28:04,725 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:06,077 - root - INFO - Scenario changed to: tes3
2025-01-14 22:28:06,078 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:28:06,082 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:14,236 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:28:14,237 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:28:14,238 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:28:14,239 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:28:14,241 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:28:14,242 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:28:14,244 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:28:14,245 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:28:14,245 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:28:14,246 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:28:14,246 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:28:14,247 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:28:14,247 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:28:14,247 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:28:14,248 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:28:14,249 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:28:14,249 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:28:14,251 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:28:14,251 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:28:14,252 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:28:14,253 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:28:14,253 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:28:14,254 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:28:14,255 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:28:14,255 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:28:14,256 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:28:14,256 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:28:14,258 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:28:14,258 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:28:14,259 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:28:14,260 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:28:14,261 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:28:14,261 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:28:14,262 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:28:14,262 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:28:14,263 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:28:14,263 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:28:14,264 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:28:14,264 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:28:14,265 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:28:14,265 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:28:14,266 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:28:14,267 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:28:14,267 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:28:14,268 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:28:14,268 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:28:14,269 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:28:14,270 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:28:15,437 - root - INFO - Scenario 2 updated with 6 wells.
2025-01-14 22:28:15,437 - root - INFO - Scenario changed to: tes3
2025-01-14 22:28:15,438 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:28:15,441 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:15,445 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:17,798 - root - INFO - Scenario changed to: tes1
2025-01-14 22:28:17,799 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 22:28:17,808 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:27,808 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:28:27,809 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:28:27,810 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:28:27,810 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:28:27,811 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:28:27,811 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:28:27,812 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:28:27,812 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:28:27,813 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:28:27,813 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:28:27,814 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg3, UWI=2
2025-01-14 22:28:27,814 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:28:27,814 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg1, UWI=2
2025-01-14 22:28:27,815 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:28:27,815 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg3, UWI=2
2025-01-14 22:28:27,816 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:28:27,816 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg2, UWI=2
2025-01-14 22:28:27,816 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:28:27,817 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg2, UWI=2
2025-01-14 22:28:27,818 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:28:27,819 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg3, UWI=2
2025-01-14 22:28:27,819 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:28:27,820 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:28:27,820 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:28:27,821 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:28:27,821 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:28:27,822 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:28:27,822 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:28:27,823 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:28:27,823 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:28:27,824 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:28:27,824 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:28:27,825 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:28:27,825 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:28:27,826 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:28:27,826 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:28:27,827 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:28:27,827 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:28:27,827 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:28:27,828 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:28:27,828 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:28:27,828 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:28:27,829 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:28:27,829 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:28:27,830 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:28:27,830 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:28:27,830 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:28:27,830 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:28:27,831 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:28:27,831 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:28:27,832 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:28:27,832 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:28:27,833 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:28:29,062 - root - INFO - Scenario 2 updated with 1 wells.
2025-01-14 22:28:29,062 - root - INFO - Scenario changed to: tes3
2025-01-14 22:28:29,063 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:28:29,067 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:29,070 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:35,321 - root - INFO - Scenario changed to: tes2
2025-01-14 22:28:35,322 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:28:35,335 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:36,511 - root - INFO - Scenario changed to: tes1
2025-01-14 22:28:36,512 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 22:28:36,522 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:38,407 - root - INFO - Scenario changed to: tes3
2025-01-14 22:28:38,408 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:28:38,411 - root - INFO - Well pads table populated successfully.
2025-01-14 22:28:47,605 - root - INFO - Scenario changed to: tes1
2025-01-14 22:28:47,606 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 22:28:47,617 - root - INFO - Well pads table populated successfully.
2025-01-14 22:29:30,108 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:29:30,109 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:29:30,110 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:29:30,111 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:29:30,113 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:29:30,114 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:29:30,115 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:29:30,117 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:29:30,117 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:29:30,118 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:29:30,118 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg2, UWI=2
2025-01-14 22:29:30,119 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:29:30,119 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:29:30,119 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:29:30,120 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:29:30,120 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:29:30,121 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:29:30,121 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:29:30,122 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:29:30,122 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:29:30,123 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:29:30,123 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:29:30,124 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:29:30,124 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:29:30,125 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:29:30,126 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:29:30,127 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:29:30,127 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:29:30,128 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:29:30,128 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:29:30,129 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:29:30,129 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:29:30,130 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:29:30,130 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:29:30,131 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:29:30,131 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:29:30,132 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:29:30,132 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:29:30,133 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:29:30,133 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:29:30,134 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:29:30,134 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:29:30,135 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:29:30,135 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:29:30,136 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:29:30,136 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:29:30,137 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:29:31,391 - root - INFO - Scenario 2 updated with 7 wells.
2025-01-14 22:29:31,391 - root - INFO - Scenario changed to: tes3
2025-01-14 22:29:31,392 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:29:31,395 - root - INFO - Well pads table populated successfully.
2025-01-14 22:29:31,398 - root - INFO - Well pads table populated successfully.
2025-01-14 22:29:39,097 - root - INFO - Scenario changed to: tes2
2025-01-14 22:29:39,098 - root - DEBUG - UI updated for scenario: tes2
2025-01-14 22:29:39,108 - root - INFO - Well pads table populated successfully.
2025-01-14 22:29:53,278 - root - INFO - Scenario changed to: tes3
2025-01-14 22:29:53,279 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:29:53,283 - root - INFO - Well pads table populated successfully.
2025-01-14 22:29:55,586 - root - INFO - Scenario changed to: tes1
2025-01-14 22:29:55,587 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 22:29:55,600 - root - INFO - Well pads table populated successfully.
2025-01-14 22:30:37,755 - root - DEBUG - Toolbar setup completed
2025-01-14 22:30:37,756 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:30:37,758 - root - DEBUG - Table setup completed
2025-01-14 22:30:37,758 - root - DEBUG - UI setup completed successfully
2025-01-14 22:30:37,758 - root - DEBUG - Signal connections established
2025-01-14 22:30:37,762 - root - INFO - Scenario changed to: tes3
2025-01-14 22:30:37,763 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:30:37,766 - root - INFO - Well pads table populated successfully.
2025-01-14 22:30:37,769 - root - INFO - Well pads table populated successfully.
2025-01-14 22:30:37,769 - root - INFO - Initial data loaded successfully.
2025-01-14 22:30:37,769 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:30:39,969 - root - INFO - Scenario changed to: tes1
2025-01-14 22:30:39,970 - root - DEBUG - UI updated for scenario: tes1
2025-01-14 22:30:39,979 - root - INFO - Well pads table populated successfully.
2025-01-14 22:30:55,695 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:30:55,696 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-14 22:30:55,697 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg1, UWI=2
2025-01-14 22:30:55,697 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-14 22:30:55,698 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg1, UWI=2
2025-01-14 22:30:55,698 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-14 22:30:55,699 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg2, UWI=2
2025-01-14 22:30:55,699 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:30:55,700 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg3, UWI=2
2025-01-14 22:30:55,700 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:30:55,700 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg3, UWI=2
2025-01-14 22:30:55,701 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:30:55,701 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg1, UWI=2
2025-01-14 22:30:55,701 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-14 22:30:55,702 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg3, UWI=2
2025-01-14 22:30:55,702 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:30:55,703 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg2, UWI=2
2025-01-14 22:30:55,704 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-14 22:30:55,704 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg2, UWI=2
2025-01-14 22:30:55,705 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:30:55,706 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg3, UWI=2
2025-01-14 22:30:55,706 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-14 22:30:55,707 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg1, UWI=2
2025-01-14 22:30:55,707 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-14 22:30:55,708 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg1, UWI=2
2025-01-14 22:30:55,708 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-14 22:30:55,709 - root - INFO - Deleted pad: Scenario ID=WP9L1Side1Leg1, UWI=2
2025-01-14 22:30:55,709 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-14 22:30:55,710 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg1, UWI=2
2025-01-14 22:30:55,710 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-14 22:30:55,711 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg1, UWI=2
2025-01-14 22:30:55,711 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-14 22:30:55,711 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg2, UWI=2
2025-01-14 22:30:55,712 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-14 22:30:55,712 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg3, UWI=2
2025-01-14 22:30:55,712 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-14 22:30:55,713 - root - INFO - Deleted pad: Scenario ID=WP6L1Side1Leg3, UWI=2
2025-01-14 22:30:55,713 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-14 22:30:55,714 - root - INFO - Deleted pad: Scenario ID=WP7L1Side1Leg2, UWI=2
2025-01-14 22:30:55,714 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-14 22:30:55,715 - root - INFO - Deleted pad: Scenario ID=WP2L1Side1Leg2, UWI=2
2025-01-14 22:30:55,715 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-14 22:30:55,715 - root - INFO - Deleted pad: Scenario ID=WP4L1Side1Leg3, UWI=2
2025-01-14 22:30:55,716 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-14 22:30:55,716 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg2, UWI=2
2025-01-14 22:30:55,716 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-14 22:30:55,717 - root - INFO - Deleted pad: Scenario ID=WP8L1Side1Leg2, UWI=2
2025-01-14 22:30:55,717 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-14 22:30:55,718 - root - INFO - Deleted pad: Scenario ID=WP3L1Side1Leg3, UWI=2
2025-01-14 22:30:55,718 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-14 22:30:55,719 - root - INFO - Deleted pad: Scenario ID=WP1L1Side1Leg3, UWI=2
2025-01-14 22:30:55,719 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-14 22:30:55,719 - root - INFO - Deleted pad: Scenario ID=WP5L1Side1Leg1, UWI=2
2025-01-14 22:32:15,915 - root - DEBUG - Toolbar setup completed
2025-01-14 22:32:15,916 - root - DEBUG - Scenario dropdown setup completed
2025-01-14 22:32:15,918 - root - DEBUG - Table setup completed
2025-01-14 22:32:15,919 - root - DEBUG - UI setup completed successfully
2025-01-14 22:32:15,919 - root - DEBUG - Signal connections established
2025-01-14 22:32:15,924 - root - INFO - Scenario changed to: tes3
2025-01-14 22:32:15,925 - root - DEBUG - UI updated for scenario: tes3
2025-01-14 22:32:15,930 - root - INFO - Well pads table populated successfully.
2025-01-14 22:32:15,933 - root - INFO - Well pads table populated successfully.
2025-01-14 22:32:15,933 - root - INFO - Initial data loaded successfully.
2025-01-14 22:32:15,933 - root - INFO - PUDPropertiesDialog initialized
2025-01-14 22:32:24,410 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-14 22:32:24,422 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-14 22:32:24,428 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP7L1Side1Leg3
2025-01-14 22:32:24,428 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-14 22:32:24,432 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP2L1Side1Leg3
2025-01-14 22:32:24,433 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-14 22:32:24,437 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP1L1Side1Leg1
2025-01-14 22:32:24,438 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-14 22:32:24,443 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP4L1Side1Leg2
2025-01-14 22:32:24,443 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-14 22:32:24,448 - root - INFO - Deleted pad: Scenario ID=4, UWI=WP9L1Side1Leg3
2025-01-14 22:32:25,744 - root - INFO - Scenario 4 updated with 1 wells.
2025-01-14 22:32:25,747 - root - INFO - Well pads table populated successfully.
2025-01-15 09:23:44,785 - root - DEBUG - Toolbar setup completed
2025-01-15 09:23:44,793 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:23:44,795 - root - DEBUG - Table setup completed
2025-01-15 09:23:44,795 - root - DEBUG - UI setup completed successfully
2025-01-15 09:23:44,796 - root - DEBUG - Signal connections established
2025-01-15 09:23:44,797 - root - INFO - No scenarios to load.
2025-01-15 09:23:44,798 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:23:46,117 - root - ERROR - Error in scenario_pud_select: 'PUDWellSelector' object has no attribute 'decline_curve_input'
2025-01-15 09:26:35,442 - root - DEBUG - Toolbar setup completed
2025-01-15 09:26:35,443 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:26:35,446 - root - DEBUG - Table setup completed
2025-01-15 09:26:35,446 - root - DEBUG - UI setup completed successfully
2025-01-15 09:26:35,446 - root - DEBUG - Signal connections established
2025-01-15 09:26:35,448 - root - INFO - No scenarios to load.
2025-01-15 09:26:35,448 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:26:36,645 - root - ERROR - Error in scenario_pud_select: Cannot operate on a closed database.
2025-01-15 09:32:38,915 - root - DEBUG - Toolbar setup completed
2025-01-15 09:32:38,916 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:32:38,919 - root - DEBUG - Table setup completed
2025-01-15 09:32:38,919 - root - DEBUG - UI setup completed successfully
2025-01-15 09:32:38,919 - root - DEBUG - Signal connections established
2025-01-15 09:32:38,921 - root - INFO - No scenarios to load.
2025-01-15 09:32:38,921 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:33:00,569 - root - INFO - Dialog closed successfully
2025-01-15 09:33:14,974 - root - DEBUG - Toolbar setup completed
2025-01-15 09:33:14,974 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:33:14,976 - root - DEBUG - Table setup completed
2025-01-15 09:33:14,976 - root - DEBUG - UI setup completed successfully
2025-01-15 09:33:14,976 - root - DEBUG - Signal connections established
2025-01-15 09:33:14,978 - root - INFO - No scenarios to load.
2025-01-15 09:33:14,978 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:33:24,936 - root - INFO - Scenario 'First one' added successfully with ID 2. Active: 0
2025-01-15 09:33:24,950 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 09:33:24,951 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 09:33:24,952 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 09:33:24,953 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 09:33:24,953 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 09:33:24,954 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 09:33:24,954 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 09:33:24,954 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 09:33:24,955 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 09:33:24,955 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 09:33:24,956 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 09:33:24,957 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 09:33:24,957 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 09:33:24,958 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 09:33:24,958 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 09:33:24,958 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 09:33:24,959 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 09:33:24,959 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 09:33:24,960 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 09:33:24,960 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 09:33:24,961 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 09:33:24,961 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 09:33:24,962 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 09:33:24,962 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 09:33:24,963 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 09:33:24,963 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 09:33:24,964 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 09:33:26,147 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-15 09:33:26,149 - root - INFO - Well pads table populated successfully.
2025-01-15 09:34:25,075 - root - DEBUG - Toolbar setup completed
2025-01-15 09:34:25,076 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:34:25,079 - root - DEBUG - Table setup completed
2025-01-15 09:34:25,080 - root - DEBUG - UI setup completed successfully
2025-01-15 09:34:25,080 - root - DEBUG - Signal connections established
2025-01-15 09:34:25,085 - root - INFO - Well pads table populated successfully.
2025-01-15 09:34:25,086 - root - INFO - Initial data loaded successfully.
2025-01-15 09:34:25,086 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:34:30,324 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 09:34:30,325 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 09:34:30,326 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 09:34:30,327 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 09:34:30,328 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 09:34:30,329 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 09:34:30,330 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 09:34:30,331 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 09:34:30,332 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 09:34:30,333 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 09:34:30,334 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 09:34:30,335 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 09:34:30,335 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 09:34:30,337 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 09:34:30,338 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 09:34:30,339 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 09:34:30,339 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 09:34:30,340 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 09:34:30,341 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 09:34:30,342 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 09:34:30,343 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 09:34:30,344 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 09:34:30,345 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 09:34:30,345 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 09:34:30,346 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 09:34:30,347 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 09:34:30,348 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 09:34:31,678 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-15 09:34:31,679 - root - INFO - Well pads table populated successfully.
2025-01-15 09:36:09,404 - root - DEBUG - Toolbar setup completed
2025-01-15 09:36:09,405 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:36:09,406 - root - DEBUG - Table setup completed
2025-01-15 09:36:09,406 - root - DEBUG - UI setup completed successfully
2025-01-15 09:36:09,407 - root - DEBUG - Signal connections established
2025-01-15 09:36:09,411 - root - INFO - Well pads table populated successfully.
2025-01-15 09:36:09,412 - root - INFO - Initial data loaded successfully.
2025-01-15 09:36:09,412 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:36:13,536 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 09:36:13,536 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 09:36:13,537 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 09:36:13,538 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 09:36:13,539 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 09:36:13,539 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 09:36:13,540 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 09:36:13,541 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 09:36:13,542 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 09:36:13,543 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 09:36:13,544 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 09:36:13,545 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 09:36:13,546 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 09:36:13,547 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 09:36:13,548 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 09:36:13,549 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 09:36:13,550 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 09:36:13,551 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 09:36:13,552 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 09:36:13,552 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 09:36:13,553 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 09:36:13,554 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 09:36:13,555 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 09:36:13,556 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 09:36:13,557 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 09:36:13,557 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 09:36:13,558 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 09:36:14,724 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-15 09:36:14,726 - root - INFO - Well pads table populated successfully.
2025-01-15 09:39:34,026 - root - DEBUG - Toolbar setup completed
2025-01-15 09:39:34,028 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:39:34,030 - root - DEBUG - Table setup completed
2025-01-15 09:39:34,030 - root - DEBUG - UI setup completed successfully
2025-01-15 09:39:34,031 - root - DEBUG - Signal connections established
2025-01-15 09:39:34,036 - root - INFO - Well pads table populated successfully.
2025-01-15 09:39:34,036 - root - INFO - Initial data loaded successfully.
2025-01-15 09:39:34,036 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:39:38,203 - root - ERROR - Error saving wells to database: name 'decline_curve_type' is not defined
2025-01-15 09:39:42,714 - root - INFO - Well pads table populated successfully.
2025-01-15 09:41:00,201 - root - DEBUG - Toolbar setup completed
2025-01-15 09:41:00,204 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:41:00,207 - root - DEBUG - Table setup completed
2025-01-15 09:41:00,207 - root - DEBUG - UI setup completed successfully
2025-01-15 09:41:00,208 - root - DEBUG - Signal connections established
2025-01-15 09:41:00,212 - root - INFO - Well pads table populated successfully.
2025-01-15 09:41:00,212 - root - INFO - Initial data loaded successfully.
2025-01-15 09:41:00,212 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:41:07,417 - root - INFO - Scenario 'First one1' added successfully with ID 3. Active: 0
2025-01-15 09:41:07,432 - root - INFO - Scenario changed to: First one1
2025-01-15 09:41:07,433 - root - DEBUG - UI updated for scenario: First one1
2025-01-15 09:41:07,434 - root - INFO - Well pads table populated successfully.
2025-01-15 09:41:07,435 - root - ERROR - Error saving wells to database: 'decline_curve_type'
2025-01-15 09:41:12,792 - root - INFO - Well pads table populated successfully.
2025-01-15 09:45:35,271 - root - DEBUG - Toolbar setup completed
2025-01-15 09:45:35,271 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:45:35,275 - root - DEBUG - Table setup completed
2025-01-15 09:45:35,275 - root - DEBUG - UI setup completed successfully
2025-01-15 09:45:35,275 - root - DEBUG - Signal connections established
2025-01-15 09:45:35,279 - root - INFO - Scenario changed to: First one1
2025-01-15 09:45:35,281 - root - DEBUG - UI updated for scenario: First one1
2025-01-15 09:45:35,282 - root - INFO - Well pads table populated successfully.
2025-01-15 09:45:35,283 - root - INFO - Well pads table populated successfully.
2025-01-15 09:45:35,283 - root - INFO - Initial data loaded successfully.
2025-01-15 09:45:35,283 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:45:41,350 - root - INFO - Scenario 'First one2' added successfully with ID 4. Active: 0
2025-01-15 09:45:41,364 - root - INFO - Scenario changed to: First one2
2025-01-15 09:45:41,365 - root - DEBUG - UI updated for scenario: First one2
2025-01-15 09:45:41,366 - root - INFO - Well pads table populated successfully.
2025-01-15 09:45:41,367 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 09:45:41,368 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 09:45:41,368 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 09:45:41,369 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 09:45:41,370 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 09:45:41,371 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 09:45:41,372 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 09:45:41,373 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 09:45:41,373 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 09:45:41,374 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 09:45:41,374 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 09:45:41,375 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 09:45:41,376 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 09:45:41,377 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 09:45:41,378 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 09:45:41,378 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 09:45:41,380 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 09:45:41,381 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 09:45:41,382 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 09:45:41,383 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 09:45:41,384 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 09:45:41,385 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 09:45:41,387 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 09:45:41,389 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 09:45:41,391 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 09:45:41,392 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 09:45:41,393 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 09:45:42,568 - root - INFO - Scenario 4 updated with 27 wells.
2025-01-15 09:45:42,569 - root - INFO - Well pads table populated successfully.
2025-01-15 09:48:50,618 - root - DEBUG - Toolbar setup completed
2025-01-15 09:48:50,620 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:48:50,622 - root - DEBUG - Table setup completed
2025-01-15 09:48:50,622 - root - DEBUG - UI setup completed successfully
2025-01-15 09:48:50,622 - root - DEBUG - Signal connections established
2025-01-15 09:48:50,627 - root - INFO - Scenario changed to: First one2
2025-01-15 09:48:50,627 - root - DEBUG - UI updated for scenario: First one2
2025-01-15 09:48:50,628 - root - INFO - Well pads table populated successfully.
2025-01-15 09:48:50,629 - root - INFO - Well pads table populated successfully.
2025-01-15 09:48:50,630 - root - INFO - Initial data loaded successfully.
2025-01-15 09:48:50,630 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:48:56,274 - root - INFO - Scenario 'First one233' added successfully with ID 5. Active: 0
2025-01-15 09:48:56,288 - root - INFO - Scenario changed to: First one233
2025-01-15 09:48:56,288 - root - DEBUG - UI updated for scenario: First one233
2025-01-15 09:48:56,290 - root - INFO - Well pads table populated successfully.
2025-01-15 09:48:56,290 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 09:48:56,292 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 09:51:08,987 - root - DEBUG - Toolbar setup completed
2025-01-15 09:51:08,988 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 09:51:08,992 - root - DEBUG - Table setup completed
2025-01-15 09:51:08,992 - root - DEBUG - UI setup completed successfully
2025-01-15 09:51:08,993 - root - DEBUG - Signal connections established
2025-01-15 09:51:08,997 - root - INFO - Scenario changed to: First one233
2025-01-15 09:51:08,998 - root - DEBUG - UI updated for scenario: First one233
2025-01-15 09:51:08,999 - root - INFO - Well pads table populated successfully.
2025-01-15 09:51:08,999 - root - INFO - Well pads table populated successfully.
2025-01-15 09:51:09,000 - root - INFO - Initial data loaded successfully.
2025-01-15 09:51:09,000 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 09:51:15,998 - root - INFO - Scenario 'First one567' added successfully with ID 6. Active: 0
2025-01-15 09:51:16,014 - root - INFO - Scenario changed to: First one567
2025-01-15 09:51:16,015 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 09:51:16,016 - root - INFO - Well pads table populated successfully.
2025-01-15 09:51:16,017 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 09:51:16,019 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 09:51:19,184 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 09:51:19,896 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 09:51:20,270 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 09:51:20,631 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 09:51:21,029 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 09:51:21,394 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 09:51:21,755 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 09:51:22,133 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 09:51:22,533 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 09:51:22,895 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 09:51:23,243 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 09:51:23,613 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 09:51:23,962 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 09:51:24,332 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 09:51:24,704 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 09:51:25,083 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 09:51:25,452 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 09:51:26,431 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 09:51:30,585 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 09:51:30,597 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 09:51:30,604 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 09:51:30,611 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 09:51:30,618 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 09:51:30,625 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 09:51:30,632 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 09:51:30,640 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 09:51:32,345 - root - INFO - Scenario 6 updated with 27 wells.
2025-01-15 09:51:34,494 - root - INFO - Well pads table populated successfully.
2025-01-15 10:11:12,633 - root - DEBUG - Toolbar setup completed
2025-01-15 10:11:12,634 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 10:11:12,636 - root - DEBUG - Table setup completed
2025-01-15 10:11:12,637 - root - DEBUG - UI setup completed successfully
2025-01-15 10:11:12,637 - root - DEBUG - Signal connections established
2025-01-15 10:11:12,641 - root - INFO - Scenario changed to: First one567
2025-01-15 10:11:12,642 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 10:11:12,695 - root - INFO - Well pads table populated successfully.
2025-01-15 10:11:12,753 - root - INFO - Well pads table populated successfully.
2025-01-15 10:11:12,753 - root - INFO - Initial data loaded successfully.
2025-01-15 10:11:12,753 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 10:14:02,585 - root - INFO - Scenario 'test' added successfully with ID 7. Active: 0
2025-01-15 10:14:02,671 - root - INFO - Well pads table populated successfully.
2025-01-15 10:24:29,376 - root - DEBUG - Toolbar setup completed
2025-01-15 10:24:29,378 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 10:24:29,380 - root - DEBUG - Table setup completed
2025-01-15 10:24:29,380 - root - DEBUG - UI setup completed successfully
2025-01-15 10:24:29,380 - root - DEBUG - Signal connections established
2025-01-15 10:24:29,383 - root - INFO - Scenario changed to: First one567
2025-01-15 10:24:29,384 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 10:24:29,436 - root - INFO - Well pads table populated successfully.
2025-01-15 10:24:29,492 - root - INFO - Well pads table populated successfully.
2025-01-15 10:24:29,492 - root - INFO - Initial data loaded successfully.
2025-01-15 10:24:29,492 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 10:24:45,197 - root - INFO - Dialog closed successfully
2025-01-15 10:28:26,716 - root - DEBUG - Toolbar setup completed
2025-01-15 10:28:26,717 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 10:28:26,719 - root - DEBUG - Table setup completed
2025-01-15 10:28:26,719 - root - DEBUG - UI setup completed successfully
2025-01-15 10:28:26,720 - root - DEBUG - Signal connections established
2025-01-15 10:28:26,723 - root - INFO - Scenario changed to: First one567
2025-01-15 10:28:26,724 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 10:28:26,779 - root - INFO - Well pads table populated successfully.
2025-01-15 10:28:26,828 - root - INFO - Well pads table populated successfully.
2025-01-15 10:28:26,828 - root - INFO - Initial data loaded successfully.
2025-01-15 10:28:26,828 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 10:28:30,339 - root - DEBUG - Table item changed - Row: 0, Column: 0, Value: WP8L1Side1Leg1
2025-01-15 10:28:30,340 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:28:32,722 - root - DEBUG - Table item changed - Row: 0, Column: 4, Value: 0.00
2025-01-15 10:28:32,723 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:28:33,282 - root - DEBUG - Table item changed - Row: 0, Column: 5, Value: $0.00
2025-01-15 10:28:33,282 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:28:33,810 - root - DEBUG - Table item changed - Row: 0, Column: 6, Value: $0.00
2025-01-15 10:28:33,810 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:28:34,211 - root - DEBUG - Table item changed - Row: 0, Column: 7, Value: Both
2025-01-15 10:28:34,212 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:28:34,499 - root - DEBUG - Table item changed - Row: 0, Column: 8, Value: 1
2025-01-15 10:28:34,499 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:28:34,673 - root - DEBUG - Table item changed - Row: 0, Column: 9, Value: 1
2025-01-15 10:28:34,673 - root - ERROR - Error updating scenario: 'DatabaseManager' object has no attribute 'update_scenario_data'
2025-01-15 10:33:00,683 - root - DEBUG - Toolbar setup completed
2025-01-15 10:33:00,684 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 10:33:00,686 - root - DEBUG - Table setup completed
2025-01-15 10:33:00,686 - root - DEBUG - UI setup completed successfully
2025-01-15 10:33:00,686 - root - DEBUG - Signal connections established
2025-01-15 10:33:00,690 - root - INFO - Scenario changed to: First one567
2025-01-15 10:33:00,691 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 10:33:00,743 - root - INFO - Well pads table populated successfully.
2025-01-15 10:33:00,798 - root - INFO - Well pads table populated successfully.
2025-01-15 10:33:00,798 - root - INFO - Initial data loaded successfully.
2025-01-15 10:33:00,799 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 10:34:09,483 - root - INFO - Scenario changed to: First one233
2025-01-15 10:34:09,486 - root - DEBUG - UI updated for scenario: First one233
2025-01-15 10:34:09,489 - root - INFO - Well pads table populated successfully.
2025-01-15 10:34:11,440 - root - INFO - Scenario changed to: First one567
2025-01-15 10:34:11,441 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 10:34:11,504 - root - INFO - Well pads table populated successfully.
2025-01-15 10:36:08,195 - root - INFO - Scenario changed to: First one2
2025-01-15 10:36:08,196 - root - DEBUG - UI updated for scenario: First one2
2025-01-15 10:36:08,199 - root - INFO - Well pads table populated successfully.
2025-01-15 10:36:09,507 - root - INFO - Scenario changed to: First one567
2025-01-15 10:36:09,508 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 10:36:09,568 - root - INFO - Well pads table populated successfully.
2025-01-15 10:36:43,409 - root - DEBUG - Selected row: 1
2025-01-15 10:36:43,411 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 10:36:47,042 - root - DEBUG - UWI: WP3L1Side1Leg1
2025-01-15 10:36:49,509 - root - INFO - Deleted pad: Scenario ID=6, UWI=WP3L1Side1Leg1
2025-01-15 10:36:49,510 - root - INFO - Pad deleted: UWI=WP3L1Side1Leg1, Scenario ID=6
2025-01-15 10:36:49,592 - root - INFO - Well pads table populated successfully.
2025-01-15 11:13:50,691 - root - DEBUG - Toolbar setup completed
2025-01-15 11:13:50,692 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:13:50,694 - root - DEBUG - Table setup completed
2025-01-15 11:13:50,694 - root - DEBUG - UI setup completed successfully
2025-01-15 11:13:50,701 - root - ERROR - Error in setup_connections: 'PUDPropertiesDialog' object has no attribute 'save_changes'
2025-01-15 11:17:13,132 - root - DEBUG - Toolbar setup completed
2025-01-15 11:17:13,133 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:17:13,136 - root - DEBUG - Table setup completed
2025-01-15 11:17:13,137 - root - DEBUG - UI setup completed successfully
2025-01-15 11:17:13,138 - root - ERROR - Error in setup_connections: 'PUDPropertiesDialog' object has no attribute 'pad_toolbar'
2025-01-15 11:18:10,907 - root - DEBUG - Toolbar setup completed
2025-01-15 11:18:10,908 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:18:10,910 - root - DEBUG - Table setup completed
2025-01-15 11:18:10,911 - root - DEBUG - UI setup completed successfully
2025-01-15 11:18:10,911 - root - DEBUG - Signal connections established
2025-01-15 11:18:10,915 - root - INFO - Scenario changed to: First one567
2025-01-15 11:18:10,915 - root - DEBUG - UI updated for scenario: First one567
2025-01-15 11:18:10,959 - root - INFO - Well pads table populated successfully.
2025-01-15 11:18:11,004 - root - INFO - Well pads table populated successfully.
2025-01-15 11:18:11,004 - root - INFO - Initial data loaded successfully.
2025-01-15 11:18:11,004 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:18:23,152 - root - INFO - Scenario 'First one dca' added successfully with ID 8. Active: 0
2025-01-15 11:18:23,167 - root - INFO - Scenario changed to: First one dca
2025-01-15 11:18:23,168 - root - DEBUG - UI updated for scenario: First one dca
2025-01-15 11:18:23,170 - root - INFO - Well pads table populated successfully.
2025-01-15 11:18:23,170 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:18:23,176 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:18:23,181 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:18:23,186 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:18:23,192 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:18:23,197 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:18:23,204 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:18:23,211 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:18:23,217 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:18:23,223 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:18:23,228 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:18:23,234 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:18:23,240 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:18:23,247 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:18:23,253 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:18:23,259 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:18:23,266 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:18:23,271 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:18:23,277 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:18:23,282 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:18:23,286 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:18:23,293 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:18:23,298 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:18:23,303 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:18:23,309 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:18:23,314 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:18:23,320 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:18:24,768 - root - INFO - Scenario 8 updated with 27 wells.
2025-01-15 11:18:24,768 - root - ERROR - Error in run_scenario: Cannot operate on a closed database.
2025-01-15 11:18:26,889 - root - INFO - Well pads table populated successfully.
2025-01-15 11:21:05,533 - root - DEBUG - Toolbar setup completed
2025-01-15 11:21:05,534 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:21:05,537 - root - DEBUG - Table setup completed
2025-01-15 11:21:05,537 - root - DEBUG - UI setup completed successfully
2025-01-15 11:21:05,538 - root - DEBUG - Signal connections established
2025-01-15 11:21:05,541 - root - INFO - Scenario changed to: First one dca
2025-01-15 11:21:05,541 - root - DEBUG - UI updated for scenario: First one dca
2025-01-15 11:21:05,591 - root - INFO - Well pads table populated successfully.
2025-01-15 11:21:05,640 - root - INFO - Well pads table populated successfully.
2025-01-15 11:21:05,640 - root - INFO - Initial data loaded successfully.
2025-01-15 11:21:05,640 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:21:14,077 - root - INFO - Scenario 'First onea' added successfully with ID 9. Active: 0
2025-01-15 11:21:14,089 - root - INFO - Scenario changed to: First onea
2025-01-15 11:21:14,090 - root - DEBUG - UI updated for scenario: First onea
2025-01-15 11:21:14,092 - root - INFO - Well pads table populated successfully.
2025-01-15 11:21:14,093 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:21:14,097 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:21:14,102 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:21:14,108 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:21:14,114 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:21:14,121 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:21:14,128 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:21:14,135 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:21:14,142 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:21:14,147 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:21:14,154 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:21:14,161 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:21:14,168 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:21:14,173 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:21:14,179 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:21:14,185 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:21:14,191 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:21:14,198 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:21:14,204 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:21:14,211 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:21:14,217 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:21:14,223 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:21:14,230 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:21:14,236 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:21:14,240 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:21:14,247 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:21:14,253 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:21:15,430 - root - INFO - Scenario 9 updated with 27 wells.
2025-01-15 11:21:15,431 - root - ERROR - Error in run_scenario: Cannot operate on a closed database.
2025-01-15 11:23:13,405 - root - DEBUG - Toolbar setup completed
2025-01-15 11:23:13,406 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:23:13,408 - root - DEBUG - Table setup completed
2025-01-15 11:23:13,408 - root - DEBUG - UI setup completed successfully
2025-01-15 11:23:13,409 - root - DEBUG - Signal connections established
2025-01-15 11:23:13,412 - root - INFO - Scenario changed to: First onea
2025-01-15 11:23:13,413 - root - DEBUG - UI updated for scenario: First onea
2025-01-15 11:23:13,474 - root - INFO - Well pads table populated successfully.
2025-01-15 11:23:13,532 - root - INFO - Well pads table populated successfully.
2025-01-15 11:23:13,532 - root - INFO - Initial data loaded successfully.
2025-01-15 11:23:13,532 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:23:21,799 - root - INFO - Scenario 'First onedf' added successfully with ID 10. Active: 0
2025-01-15 11:23:21,812 - root - INFO - Scenario changed to: First onedf
2025-01-15 11:23:21,813 - root - DEBUG - UI updated for scenario: First onedf
2025-01-15 11:23:21,815 - root - INFO - Well pads table populated successfully.
2025-01-15 11:23:21,816 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:23:21,821 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:23:21,827 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:23:21,833 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:23:21,840 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:23:21,846 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:23:21,852 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:23:21,859 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:23:21,865 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:23:21,872 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:23:21,878 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:23:21,884 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:23:21,891 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:23:21,898 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:23:21,905 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:23:21,911 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:23:21,918 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:23:21,923 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:23:21,928 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:23:21,934 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:23:21,939 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:23:21,946 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:23:21,952 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:23:21,958 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:23:21,964 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:23:21,969 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:23:21,976 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:23:22,910 - root - INFO - Scenario 10 updated with 27 wells.
2025-01-15 11:23:22,912 - root - ERROR - Error in run_scenario: Execution failed on sql '
                SELECT * FROM well_pads 
                WHERE scenario_id = %s
            ': near "%": syntax error
2025-01-15 11:25:50,976 - root - DEBUG - Toolbar setup completed
2025-01-15 11:25:50,977 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:25:50,979 - root - DEBUG - Table setup completed
2025-01-15 11:25:50,980 - root - DEBUG - UI setup completed successfully
2025-01-15 11:25:50,980 - root - DEBUG - Signal connections established
2025-01-15 11:25:50,984 - root - INFO - Scenario changed to: First onedf
2025-01-15 11:25:50,984 - root - DEBUG - UI updated for scenario: First onedf
2025-01-15 11:25:51,033 - root - INFO - Well pads table populated successfully.
2025-01-15 11:25:51,079 - root - INFO - Well pads table populated successfully.
2025-01-15 11:25:51,079 - root - INFO - Initial data loaded successfully.
2025-01-15 11:25:51,079 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:25:57,939 - root - INFO - Scenario 'First onefasdf' added successfully with ID 11. Active: 0
2025-01-15 11:25:57,951 - root - INFO - Scenario changed to: First onefasdf
2025-01-15 11:25:57,952 - root - DEBUG - UI updated for scenario: First onefasdf
2025-01-15 11:25:57,954 - root - INFO - Well pads table populated successfully.
2025-01-15 11:25:57,955 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:25:57,960 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:25:57,965 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:25:57,970 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:25:57,976 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:25:57,981 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:25:57,987 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:25:57,992 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:25:57,998 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:25:58,005 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:25:58,010 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:25:58,018 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:25:58,024 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:25:58,030 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:25:58,036 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:25:58,043 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:25:58,049 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:25:58,055 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:25:58,061 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:25:58,067 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:25:58,072 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:25:58,078 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:25:58,083 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:25:58,089 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:25:58,095 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:25:58,101 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:25:58,106 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:25:59,365 - root - INFO - Scenario 11 updated with 27 wells.
2025-01-15 11:25:59,376 - root - ERROR - Error in run_scenario: 'DatabaseManager' object has no attribute 'get_default_properties'
2025-01-15 11:27:11,505 - root - DEBUG - Toolbar setup completed
2025-01-15 11:27:11,506 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:27:11,508 - root - DEBUG - Table setup completed
2025-01-15 11:27:11,508 - root - DEBUG - UI setup completed successfully
2025-01-15 11:27:11,510 - root - DEBUG - Signal connections established
2025-01-15 11:27:11,512 - root - INFO - Scenario changed to: First onefasdf
2025-01-15 11:27:11,513 - root - DEBUG - UI updated for scenario: First onefasdf
2025-01-15 11:27:11,560 - root - INFO - Well pads table populated successfully.
2025-01-15 11:27:11,607 - root - INFO - Well pads table populated successfully.
2025-01-15 11:27:11,607 - root - INFO - Initial data loaded successfully.
2025-01-15 11:27:11,607 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:27:18,782 - root - INFO - Scenario 'First onefdsa' added successfully with ID 12. Active: 0
2025-01-15 11:27:18,795 - root - INFO - Scenario changed to: First onefdsa
2025-01-15 11:27:18,795 - root - DEBUG - UI updated for scenario: First onefdsa
2025-01-15 11:27:18,797 - root - INFO - Well pads table populated successfully.
2025-01-15 11:27:18,798 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:27:18,802 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:27:18,808 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:27:18,814 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:27:18,820 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:27:18,826 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:27:18,832 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:27:18,839 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:27:18,846 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:27:18,852 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:27:18,858 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:27:18,865 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:27:18,870 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:27:18,877 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:27:18,884 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:27:18,889 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:27:18,897 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:27:18,904 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:27:18,910 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:27:18,916 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:27:18,921 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:27:18,926 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:27:18,932 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:27:18,936 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:27:18,943 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:27:18,947 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:27:18,953 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:27:19,805 - root - INFO - Scenario 12 updated with 27 wells.
2025-01-15 11:27:19,823 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:20,217 - root - ERROR - Error processing well WP8L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:20,218 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:20,474 - root - ERROR - Error processing well WP3L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:20,475 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:20,730 - root - ERROR - Error processing well WP2L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:20,731 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:21,040 - root - ERROR - Error processing well WP7L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:21,040 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:21,330 - root - ERROR - Error processing well WP3L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:21,331 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:21,678 - root - ERROR - Error processing well WP6L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:21,679 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:21,985 - root - ERROR - Error processing well WP8L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:21,986 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:22,285 - root - ERROR - Error processing well WP3L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:22,286 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:22,544 - root - ERROR - Error processing well WP7L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:22,545 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:22,800 - root - ERROR - Error processing well WP5L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:22,801 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:23,086 - root - ERROR - Error processing well WP9L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:23,087 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:23,374 - root - ERROR - Error processing well WP1L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:23,374 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:23,659 - root - ERROR - Error processing well WP2L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:23,660 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:23,937 - root - ERROR - Error processing well WP7L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:23,938 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:24,213 - root - ERROR - Error processing well WP9L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:24,214 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:24,478 - root - ERROR - Error processing well WP6L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:24,479 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:24,738 - root - ERROR - Error processing well WP5L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:24,739 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:25,048 - root - ERROR - Error processing well WP6L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:25,049 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000508060
2025-01-15 11:27:25,326 - root - ERROR - Error processing well WP4L1Side1Leg1: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:25,327 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:25,606 - root - ERROR - Error processing well WP9L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:25,606 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:25,885 - root - ERROR - Error processing well WP1L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:25,886 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:26,158 - root - ERROR - Error processing well WP1L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:26,159 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:26,427 - root - ERROR - Error processing well WP2L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:26,428 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:26,683 - root - ERROR - Error processing well WP5L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:26,684 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000508060
2025-01-15 11:27:26,953 - root - ERROR - Error processing well WP4L1Side1Leg3: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:26,954 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:27,244 - root - ERROR - Error processing well WP4L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:27:27,244 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000508060
2025-01-15 11:27:27,558 - root - ERROR - Error processing well WP8L1Side1Leg2: 'PUDPropertiesDialog' object has no attribute 'displayed_status'
2025-01-15 11:32:24,922 - root - DEBUG - Toolbar setup completed
2025-01-15 11:32:24,923 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:32:24,925 - root - DEBUG - Table setup completed
2025-01-15 11:32:24,925 - root - DEBUG - UI setup completed successfully
2025-01-15 11:32:24,926 - root - DEBUG - Signal connections established
2025-01-15 11:32:24,929 - root - INFO - Scenario changed to: First onefdsa
2025-01-15 11:32:24,930 - root - DEBUG - UI updated for scenario: First onefdsa
2025-01-15 11:32:24,977 - root - INFO - Well pads table populated successfully.
2025-01-15 11:32:25,027 - root - INFO - Well pads table populated successfully.
2025-01-15 11:32:25,027 - root - INFO - Initial data loaded successfully.
2025-01-15 11:32:25,027 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:32:39,276 - root - INFO - Scenario 'First oneffdad55' added successfully with ID 13. Active: 0
2025-01-15 11:32:39,289 - root - INFO - Scenario changed to: First oneffdad55
2025-01-15 11:32:39,290 - root - DEBUG - UI updated for scenario: First oneffdad55
2025-01-15 11:32:39,292 - root - INFO - Well pads table populated successfully.
2025-01-15 11:32:39,293 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:32:39,297 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:32:39,304 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:32:39,309 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:32:39,315 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:32:39,321 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:32:39,326 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:32:39,332 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:32:39,337 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:32:39,343 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:32:39,349 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:32:39,356 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:32:39,361 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:32:39,367 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:32:39,373 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:32:39,379 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:32:39,383 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:32:39,389 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:32:39,395 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:32:39,400 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:32:39,406 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:32:39,412 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:32:39,417 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:32:39,423 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:32:39,428 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:32:39,433 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:32:39,439 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:32:40,620 - root - INFO - Scenario 13 updated with 27 wells.
2025-01-15 11:32:40,628 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:32:40,637 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 11:35:31,087 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:31,290 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:31,485 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:31,674 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:31,905 - root - INFO - Processed 5/27 wells
2025-01-15 11:35:31,906 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:32,154 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:32,412 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:32,650 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:32,870 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:33,087 - root - INFO - Processed 10/27 wells
2025-01-15 11:35:33,088 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:33,292 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:33,535 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:33,754 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:33,967 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:34,172 - root - INFO - Processed 15/27 wells
2025-01-15 11:35:34,173 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:34,374 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:34,591 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:34,834 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000510851
2025-01-15 11:35:35,062 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:35,268 - root - INFO - Processed 20/27 wells
2025-01-15 11:35:35,269 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:35,482 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:35,672 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:35,867 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:36,057 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000510851
2025-01-15 11:35:36,247 - root - INFO - Processed 25/27 wells
2025-01-15 11:35:36,249 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:35:36,444 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000510851
2025-01-15 11:36:03,095 - root - INFO - Well pads table populated successfully.
2025-01-15 11:40:22,867 - root - DEBUG - Toolbar setup completed
2025-01-15 11:40:22,868 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:40:22,870 - root - DEBUG - Table setup completed
2025-01-15 11:40:22,870 - root - DEBUG - UI setup completed successfully
2025-01-15 11:40:22,871 - root - DEBUG - Signal connections established
2025-01-15 11:40:22,874 - root - INFO - Scenario changed to: First oneffdad55
2025-01-15 11:40:22,875 - root - DEBUG - UI updated for scenario: First oneffdad55
2025-01-15 11:40:22,926 - root - INFO - Well pads table populated successfully.
2025-01-15 11:40:22,971 - root - INFO - Well pads table populated successfully.
2025-01-15 11:40:22,971 - root - INFO - Initial data loaded successfully.
2025-01-15 11:40:22,971 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:40:28,316 - root - INFO - Scenario 'fdasf' added successfully with ID 14. Active: 0
2025-01-15 11:40:28,329 - root - INFO - Scenario changed to: fdasf
2025-01-15 11:40:28,330 - root - DEBUG - UI updated for scenario: fdasf
2025-01-15 11:40:28,332 - root - INFO - Well pads table populated successfully.
2025-01-15 11:40:28,333 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:40:28,337 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:40:28,343 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:40:28,350 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:40:28,355 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:40:28,361 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:40:28,366 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:40:28,372 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:40:28,377 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:40:28,382 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:40:28,388 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:40:28,394 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:40:28,400 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:40:28,405 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:40:28,411 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:40:28,417 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:40:28,422 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:40:28,428 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:40:28,433 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:40:28,438 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:40:28,443 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:40:28,449 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:40:28,454 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:40:28,461 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:40:28,465 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:40:28,471 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:40:28,477 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:40:29,376 - root - INFO - Scenario 14 updated with 27 wells.
2025-01-15 11:40:29,384 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:40:29,397 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 11:44:17,411 - root - DEBUG - Toolbar setup completed
2025-01-15 11:44:17,412 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:44:17,414 - root - DEBUG - Table setup completed
2025-01-15 11:44:17,414 - root - DEBUG - UI setup completed successfully
2025-01-15 11:44:17,416 - root - DEBUG - Signal connections established
2025-01-15 11:44:17,419 - root - INFO - Scenario changed to: fdasf
2025-01-15 11:44:17,420 - root - DEBUG - UI updated for scenario: fdasf
2025-01-15 11:44:17,464 - root - INFO - Well pads table populated successfully.
2025-01-15 11:44:17,509 - root - INFO - Well pads table populated successfully.
2025-01-15 11:44:17,509 - root - INFO - Initial data loaded successfully.
2025-01-15 11:44:17,509 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:44:24,207 - root - INFO - Scenario 'dsa' added successfully with ID 15. Active: 0
2025-01-15 11:44:24,219 - root - INFO - Scenario changed to: dsa
2025-01-15 11:44:24,220 - root - DEBUG - UI updated for scenario: dsa
2025-01-15 11:44:24,221 - root - INFO - Well pads table populated successfully.
2025-01-15 11:44:24,222 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:44:24,227 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:44:24,233 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:44:24,239 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:44:24,245 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:44:24,251 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:44:24,257 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:44:24,263 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:44:24,269 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:44:24,276 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:44:24,281 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:44:24,287 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:44:24,293 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:44:24,298 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:44:24,304 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:44:24,310 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:44:24,315 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:44:24,322 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:44:24,327 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:44:24,333 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:44:24,339 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:44:24,345 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:44:24,350 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:44:24,356 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:44:24,360 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:44:24,366 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:44:24,372 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:44:25,500 - root - INFO - Scenario 15 updated with 27 wells.
2025-01-15 11:44:25,508 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,549 - root - ERROR - Error processing well WP8L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,550 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,563 - root - ERROR - Error processing well WP3L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,565 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,578 - root - ERROR - Error processing well WP2L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,579 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,595 - root - ERROR - Error processing well WP7L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,596 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,610 - root - ERROR - Error processing well WP3L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,610 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,626 - root - ERROR - Error processing well WP6L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,627 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,646 - root - ERROR - Error processing well WP8L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,646 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,661 - root - ERROR - Error processing well WP3L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,661 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,676 - root - ERROR - Error processing well WP7L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,677 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,690 - root - ERROR - Error processing well WP5L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,691 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,705 - root - ERROR - Error processing well WP9L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,705 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,720 - root - ERROR - Error processing well WP1L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,720 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,735 - root - ERROR - Error processing well WP2L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,735 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,749 - root - ERROR - Error processing well WP7L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,749 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,764 - root - ERROR - Error processing well WP9L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,764 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,777 - root - ERROR - Error processing well WP6L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,777 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,790 - root - ERROR - Error processing well WP5L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,790 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,804 - root - ERROR - Error processing well WP6L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,804 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:44:25,817 - root - ERROR - Error processing well WP4L1Side1Leg1: "['start_date'] not in index"
2025-01-15 11:44:25,817 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,831 - root - ERROR - Error processing well WP9L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,831 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,845 - root - ERROR - Error processing well WP1L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,845 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,858 - root - ERROR - Error processing well WP1L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,858 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,871 - root - ERROR - Error processing well WP2L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,872 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,884 - root - ERROR - Error processing well WP5L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,885 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:44:25,900 - root - ERROR - Error processing well WP4L1Side1Leg3: "['start_date'] not in index"
2025-01-15 11:44:25,900 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,914 - root - ERROR - Error processing well WP4L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:44:25,915 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:44:25,930 - root - ERROR - Error processing well WP8L1Side1Leg2: "['start_date'] not in index"
2025-01-15 11:49:11,047 - root - DEBUG - Toolbar setup completed
2025-01-15 11:49:11,048 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:49:11,050 - root - DEBUG - Table setup completed
2025-01-15 11:49:11,051 - root - DEBUG - UI setup completed successfully
2025-01-15 11:49:11,051 - root - DEBUG - Signal connections established
2025-01-15 11:49:11,054 - root - INFO - Scenario changed to: dsa
2025-01-15 11:49:11,055 - root - DEBUG - UI updated for scenario: dsa
2025-01-15 11:49:11,099 - root - INFO - Well pads table populated successfully.
2025-01-15 11:49:11,143 - root - INFO - Well pads table populated successfully.
2025-01-15 11:49:11,143 - root - INFO - Initial data loaded successfully.
2025-01-15 11:49:11,144 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:49:17,973 - root - INFO - Scenario 'First oneda66' added successfully with ID 16. Active: 0
2025-01-15 11:49:17,986 - root - INFO - Scenario changed to: First oneda66
2025-01-15 11:49:17,987 - root - DEBUG - UI updated for scenario: First oneda66
2025-01-15 11:49:17,990 - root - INFO - Well pads table populated successfully.
2025-01-15 11:49:17,991 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:49:17,996 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:49:18,003 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:49:18,009 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:49:18,016 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:49:18,022 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:49:18,027 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:49:18,033 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:49:18,038 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:49:18,043 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:49:18,050 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:49:18,057 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:49:18,062 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:49:18,068 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:49:18,073 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:49:18,079 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:49:18,087 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:49:18,094 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:49:18,100 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:49:18,106 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:49:18,111 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:49:18,117 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:49:18,121 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:49:18,128 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:49:18,133 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:49:18,139 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:49:18,144 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:49:19,426 - root - INFO - Scenario 16 updated with 27 wells.
2025-01-15 11:49:19,436 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:49:19,467 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 11:59:10,067 - root - DEBUG - Toolbar setup completed
2025-01-15 11:59:10,067 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 11:59:10,069 - root - DEBUG - Table setup completed
2025-01-15 11:59:10,069 - root - DEBUG - UI setup completed successfully
2025-01-15 11:59:10,070 - root - DEBUG - Signal connections established
2025-01-15 11:59:10,074 - root - INFO - Scenario changed to: First oneda66
2025-01-15 11:59:10,075 - root - DEBUG - UI updated for scenario: First oneda66
2025-01-15 11:59:10,121 - root - INFO - Well pads table populated successfully.
2025-01-15 11:59:10,165 - root - INFO - Well pads table populated successfully.
2025-01-15 11:59:10,165 - root - INFO - Initial data loaded successfully.
2025-01-15 11:59:10,165 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 11:59:16,596 - root - INFO - Scenario 'sdfasdr' added successfully with ID 17. Active: 0
2025-01-15 11:59:16,609 - root - INFO - Scenario changed to: sdfasdr
2025-01-15 11:59:16,610 - root - DEBUG - UI updated for scenario: sdfasdr
2025-01-15 11:59:16,612 - root - INFO - Well pads table populated successfully.
2025-01-15 11:59:16,613 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 11:59:16,618 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 11:59:16,623 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 11:59:16,629 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 11:59:16,635 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 11:59:16,640 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 11:59:16,647 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 11:59:16,652 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 11:59:16,658 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 11:59:16,664 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 11:59:16,670 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 11:59:16,676 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 11:59:16,683 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 11:59:16,689 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 11:59:16,696 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 11:59:16,701 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 11:59:16,706 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 11:59:16,713 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 11:59:16,718 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 11:59:16,725 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 11:59:16,731 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 11:59:16,737 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 11:59:16,743 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 11:59:16,748 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 11:59:16,754 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 11:59:16,760 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 11:59:16,766 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 11:59:17,762 - root - INFO - Scenario 17 updated with 27 wells.
2025-01-15 11:59:17,770 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,795 - root - ERROR - Error processing well WP8L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,797 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,810 - root - ERROR - Error processing well WP3L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,810 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:17,823 - root - ERROR - Error processing well WP2L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,824 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,837 - root - ERROR - Error processing well WP7L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,837 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:17,850 - root - ERROR - Error processing well WP3L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,851 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:17,864 - root - ERROR - Error processing well WP6L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,864 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:17,876 - root - ERROR - Error processing well WP8L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,876 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:17,890 - root - ERROR - Error processing well WP3L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,890 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:17,903 - root - ERROR - Error processing well WP7L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,903 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,915 - root - ERROR - Error processing well WP5L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,917 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:17,928 - root - ERROR - Error processing well WP9L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,929 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,943 - root - ERROR - Error processing well WP1L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,943 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,954 - root - ERROR - Error processing well WP2L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,955 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:17,966 - root - ERROR - Error processing well WP7L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,967 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:17,980 - root - ERROR - Error processing well WP9L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,980 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:17,992 - root - ERROR - Error processing well WP6L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:17,993 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:18,006 - root - ERROR - Error processing well WP5L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,006 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:18,022 - root - ERROR - Error processing well WP6L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,022 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-15 11:59:18,035 - root - ERROR - Error processing well WP4L1Side1Leg1: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,037 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:18,053 - root - ERROR - Error processing well WP9L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,053 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:18,064 - root - ERROR - Error processing well WP1L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,065 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:18,076 - root - ERROR - Error processing well WP1L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,076 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:18,087 - root - ERROR - Error processing well WP2L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,088 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:18,098 - root - ERROR - Error processing well WP5L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,099 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-15 11:59:18,110 - root - ERROR - Error processing well WP4L1Side1Leg3: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,110 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:18,122 - root - ERROR - Error processing well WP4L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 11:59:18,123 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-15 11:59:18,134 - root - ERROR - Error processing well WP8L1Side1Leg2: "['start_date', 'decline_curve', 'decline_curve_type', 'total_lateral', 'total_capex_cost', 'total_opex_cost', 'prod_type', 'pad_cost', 'exploration_cost', 'cost_per_foot', 'distance_to_pipe', 'cost_per_foot_to_pipe', 'ecl_date', 'iterate_di'] not in index"
2025-01-15 12:03:00,242 - root - DEBUG - Toolbar setup completed
2025-01-15 12:03:00,243 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 12:03:00,245 - root - DEBUG - Table setup completed
2025-01-15 12:03:00,245 - root - DEBUG - UI setup completed successfully
2025-01-15 12:03:00,246 - root - DEBUG - Signal connections established
2025-01-15 12:03:00,249 - root - INFO - Scenario changed to: sdfasdr
2025-01-15 12:03:00,250 - root - DEBUG - UI updated for scenario: sdfasdr
2025-01-15 12:03:00,297 - root - INFO - Well pads table populated successfully.
2025-01-15 12:03:00,343 - root - INFO - Well pads table populated successfully.
2025-01-15 12:03:00,343 - root - INFO - Initial data loaded successfully.
2025-01-15 12:03:00,343 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 12:03:07,349 - root - INFO - Scenario '9999' added successfully with ID 18. Active: 0
2025-01-15 12:03:07,362 - root - INFO - Scenario changed to: 9999
2025-01-15 12:03:07,363 - root - DEBUG - UI updated for scenario: 9999
2025-01-15 12:03:07,364 - root - INFO - Well pads table populated successfully.
2025-01-15 12:03:07,366 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 12:03:07,371 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 12:03:07,377 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 12:03:07,383 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 12:03:07,389 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 12:03:07,395 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 12:03:07,402 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 12:03:07,407 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 12:03:07,413 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 12:03:07,419 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 12:03:07,425 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 12:03:07,431 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 12:03:07,437 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 12:03:07,443 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 12:03:07,448 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 12:03:07,454 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 12:03:07,460 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 12:03:07,466 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 12:03:07,472 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 12:03:07,478 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 12:03:07,484 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 12:03:07,490 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 12:03:07,496 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 12:03:07,501 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 12:03:07,507 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 12:03:07,514 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 12:03:07,519 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 12:03:08,354 - root - INFO - Scenario 18 updated with 27 wells.
2025-01-15 12:03:08,363 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:03:08,397 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 12:03:34,276 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:03:44,727 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:03:57,271 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:01,128 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:04:05,118 - root - INFO - Processed 5/27 wells
2025-01-15 12:04:05,119 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:04:08,867 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:04:12,538 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:04:16,241 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:04:19,977 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:23,813 - root - INFO - Processed 10/27 wells
2025-01-15 12:04:23,814 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:04:27,485 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:31,144 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:34,814 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:04:38,495 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:42,338 - root - INFO - Processed 15/27 wells
2025-01-15 12:04:42,339 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:04:46,094 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:04:49,878 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:53,650 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-15 12:04:57,423 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:05:01,242 - root - INFO - Processed 20/27 wells
2025-01-15 12:05:01,244 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:05:04,895 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:05:08,648 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:05:12,331 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:05:16,067 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-15 12:05:19,720 - root - INFO - Processed 25/27 wells
2025-01-15 12:05:19,722 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:05:23,349 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-15 12:05:38,109 - root - INFO - Well pads table populated successfully.
2025-01-15 12:11:18,656 - root - INFO - Scenario 'addded' added successfully with ID 19. Active: 0
2025-01-15 12:11:18,737 - root - INFO - Well pads table populated successfully.
2025-01-15 12:12:01,433 - root - INFO - Dialog closed successfully
2025-01-15 15:23:02,162 - root - DEBUG - Toolbar setup completed
2025-01-15 15:23:02,164 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 15:23:02,167 - root - DEBUG - Table setup completed
2025-01-15 15:23:02,167 - root - DEBUG - UI setup completed successfully
2025-01-15 15:23:02,168 - root - DEBUG - Signal connections established
2025-01-15 15:23:02,172 - root - INFO - Scenario changed to: 9999
2025-01-15 15:23:02,173 - root - DEBUG - UI updated for scenario: 9999
2025-01-15 15:23:02,224 - root - INFO - Well pads table populated successfully.
2025-01-15 15:23:02,271 - root - INFO - Well pads table populated successfully.
2025-01-15 15:23:02,271 - root - INFO - Initial data loaded successfully.
2025-01-15 15:23:02,271 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 15:24:37,323 - root - INFO - Scenario 'asd1' added successfully with ID 20. Active: 0
2025-01-15 15:24:37,335 - root - INFO - Scenario changed to: asd1
2025-01-15 15:24:37,336 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:24:37,338 - root - INFO - Well pads table populated successfully.
2025-01-15 15:24:37,339 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-15 15:24:37,344 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-15 15:24:37,351 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-15 15:24:37,358 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-15 15:24:37,364 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-15 15:24:37,370 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-15 15:24:37,375 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-15 15:24:37,380 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-15 15:24:37,386 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-15 15:24:37,393 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-15 15:24:37,399 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-15 15:24:37,405 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-15 15:24:37,410 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-15 15:24:37,416 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-15 15:24:37,422 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-15 15:24:37,427 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-15 15:24:37,435 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-15 15:24:37,440 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-15 15:24:37,447 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-15 15:24:37,452 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-15 15:24:37,457 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-15 15:24:37,462 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-15 15:24:37,467 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-15 15:24:37,474 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-15 15:24:37,479 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-15 15:24:37,484 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-15 15:24:37,490 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-15 15:24:38,765 - root - INFO - Scenario 20 updated with 27 wells.
2025-01-15 15:24:38,774 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:38,780 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 15:24:45,790 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:46,003 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:46,211 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:46,442 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:46,705 - root - INFO - Processed 5/27 wells
2025-01-15 15:24:46,706 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:46,963 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:47,190 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:47,411 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:47,656 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:47,901 - root - INFO - Processed 10/27 wells
2025-01-15 15:24:47,903 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:48,137 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:48,363 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:48,591 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:48,838 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:49,052 - root - INFO - Processed 15/27 wells
2025-01-15 15:24:49,053 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:49,293 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:49,526 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:49,776 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:24:50,018 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:50,251 - root - INFO - Processed 20/27 wells
2025-01-15 15:24:50,253 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:50,486 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:50,699 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:50,912 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:51,140 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:24:51,361 - root - INFO - Processed 25/27 wells
2025-01-15 15:24:51,363 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:51,600 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:24:57,129 - root - INFO - Well pads table populated successfully.
2025-01-15 15:25:04,409 - root - INFO - Dialog closed successfully
2025-01-15 15:25:53,891 - root - DEBUG - Toolbar setup completed
2025-01-15 15:25:53,892 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 15:25:53,893 - root - DEBUG - Table setup completed
2025-01-15 15:25:53,893 - root - DEBUG - UI setup completed successfully
2025-01-15 15:25:53,894 - root - DEBUG - Signal connections established
2025-01-15 15:25:53,897 - root - INFO - Scenario changed to: asd1
2025-01-15 15:25:53,897 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:25:53,942 - root - INFO - Well pads table populated successfully.
2025-01-15 15:25:53,987 - root - INFO - Well pads table populated successfully.
2025-01-15 15:25:53,987 - root - INFO - Initial data loaded successfully.
2025-01-15 15:25:53,987 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 15:26:27,184 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:27,294 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:27,408 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:27,529 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:27,656 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:27,763 - root - INFO - Processed 5/27 wells
2025-01-15 15:26:27,764 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:27,872 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:27,979 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:28,088 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:28,204 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:28,327 - root - INFO - Processed 10/27 wells
2025-01-15 15:26:28,328 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:28,438 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:28,550 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:28,663 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:28,801 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:28,916 - root - INFO - Processed 15/27 wells
2025-01-15 15:26:28,917 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:29,027 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:29,134 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:29,265 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-15 15:26:29,386 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:29,495 - root - INFO - Processed 20/27 wells
2025-01-15 15:26:29,495 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:29,615 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:29,736 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:29,844 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:29,965 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-15 15:26:30,085 - root - INFO - Processed 25/27 wells
2025-01-15 15:26:30,086 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:30,195 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-15 15:26:38,387 - root - INFO - Scenario changed to: addded
2025-01-15 15:26:38,388 - root - DEBUG - UI updated for scenario: addded
2025-01-15 15:26:38,391 - root - INFO - Well pads table populated successfully.
2025-01-15 15:26:40,168 - root - INFO - Scenario changed to: asd1
2025-01-15 15:26:40,168 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:26:40,218 - root - INFO - Well pads table populated successfully.
2025-01-15 15:26:49,980 - root - INFO - Dialog closed successfully
2025-01-15 15:27:41,823 - root - DEBUG - Toolbar setup completed
2025-01-15 15:27:41,823 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 15:27:41,824 - root - DEBUG - Table setup completed
2025-01-15 15:27:41,825 - root - DEBUG - UI setup completed successfully
2025-01-15 15:27:41,825 - root - DEBUG - Signal connections established
2025-01-15 15:27:41,837 - root - INFO - Scenario changed to: asd1
2025-01-15 15:27:41,837 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:27:41,889 - root - INFO - Well pads table populated successfully.
2025-01-15 15:27:41,935 - root - INFO - Well pads table populated successfully.
2025-01-15 15:27:41,936 - root - INFO - Initial data loaded successfully.
2025-01-15 15:27:41,936 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 15:28:35,443 - root - INFO - Launching combined cashflow for scenario: asd1
2025-01-15 15:35:58,668 - root - INFO - Dialog closed successfully
2025-01-15 15:36:27,839 - root - DEBUG - Toolbar setup completed
2025-01-15 15:36:27,840 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 15:36:27,842 - root - DEBUG - Table setup completed
2025-01-15 15:36:27,842 - root - DEBUG - UI setup completed successfully
2025-01-15 15:36:27,844 - root - DEBUG - Signal connections established
2025-01-15 15:36:27,847 - root - INFO - Scenario changed to: asd1
2025-01-15 15:36:27,848 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:36:27,850 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 15:36:49,621 - root - INFO - Well pads table populated successfully.
2025-01-15 15:36:50,741 - root - INFO - Well pads table populated successfully.
2025-01-15 15:36:50,857 - root - INFO - Initial data loaded successfully.
2025-01-15 15:36:51,036 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 15:54:44,686 - root - DEBUG - Toolbar setup completed
2025-01-15 15:54:44,687 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 15:54:44,689 - root - DEBUG - Table setup completed
2025-01-15 15:54:44,689 - root - DEBUG - UI setup completed successfully
2025-01-15 15:54:44,691 - root - DEBUG - Signal connections established
2025-01-15 15:54:44,694 - root - INFO - Scenario changed to: asd1
2025-01-15 15:54:44,695 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:54:44,696 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 15:54:47,770 - root - INFO - Well pads table populated successfully.
2025-01-15 15:54:48,237 - root - INFO - Well pads table populated successfully.
2025-01-15 15:54:48,341 - root - INFO - Initial data loaded successfully.
2025-01-15 15:54:48,499 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 15:57:26,169 - root - DEBUG - Toolbar setup completed
2025-01-15 15:57:26,170 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 15:57:26,171 - root - DEBUG - Table setup completed
2025-01-15 15:57:26,172 - root - DEBUG - UI setup completed successfully
2025-01-15 15:57:26,172 - root - DEBUG - Signal connections established
2025-01-15 15:57:26,177 - root - INFO - Scenario changed to: asd1
2025-01-15 15:57:26,178 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 15:57:26,179 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-15 15:57:30,249 - root - INFO - Well pads table populated successfully.
2025-01-15 15:57:30,594 - root - INFO - Well pads table populated successfully.
2025-01-15 15:57:30,595 - root - INFO - Initial data loaded successfully.
2025-01-15 15:57:30,706 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 15:57:41,697 - root - INFO - No modifications to update
2025-01-15 15:57:50,550 - root - INFO - No modifications to update
2025-01-15 15:57:51,725 - root - INFO - No modifications to update
2025-01-15 15:57:52,457 - root - INFO - No modifications to update
2025-01-15 15:57:52,665 - root - INFO - No modifications to update
2025-01-15 15:57:52,857 - root - INFO - No modifications to update
2025-01-15 15:57:53,049 - root - INFO - No modifications to update
2025-01-15 15:57:59,048 - root - INFO - No modifications to update
2025-01-15 16:01:26,005 - root - DEBUG - Toolbar setup completed
2025-01-15 16:01:26,006 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:01:26,008 - root - DEBUG - Table setup completed
2025-01-15 16:01:26,008 - root - DEBUG - UI setup completed successfully
2025-01-15 16:01:26,010 - root - DEBUG - Signal connections established
2025-01-15 16:01:26,013 - root - INFO - Scenario changed to: asd1
2025-01-15 16:01:26,014 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:01:26,072 - root - INFO - Well pads table populated successfully.
2025-01-15 16:01:26,136 - root - INFO - Well pads table populated successfully.
2025-01-15 16:01:26,136 - root - INFO - Initial data loaded successfully.
2025-01-15 16:01:26,136 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:01:28,695 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-30
2025-01-15 16:01:36,292 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:01:36,295 - root - ERROR - Error updating row 0: 'drill_time'
2025-01-15 16:01:39,224 - root - INFO - Well pads table populated successfully.
2025-01-15 16:07:59,082 - root - DEBUG - Toolbar setup completed
2025-01-15 16:07:59,083 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:07:59,085 - root - DEBUG - Table setup completed
2025-01-15 16:07:59,085 - root - DEBUG - UI setup completed successfully
2025-01-15 16:07:59,087 - root - DEBUG - Signal connections established
2025-01-15 16:07:59,090 - root - INFO - Scenario changed to: asd1
2025-01-15 16:07:59,090 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:07:59,145 - root - INFO - Well pads table populated successfully.
2025-01-15 16:07:59,197 - root - INFO - Well pads table populated successfully.
2025-01-15 16:07:59,197 - root - INFO - Initial data loaded successfully.
2025-01-15 16:07:59,197 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:08:01,947 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-06
2025-01-15 16:08:05,835 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:08:05,837 - root - ERROR - Error updating row 0: 'prod_type'
2025-01-15 16:09:31,959 - root - INFO - Well pads table populated successfully.
2025-01-15 16:09:36,032 - root - INFO - Scenario changed to: addded
2025-01-15 16:09:36,033 - root - DEBUG - UI updated for scenario: addded
2025-01-15 16:09:36,035 - root - INFO - Well pads table populated successfully.
2025-01-15 16:09:42,184 - root - INFO - Scenario changed to: asd1
2025-01-15 16:09:42,185 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:09:42,238 - root - INFO - Well pads table populated successfully.
2025-01-15 16:09:44,985 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-31
2025-01-15 16:09:47,789 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:09:47,791 - root - ERROR - Error updating row 0: 'prod_type'
2025-01-15 16:10:05,335 - root - INFO - Well pads table populated successfully.
2025-01-15 16:12:39,016 - root - DEBUG - Toolbar setup completed
2025-01-15 16:12:39,017 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:12:39,019 - root - DEBUG - Table setup completed
2025-01-15 16:12:39,019 - root - DEBUG - UI setup completed successfully
2025-01-15 16:12:39,021 - root - DEBUG - Signal connections established
2025-01-15 16:12:39,024 - root - INFO - Scenario changed to: asd1
2025-01-15 16:12:39,025 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:12:39,075 - root - INFO - Well pads table populated successfully.
2025-01-15 16:12:39,124 - root - INFO - Well pads table populated successfully.
2025-01-15 16:12:39,124 - root - INFO - Initial data loaded successfully.
2025-01-15 16:12:39,124 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:12:42,556 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-31
2025-01-15 16:12:44,881 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:12:44,883 - root - ERROR - Error updating row 0: 'prod_type'
2025-01-15 16:12:56,670 - root - INFO - Well pads table populated successfully.
2025-01-15 16:13:12,779 - root - INFO - Scenario changed to: First onefdsa
2025-01-15 16:13:12,780 - root - DEBUG - UI updated for scenario: First onefdsa
2025-01-15 16:13:12,828 - root - INFO - Well pads table populated successfully.
2025-01-15 16:13:15,583 - root - INFO - Scenario changed to: asd1
2025-01-15 16:13:15,584 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:13:15,633 - root - INFO - Well pads table populated successfully.
2025-01-15 16:14:08,313 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-02-01
2025-01-15 16:14:09,528 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:14:09,530 - root - ERROR - Error updating row 0: 'prod_type'
2025-01-15 16:15:33,810 - root - DEBUG - Toolbar setup completed
2025-01-15 16:15:33,811 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:15:33,813 - root - DEBUG - Table setup completed
2025-01-15 16:15:33,813 - root - DEBUG - UI setup completed successfully
2025-01-15 16:15:33,814 - root - DEBUG - Signal connections established
2025-01-15 16:15:33,817 - root - INFO - Scenario changed to: asd1
2025-01-15 16:15:33,818 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:15:33,866 - root - INFO - Well pads table populated successfully.
2025-01-15 16:15:33,913 - root - INFO - Well pads table populated successfully.
2025-01-15 16:15:33,913 - root - INFO - Initial data loaded successfully.
2025-01-15 16:15:33,913 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:15:37,464 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-02-28
2025-01-15 16:15:40,155 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:15:40,157 - root - ERROR - Error updating row 0: 'cost_per_foot_to_pipe'
2025-01-15 16:16:14,858 - root - INFO - Well pads table populated successfully.
2025-01-15 16:16:17,942 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-31
2025-01-15 16:16:36,979 - root - DEBUG - Toolbar setup completed
2025-01-15 16:16:36,980 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:16:36,982 - root - DEBUG - Table setup completed
2025-01-15 16:16:36,983 - root - DEBUG - UI setup completed successfully
2025-01-15 16:16:36,984 - root - DEBUG - Signal connections established
2025-01-15 16:16:36,987 - root - INFO - Scenario changed to: asd1
2025-01-15 16:16:36,988 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:16:37,050 - root - INFO - Well pads table populated successfully.
2025-01-15 16:16:37,112 - root - INFO - Well pads table populated successfully.
2025-01-15 16:16:37,112 - root - INFO - Initial data loaded successfully.
2025-01-15 16:16:37,112 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:16:40,935 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-02-28
2025-01-15 16:16:42,492 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:16:42,494 - root - ERROR - Error updating row 0: 'cost_per_foot_to_pipe'
2025-01-15 16:19:10,690 - root - DEBUG - Toolbar setup completed
2025-01-15 16:19:10,691 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:19:10,693 - root - DEBUG - Table setup completed
2025-01-15 16:19:10,694 - root - DEBUG - UI setup completed successfully
2025-01-15 16:19:10,695 - root - DEBUG - Signal connections established
2025-01-15 16:19:10,697 - root - INFO - Scenario changed to: asd1
2025-01-15 16:19:10,698 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:19:10,747 - root - INFO - Well pads table populated successfully.
2025-01-15 16:19:10,796 - root - INFO - Well pads table populated successfully.
2025-01-15 16:19:10,796 - root - INFO - Initial data loaded successfully.
2025-01-15 16:19:10,796 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:19:13,446 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-30
2025-01-15 16:19:15,047 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:19:15,047 - root - ERROR - Error updating row 0: cannot access local variable 'headers' where it is not associated with a value
2025-01-15 16:20:59,718 - root - DEBUG - Toolbar setup completed
2025-01-15 16:20:59,719 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:20:59,721 - root - DEBUG - Table setup completed
2025-01-15 16:20:59,721 - root - DEBUG - UI setup completed successfully
2025-01-15 16:20:59,722 - root - DEBUG - Signal connections established
2025-01-15 16:20:59,725 - root - INFO - Scenario changed to: asd1
2025-01-15 16:20:59,726 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:20:59,779 - root - INFO - Well pads table populated successfully.
2025-01-15 16:20:59,827 - root - INFO - Well pads table populated successfully.
2025-01-15 16:20:59,828 - root - INFO - Initial data loaded successfully.
2025-01-15 16:20:59,828 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:21:02,234 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-29
2025-01-15 16:21:03,279 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:21:03,281 - root - ERROR - Error updating row 0: 'cost_per_foot_to_pipe'
2025-01-15 16:24:11,505 - root - DEBUG - Toolbar setup completed
2025-01-15 16:24:11,505 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:24:11,508 - root - DEBUG - Table setup completed
2025-01-15 16:24:11,508 - root - DEBUG - UI setup completed successfully
2025-01-15 16:24:11,509 - root - DEBUG - Signal connections established
2025-01-15 16:24:11,512 - root - INFO - Scenario changed to: asd1
2025-01-15 16:24:11,512 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:24:11,567 - root - INFO - Well pads table populated successfully.
2025-01-15 16:24:11,618 - root - INFO - Well pads table populated successfully.
2025-01-15 16:24:11,618 - root - INFO - Initial data loaded successfully.
2025-01-15 16:24:11,618 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:24:12,659 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-02-15
2025-01-15 16:24:14,788 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-02-24
2025-01-15 16:24:15,718 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:24:15,729 - root - INFO - Successfully deleted model properties for UWI WP8L1Side1Leg1 in scenario 20
2025-01-15 16:24:15,730 - root - ERROR - Error deleting production rates for UWI WP8L1Side1Leg1: no such table: production_rates
2025-01-15 16:24:15,731 - root - ERROR - Error updating row 0: 'DatabaseManager' object has no attribute 'get_well_pad_data'
2025-01-15 16:28:46,850 - root - DEBUG - Toolbar setup completed
2025-01-15 16:28:46,851 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:28:46,853 - root - DEBUG - Table setup completed
2025-01-15 16:28:46,853 - root - DEBUG - UI setup completed successfully
2025-01-15 16:28:46,854 - root - DEBUG - Signal connections established
2025-01-15 16:28:46,857 - root - INFO - Scenario changed to: asd1
2025-01-15 16:28:46,857 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:28:46,906 - root - INFO - Well pads table populated successfully.
2025-01-15 16:28:46,956 - root - INFO - Well pads table populated successfully.
2025-01-15 16:28:46,956 - root - INFO - Initial data loaded successfully.
2025-01-15 16:28:46,956 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:28:50,144 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-02-28
2025-01-15 16:28:56,127 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2026-04-16
2025-01-15 16:28:57,535 - root - INFO - Updating scenario with 1 modified rows
2025-01-15 16:28:57,549 - root - INFO - Successfully deleted model properties for UWI WP8L1Side1Leg1 in scenario 20
2025-01-15 16:28:57,581 - root - INFO - Successfully deleted production rates for UWI WP8L1Side1Leg1 in scenario 20
2025-01-15 16:28:57,583 - root - INFO - Retrieved well pad data for ID 325
2025-01-15 16:28:57,587 - root - ERROR - Error updating row 0: "['max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-15 16:28:59,061 - root - INFO - Well pads table populated successfully.
2025-01-15 16:34:10,900 - root - DEBUG - Toolbar setup completed
2025-01-15 16:34:10,902 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:34:10,903 - root - DEBUG - Table setup completed
2025-01-15 16:34:10,904 - root - DEBUG - UI setup completed successfully
2025-01-15 16:34:10,905 - root - DEBUG - Signal connections established
2025-01-15 16:34:10,908 - root - INFO - Scenario changed to: asd1
2025-01-15 16:34:10,909 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:34:10,958 - root - INFO - Well pads table populated successfully.
2025-01-15 16:34:11,006 - root - INFO - Well pads table populated successfully.
2025-01-15 16:34:11,006 - root - INFO - Initial data loaded successfully.
2025-01-15 16:34:11,007 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:34:22,644 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg1
2025-01-15 16:34:22,649 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-15 16:34:22,654 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP8L1Side1Leg1
2025-01-15 16:34:22,654 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-15 16:34:22,659 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP2L1Side1Leg3
2025-01-15 16:34:22,659 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-15 16:34:22,664 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP7L1Side1Leg1
2025-01-15 16:34:22,664 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-15 16:34:22,669 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP3L1Side1Leg3
2025-01-15 16:34:22,669 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-15 16:34:22,674 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP6L1Side1Leg2
2025-01-15 16:34:22,674 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-15 16:34:22,679 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP8L1Side1Leg3
2025-01-15 16:34:22,679 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-15 16:34:22,684 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP3L1Side1Leg2
2025-01-15 16:34:22,684 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-15 16:34:22,690 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP7L1Side1Leg3
2025-01-15 16:34:22,691 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-15 16:34:22,696 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP5L1Side1Leg1
2025-01-15 16:34:22,697 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-15 16:34:22,704 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP9L1Side1Leg2
2025-01-15 16:34:22,704 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-15 16:34:22,709 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP1L1Side1Leg1
2025-01-15 16:34:22,709 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-15 16:34:22,715 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP2L1Side1Leg1
2025-01-15 16:34:22,716 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-15 16:34:22,720 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP7L1Side1Leg2
2025-01-15 16:34:22,721 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-15 16:34:22,726 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP9L1Side1Leg1
2025-01-15 16:34:22,726 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-15 16:34:22,732 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP6L1Side1Leg3
2025-01-15 16:34:22,734 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-15 16:34:22,739 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP5L1Side1Leg3
2025-01-15 16:34:22,740 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-15 16:34:22,745 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP6L1Side1Leg1
2025-01-15 16:34:22,745 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-15 16:34:22,752 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP4L1Side1Leg1
2025-01-15 16:34:22,752 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-15 16:34:22,757 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP9L1Side1Leg3
2025-01-15 16:34:22,757 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-15 16:34:22,762 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP1L1Side1Leg2
2025-01-15 16:34:22,763 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-15 16:34:22,768 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP1L1Side1Leg3
2025-01-15 16:34:22,768 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-15 16:34:22,773 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP2L1Side1Leg2
2025-01-15 16:34:22,773 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-15 16:34:22,778 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP5L1Side1Leg2
2025-01-15 16:34:22,779 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-15 16:34:22,785 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP4L1Side1Leg3
2025-01-15 16:34:22,785 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-15 16:34:22,791 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP4L1Side1Leg2
2025-01-15 16:34:22,791 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-15 16:34:22,797 - root - INFO - Deleted pad: Scenario ID=11, UWI=WP8L1Side1Leg2
2025-01-15 16:34:24,109 - root - INFO - Scenario 11 updated with 1 wells.
2025-01-15 16:34:24,111 - root - INFO - Deleted model properties for scenario 11
2025-01-15 16:34:24,112 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-15 16:34:24,117 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000509324
2025-01-15 16:34:26,846 - root - INFO - Well pads table populated successfully.
2025-01-15 16:36:30,125 - root - INFO - Launching combined cashflow for scenario: asd1
2025-01-15 16:38:36,716 - root - DEBUG - Toolbar setup completed
2025-01-15 16:38:36,717 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:38:36,719 - root - DEBUG - Table setup completed
2025-01-15 16:38:36,719 - root - DEBUG - UI setup completed successfully
2025-01-15 16:38:36,720 - root - DEBUG - Signal connections established
2025-01-15 16:38:36,723 - root - INFO - Scenario changed to: asd1
2025-01-15 16:38:36,724 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:38:36,774 - root - INFO - Well pads table populated successfully.
2025-01-15 16:38:36,825 - root - INFO - Well pads table populated successfully.
2025-01-15 16:38:36,825 - root - INFO - Initial data loaded successfully.
2025-01-15 16:38:36,825 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:39:06,039 - root - INFO - Dialog closed successfully
2025-01-15 16:41:23,073 - root - DEBUG - Toolbar setup completed
2025-01-15 16:41:23,073 - root - DEBUG - Scenario dropdown setup completed
2025-01-15 16:41:23,075 - root - DEBUG - Table setup completed
2025-01-15 16:41:23,075 - root - DEBUG - UI setup completed successfully
2025-01-15 16:41:23,076 - root - DEBUG - Signal connections established
2025-01-15 16:41:23,079 - root - INFO - Scenario changed to: asd1
2025-01-15 16:41:23,079 - root - DEBUG - UI updated for scenario: asd1
2025-01-15 16:41:23,135 - root - INFO - Well pads table populated successfully.
2025-01-15 16:41:23,183 - root - INFO - Well pads table populated successfully.
2025-01-15 16:41:23,184 - root - INFO - Initial data loaded successfully.
2025-01-15 16:41:23,184 - root - INFO - PUDPropertiesDialog initialized
2025-01-15 16:41:36,025 - root - ERROR - Error adding scenario 'First oneaawd111': database is locked
2025-01-15 16:41:47,106 - root - WARNING - Scenario 'First oneaawd111' not found in dropdown.
2025-01-15 16:42:44,898 - root - ERROR - Error adding scenario 'First oneadd1111': database is locked
2025-01-15 16:42:55,907 - root - WARNING - Scenario 'First oneadd1111' not found in dropdown.
2025-01-15 16:44:04,877 - root - ERROR - Error adding scenario 'First oneaadaw': database is locked
2025-01-15 16:44:15,926 - root - WARNING - Scenario 'First oneaadaw' not found in dropdown.
2025-01-16 12:19:38,112 - root - DEBUG - Toolbar setup completed
2025-01-16 12:19:38,114 - root - DEBUG - Scenario dropdown setup completed
2025-01-16 12:19:38,117 - root - DEBUG - Table setup completed
2025-01-16 12:19:38,117 - root - DEBUG - UI setup completed successfully
2025-01-16 12:19:38,120 - root - DEBUG - Signal connections established
2025-01-16 12:19:38,122 - root - INFO - No scenarios to load.
2025-01-16 12:19:38,122 - root - INFO - PUDPropertiesDialog initialized
2025-01-16 12:19:44,019 - root - INFO - Dialog closed successfully
2025-01-16 12:19:58,075 - root - DEBUG - Toolbar setup completed
2025-01-16 12:19:58,076 - root - DEBUG - Scenario dropdown setup completed
2025-01-16 12:19:58,077 - root - DEBUG - Table setup completed
2025-01-16 12:19:58,077 - root - DEBUG - UI setup completed successfully
2025-01-16 12:19:58,078 - root - DEBUG - Signal connections established
2025-01-16 12:19:58,083 - root - INFO - No scenarios to load.
2025-01-16 12:19:58,083 - root - INFO - PUDPropertiesDialog initialized
2025-01-16 12:20:36,883 - root - INFO - Scenario 'Frist one' added successfully with ID 2. Active: 0
2025-01-16 12:20:36,895 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-16 12:20:36,899 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-16 12:20:36,905 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-16 12:20:36,910 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-16 12:20:36,915 - root - INFO - Inserting new well pad for UWI: 840300020072475
2025-01-16 12:20:36,923 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-16 12:20:36,927 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-16 12:20:36,933 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-16 12:20:36,939 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-16 12:20:36,945 - root - INFO - Inserting new well pad for UWI: 840300020069956
2025-01-16 12:20:36,950 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-16 12:20:36,956 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-16 12:20:36,962 - root - INFO - Inserting new well pad for UWI: 840300020072469
2025-01-16 12:20:36,967 - root - INFO - Inserting new well pad for UWI: 840300020072473
2025-01-16 12:20:36,973 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-16 12:20:36,978 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-16 12:20:36,984 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-16 12:20:36,990 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-16 12:20:36,994 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-16 12:20:37,000 - root - INFO - Inserting new well pad for UWI: 840300020070923
2025-01-16 12:20:37,005 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-16 12:20:37,010 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-16 12:20:37,017 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-16 12:20:37,022 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-16 12:20:37,027 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-16 12:20:37,033 - root - INFO - Inserting new well pad for UWI: 840300020070906
2025-01-16 12:20:37,038 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-16 12:20:37,043 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-16 12:20:37,049 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-16 12:20:37,056 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-16 12:20:37,061 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-16 12:20:37,066 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-16 12:20:37,072 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-16 12:20:38,436 - root - INFO - Scenario 2 updated with 33 wells.
2025-01-16 12:20:38,438 - root - INFO - Deleted model properties for scenario 2
2025-01-16 12:20:38,439 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-16 12:20:38,444 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:38,649 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:38,851 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:39,041 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:39,224 - root - INFO - Processing well 840300020072475 with UWI: 840300001070984
2025-01-16 12:20:39,446 - root - INFO - Processed 5/33 wells
2025-01-16 12:20:39,447 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:39,634 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:39,823 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:40,012 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:40,203 - root - INFO - Processing well 840300020069956 with UWI: 840300001070984
2025-01-16 12:20:40,399 - root - INFO - Processed 10/33 wells
2025-01-16 12:20:40,400 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:40,609 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:40,798 - root - INFO - Processing well 840300020072469 with UWI: 840300001070984
2025-01-16 12:20:40,997 - root - INFO - Processing well 840300020072473 with UWI: 840300001070984
2025-01-16 12:20:41,190 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:41,391 - root - INFO - Processed 15/33 wells
2025-01-16 12:20:41,392 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:41,597 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:41,833 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:42,067 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:42,299 - root - INFO - Processing well 840300020070923 with UWI: 840300001070984
2025-01-16 12:20:42,504 - root - INFO - Processed 20/33 wells
2025-01-16 12:20:42,505 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:42,720 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:42,946 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:43,150 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300001070984
2025-01-16 12:20:43,360 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:43,564 - root - INFO - Processed 25/33 wells
2025-01-16 12:20:43,565 - root - INFO - Processing well 840300020070906 with UWI: 840300001070984
2025-01-16 12:20:43,778 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:44,008 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:44,212 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:44,436 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:44,645 - root - INFO - Processed 30/33 wells
2025-01-16 12:20:44,646 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300001070984
2025-01-16 12:20:44,853 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:45,048 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300001070984
2025-01-16 12:20:47,000 - root - INFO - Well pads table populated successfully.
2025-01-16 12:21:01,189 - root - INFO - Dialog closed successfully
2025-01-18 22:42:19,234 - root - DEBUG - Toolbar setup completed
2025-01-18 22:42:19,235 - root - DEBUG - Scenario dropdown setup completed
2025-01-18 22:42:19,240 - root - DEBUG - Table setup completed
2025-01-18 22:42:19,240 - root - DEBUG - UI setup completed successfully
2025-01-18 22:42:19,242 - root - DEBUG - Signal connections established
2025-01-18 22:42:19,244 - root - INFO - No scenarios to load.
2025-01-18 22:42:19,245 - root - INFO - PUDPropertiesDialog initialized
2025-01-18 22:42:22,693 - root - INFO - Dialog closed successfully
2025-01-18 22:44:19,720 - root - DEBUG - Toolbar setup completed
2025-01-18 22:44:19,720 - root - DEBUG - Scenario dropdown setup completed
2025-01-18 22:44:19,722 - root - DEBUG - Table setup completed
2025-01-18 22:44:19,722 - root - DEBUG - UI setup completed successfully
2025-01-18 22:44:19,723 - root - DEBUG - Signal connections established
2025-01-18 22:44:19,727 - root - INFO - No scenarios to load.
2025-01-18 22:44:19,727 - root - INFO - PUDPropertiesDialog initialized
2025-01-18 22:45:17,934 - root - INFO - Scenario 'First scenario' added successfully with ID 2. Active: 0
2025-01-18 22:45:17,951 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-18 22:45:17,955 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-18 22:45:17,960 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-18 22:45:17,965 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-18 22:45:17,970 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-18 22:45:17,975 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-18 22:45:17,980 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-18 22:45:17,985 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-18 22:45:17,991 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-18 22:45:17,997 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-18 22:45:18,002 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-18 22:45:18,007 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-18 22:45:18,013 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-18 22:45:18,019 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-18 22:45:18,025 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-18 22:45:18,030 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-18 22:45:18,035 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-18 22:45:18,041 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-18 22:45:18,047 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-18 22:45:18,054 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-18 22:45:18,059 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-18 22:45:18,064 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-18 22:45:18,070 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-18 22:45:18,075 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-18 22:45:18,081 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-18 22:45:18,087 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-18 22:45:18,092 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-18 22:45:19,408 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-18 22:45:19,411 - root - INFO - Deleted model properties for scenario 2
2025-01-18 22:45:19,411 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-18 22:45:19,417 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:19,814 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:20,174 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:20,514 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:20,874 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:21,239 - root - INFO - Processed 5/27 wells
2025-01-18 22:45:21,240 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:21,590 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:21,943 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:22,305 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:22,652 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:23,028 - root - INFO - Processed 10/27 wells
2025-01-18 22:45:23,028 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:23,414 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:23,770 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:24,133 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:24,491 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:24,848 - root - INFO - Processed 15/27 wells
2025-01-18 22:45:24,849 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:25,247 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:25,610 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:25,970 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:26,340 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:26,700 - root - INFO - Processed 20/27 wells
2025-01-18 22:45:26,701 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:27,070 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:27,438 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:27,807 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-18 22:45:28,176 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:28,523 - root - INFO - Processed 25/27 wells
2025-01-18 22:45:28,524 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-18 22:45:28,892 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-18 22:45:31,032 - root - INFO - Well pads table populated successfully.
2025-01-18 22:45:54,477 - root - INFO - Widget change tracked - Row: 1, Column: 1, Value: 2025-04-01
2025-01-18 22:45:54,960 - root - INFO - Widget change tracked - Row: 2, Column: 1, Value: 2025-02-18
2025-01-18 22:45:59,036 - root - INFO - Widget change tracked - Row: 2, Column: 1, Value: 2025-06-27
2025-01-18 22:46:03,369 - root - INFO - Widget change tracked - Row: 3, Column: 1, Value: 2025-10-18
2025-01-18 22:46:06,649 - root - INFO - Widget change tracked - Row: 4, Column: 1, Value: 2025-12-18
2025-01-18 22:46:13,633 - root - INFO - Widget change tracked - Row: 0, Column: 1, Value: 2025-01-01
2025-01-18 22:46:20,055 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-02-18
2025-01-18 22:46:20,072 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-03-18
2025-01-18 22:46:20,088 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-04-18
2025-01-18 22:46:20,119 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-05-18
2025-01-18 22:46:20,168 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-06-18
2025-01-18 22:46:20,428 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-07-18
2025-01-18 22:46:20,460 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-08-18
2025-01-18 22:46:20,492 - root - INFO - Widget change tracked - Row: 18, Column: 1, Value: 2025-09-18
2025-01-19 08:17:14,062 - root - DEBUG - Toolbar setup completed
2025-01-19 08:17:14,064 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 08:17:14,067 - root - DEBUG - Table setup completed
2025-01-19 08:17:14,067 - root - DEBUG - UI setup completed successfully
2025-01-19 08:17:14,068 - root - DEBUG - Signal connections established
2025-01-19 08:17:14,070 - root - INFO - No scenarios to load.
2025-01-19 08:17:14,071 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 08:17:19,570 - root - INFO - Dialog closed successfully
2025-01-19 08:17:39,957 - root - DEBUG - Toolbar setup completed
2025-01-19 08:17:39,957 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 08:17:39,959 - root - DEBUG - Table setup completed
2025-01-19 08:17:39,959 - root - DEBUG - UI setup completed successfully
2025-01-19 08:17:39,960 - root - DEBUG - Signal connections established
2025-01-19 08:17:39,962 - root - INFO - No scenarios to load.
2025-01-19 08:17:39,963 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 08:18:41,201 - root - INFO - Scenario 'Test' added successfully with ID 2. Active: 0
2025-01-19 08:18:41,216 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 08:18:41,219 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 08:18:41,224 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 08:18:41,265 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 08:18:41,271 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 08:18:41,276 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 08:18:41,281 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 08:18:41,287 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 08:18:41,291 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 08:18:41,297 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 08:18:41,303 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 08:18:41,307 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 08:18:41,313 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 08:18:41,320 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 08:18:41,326 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 08:18:41,332 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 08:18:41,337 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 08:18:41,343 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 08:18:41,348 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 08:18:41,353 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 08:18:41,387 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 08:18:41,392 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 08:18:41,397 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 08:18:41,402 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 08:18:41,407 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 08:18:41,411 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 08:18:41,415 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 08:18:42,892 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-19 08:18:42,894 - root - INFO - Deleted model properties for scenario 2
2025-01-19 08:18:42,895 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 08:18:42,900 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:43,212 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:43,516 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:43,814 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:44,137 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:44,439 - root - INFO - Processed 5/27 wells
2025-01-19 08:18:44,441 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:44,763 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:45,073 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:45,406 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:45,736 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:46,006 - root - INFO - Processed 10/27 wells
2025-01-19 08:18:46,008 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:46,298 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:46,572 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:46,860 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:47,150 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:47,430 - root - INFO - Processed 15/27 wells
2025-01-19 08:18:47,431 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:47,725 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:48,029 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:48,300 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:48,576 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:48,870 - root - INFO - Processed 20/27 wells
2025-01-19 08:18:48,871 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:49,153 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:49,425 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:49,696 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:18:49,980 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:50,260 - root - INFO - Processed 25/27 wells
2025-01-19 08:18:50,261 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:18:50,535 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:18:58,006 - root - INFO - Well pads table populated successfully.
2025-01-19 08:45:05,409 - root - DEBUG - Toolbar setup completed
2025-01-19 08:45:05,411 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 08:45:05,413 - root - DEBUG - Table setup completed
2025-01-19 08:45:05,413 - root - DEBUG - UI setup completed successfully
2025-01-19 08:45:05,416 - root - DEBUG - Signal connections established
2025-01-19 08:45:05,480 - root - INFO - Well pads table populated successfully.
2025-01-19 08:45:05,480 - root - INFO - Initial data loaded successfully.
2025-01-19 08:45:05,480 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 08:45:22,156 - root - INFO - Scenario 'Test1' added successfully with ID 3. Active: 0
2025-01-19 08:45:22,170 - root - INFO - Scenario changed to: Test1
2025-01-19 08:45:22,170 - root - DEBUG - UI updated for scenario: Test1
2025-01-19 08:45:22,173 - root - INFO - Well pads table populated successfully.
2025-01-19 08:45:22,174 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 08:45:22,180 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 08:45:22,185 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 08:45:22,189 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 08:45:22,195 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 08:45:22,201 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 08:45:22,205 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 08:45:22,212 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 08:45:22,217 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 08:45:22,223 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 08:45:22,229 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 08:45:22,234 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 08:45:22,239 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 08:45:22,244 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 08:45:22,249 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 08:45:22,255 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 08:45:22,262 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 08:45:22,268 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 08:45:22,274 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 08:45:22,280 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 08:45:22,286 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 08:45:22,292 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 08:45:22,298 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 08:45:22,303 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 08:45:22,310 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 08:45:22,315 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 08:45:22,321 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 08:45:23,420 - root - INFO - Scenario 3 updated with 27 wells.
2025-01-19 08:45:23,421 - root - INFO - Deleted model properties for scenario 3
2025-01-19 08:45:23,424 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 08:45:23,431 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:23,770 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:24,040 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:24,323 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:24,585 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:24,862 - root - INFO - Processed 5/27 wells
2025-01-19 08:45:24,863 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:25,149 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:25,419 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:25,685 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:25,951 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:26,214 - root - INFO - Processed 10/27 wells
2025-01-19 08:45:26,214 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:26,479 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:26,737 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:27,006 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:27,275 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:27,535 - root - INFO - Processed 15/27 wells
2025-01-19 08:45:27,535 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:27,806 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:28,078 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:28,345 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:28,615 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:28,891 - root - INFO - Processed 20/27 wells
2025-01-19 08:45:28,892 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:29,243 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:29,533 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:29,817 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 08:45:30,108 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:30,399 - root - INFO - Processed 25/27 wells
2025-01-19 08:45:30,399 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 08:45:30,671 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 08:45:32,727 - root - INFO - Well pads table populated successfully.
2025-01-19 08:54:26,502 - root - DEBUG - Toolbar setup completed
2025-01-19 08:54:26,503 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 08:54:26,505 - root - DEBUG - Table setup completed
2025-01-19 08:54:26,505 - root - DEBUG - UI setup completed successfully
2025-01-19 08:54:26,506 - root - DEBUG - Signal connections established
2025-01-19 08:54:26,509 - root - INFO - Scenario changed to: Test1
2025-01-19 08:54:26,510 - root - DEBUG - UI updated for scenario: Test1
2025-01-19 08:54:26,561 - root - INFO - Well pads table populated successfully.
2025-01-19 08:54:26,610 - root - INFO - Well pads table populated successfully.
2025-01-19 08:54:26,611 - root - INFO - Initial data loaded successfully.
2025-01-19 08:54:26,611 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 08:54:27,776 - root - ERROR - Error in scenario_pud_select: 'PUDWellSelector' object has no attribute 'total_lateral_input'
2025-01-19 08:57:05,129 - root - DEBUG - Toolbar setup completed
2025-01-19 08:57:05,130 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 08:57:05,132 - root - DEBUG - Table setup completed
2025-01-19 08:57:05,132 - root - DEBUG - UI setup completed successfully
2025-01-19 08:57:05,135 - root - DEBUG - Signal connections established
2025-01-19 08:57:05,137 - root - INFO - Scenario changed to: Test1
2025-01-19 08:57:05,138 - root - DEBUG - UI updated for scenario: Test1
2025-01-19 08:57:05,194 - root - INFO - Well pads table populated successfully.
2025-01-19 08:57:05,248 - root - INFO - Well pads table populated successfully.
2025-01-19 08:57:05,249 - root - INFO - Initial data loaded successfully.
2025-01-19 08:57:05,249 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 08:57:50,741 - root - INFO - Scenario 'Test3' added successfully with ID 4. Active: 0
2025-01-19 08:57:50,754 - root - INFO - Scenario changed to: Test3
2025-01-19 08:57:50,754 - root - DEBUG - UI updated for scenario: Test3
2025-01-19 08:57:50,757 - root - INFO - Well pads table populated successfully.
2025-01-19 08:57:50,758 - root - ERROR - Error saving wells to database: 'total_lateral'
2025-01-19 08:57:54,015 - root - INFO - Deleted model properties for scenario 4
2025-01-19 08:57:54,016 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 08:57:54,022 - root - WARNING - No wells found for this scenario.
2025-01-19 08:57:54,857 - root - INFO - Well pads table populated successfully.
2025-01-19 09:15:56,523 - root - DEBUG - Toolbar setup completed
2025-01-19 09:15:56,524 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:15:56,526 - root - DEBUG - Table setup completed
2025-01-19 09:15:56,527 - root - DEBUG - UI setup completed successfully
2025-01-19 09:15:56,528 - root - DEBUG - Signal connections established
2025-01-19 09:15:56,532 - root - INFO - Well pads table populated successfully.
2025-01-19 09:15:56,532 - root - INFO - Initial data loaded successfully.
2025-01-19 09:15:56,532 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:16:32,828 - root - INFO - Scenario 'test12' added successfully with ID 3. Active: 0
2025-01-19 09:16:32,841 - root - INFO - Scenario changed to: test12
2025-01-19 09:16:32,842 - root - DEBUG - UI updated for scenario: test12
2025-01-19 09:16:32,843 - root - INFO - Well pads table populated successfully.
2025-01-19 09:16:32,844 - root - ERROR - Error saving wells to database: 'total_depth'
2025-01-19 09:22:08,492 - root - DEBUG - Toolbar setup completed
2025-01-19 09:22:08,493 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:22:08,495 - root - DEBUG - Table setup completed
2025-01-19 09:22:08,495 - root - DEBUG - UI setup completed successfully
2025-01-19 09:22:08,497 - root - DEBUG - Signal connections established
2025-01-19 09:22:08,500 - root - INFO - Scenario changed to: test12
2025-01-19 09:22:08,501 - root - DEBUG - UI updated for scenario: test12
2025-01-19 09:22:08,503 - root - INFO - Well pads table populated successfully.
2025-01-19 09:22:08,503 - root - INFO - Well pads table populated successfully.
2025-01-19 09:22:08,504 - root - INFO - Initial data loaded successfully.
2025-01-19 09:22:08,504 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:22:33,140 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP3L1Side1Leg1', 'total_depth': 2293.6551170391585, 'total_capex_cost': 118968.27558519579}
2025-01-19 09:22:33,141 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP6L1Side1Leg2', 'total_depth': 2135.62512264325, 'total_capex_cost': 118178.12561321625}
2025-01-19 09:22:33,142 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP4L1Side1Leg1', 'total_depth': 2293.6512076844724, 'total_capex_cost': 118968.25603842236}
2025-01-19 09:22:33,143 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP9L1Side1Leg2', 'total_depth': 1324.589229096551, 'total_capex_cost': 114122.94614548275}
2025-01-19 09:22:33,144 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP7L1Side1Leg3', 'total_depth': 2293.6514145538085, 'total_capex_cost': 118968.25707276905}
2025-01-19 09:22:33,145 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP2L1Side1Leg3', 'total_depth': 2293.666789628998, 'total_capex_cost': 118968.333948145}
2025-01-19 09:22:33,146 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP1L1Side1Leg1', 'total_depth': 2293.6468243157533, 'total_capex_cost': 118968.23412157877}
2025-01-19 09:22:33,147 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP8L1Side1Leg3', 'total_depth': 1981.0509303119527, 'total_capex_cost': 117405.25465155976}
2025-01-19 09:22:33,148 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP4L1Side1Leg2', 'total_depth': 2135.620000001043, 'total_capex_cost': 118178.10000000522}
2025-01-19 09:22:33,149 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP1L1Side1Leg2', 'total_depth': 2135.6199999991804, 'total_capex_cost': 118178.0999999959}
2025-01-19 09:22:33,150 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP9L1Side1Leg3', 'total_depth': 1479.3117373529258, 'total_capex_cost': 114896.55868676463}
2025-01-19 09:22:33,151 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP2L1Side1Leg1', 'total_depth': 2293.6706563943662, 'total_capex_cost': 118968.35328197182}
2025-01-19 09:22:33,152 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP6L1Side1Leg1', 'total_depth': 2293.6496792095327, 'total_capex_cost': 118968.24839604767}
2025-01-19 09:22:33,152 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP9L1Side1Leg1', 'total_depth': 1517.895032891965, 'total_capex_cost': 115089.47516445983}
2025-01-19 09:22:33,153 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP8L1Side1Leg1', 'total_depth': 1984.7328320827357, 'total_capex_cost': 117423.66416041368}
2025-01-19 09:22:33,154 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP7L1Side1Leg1', 'total_depth': 2293.647812360794, 'total_capex_cost': 118968.23906180396}
2025-01-19 09:22:33,155 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP5L1Side1Leg2', 'total_depth': 2135.631564266494, 'total_capex_cost': 118178.15782133247}
2025-01-19 09:22:33,156 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP5L1Side1Leg3', 'total_depth': 2293.651857250609, 'total_capex_cost': 118968.25928625304}
2025-01-19 09:22:33,158 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP6L1Side1Leg3', 'total_depth': 2293.651264769404, 'total_capex_cost': 118968.25632384702}
2025-01-19 09:22:33,159 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP7L1Side1Leg2', 'total_depth': 2135.629250201506, 'total_capex_cost': 118178.14625100754}
2025-01-19 09:22:33,160 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP2L1Side1Leg2', 'total_depth': 2135.6300000008196, 'total_capex_cost': 118178.1500000041}
2025-01-19 09:22:33,161 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP4L1Side1Leg3', 'total_depth': 2293.6608739180033, 'total_capex_cost': 118968.30436959001}
2025-01-19 09:22:33,162 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP3L1Side1Leg2', 'total_depth': 2135.627024426648, 'total_capex_cost': 118178.13512213324}
2025-01-19 09:22:33,163 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP8L1Side1Leg2', 'total_depth': 1804.7923244225353, 'total_capex_cost': 116523.96162211268}
2025-01-19 09:22:33,164 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP3L1Side1Leg3', 'total_depth': 2293.651246781898, 'total_capex_cost': 118968.25623390949}
2025-01-19 09:22:33,165 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP1L1Side1Leg3', 'total_depth': 2293.656311244949, 'total_capex_cost': 118968.28155622474}
2025-01-19 09:22:33,166 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP5L1Side1Leg1', 'total_depth': 2293.6518013130644, 'total_capex_cost': 118968.25900656532}
2025-01-19 09:22:34,331 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-19 09:22:34,333 - root - INFO - Deleted model properties for scenario 2
2025-01-19 09:22:34,334 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 09:22:34,342 - root - WARNING - No wells found for this scenario.
2025-01-19 09:22:34,887 - root - INFO - Well pads table populated successfully.
2025-01-19 09:28:45,575 - root - DEBUG - Toolbar setup completed
2025-01-19 09:28:45,576 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:28:45,578 - root - DEBUG - Table setup completed
2025-01-19 09:28:45,579 - root - DEBUG - UI setup completed successfully
2025-01-19 09:28:45,580 - root - DEBUG - Signal connections established
2025-01-19 09:28:45,584 - root - INFO - Scenario changed to: test12
2025-01-19 09:28:45,585 - root - DEBUG - UI updated for scenario: test12
2025-01-19 09:28:45,586 - root - INFO - Well pads table populated successfully.
2025-01-19 09:28:45,586 - root - INFO - Well pads table populated successfully.
2025-01-19 09:28:45,587 - root - INFO - Initial data loaded successfully.
2025-01-19 09:28:45,587 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:30:38,329 - root - DEBUG - Toolbar setup completed
2025-01-19 09:30:38,330 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:30:38,333 - root - DEBUG - Table setup completed
2025-01-19 09:30:38,333 - root - DEBUG - UI setup completed successfully
2025-01-19 09:30:38,334 - root - DEBUG - Signal connections established
2025-01-19 09:30:38,337 - root - INFO - Scenario changed to: test12
2025-01-19 09:30:38,338 - root - DEBUG - UI updated for scenario: test12
2025-01-19 09:30:38,339 - root - INFO - Well pads table populated successfully.
2025-01-19 09:30:38,340 - root - INFO - Well pads table populated successfully.
2025-01-19 09:30:38,341 - root - INFO - Initial data loaded successfully.
2025-01-19 09:30:38,341 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:30:57,280 - root - ERROR - Error adding scenario '0     test333
1     test333
2     test333
3     test333
4     test333
5     test333
6     test333
7     test333
8     test333
9     test333
10    test333
11    test333
12    test333
13    test333
14    test333
15    test333
16    test333
17    test333
18    test333
19    test333
20    test333
21    test333
22    test333
23    test333
24    test333
25    test333
26    test333
Name: scenario, dtype: object': Error binding parameter 1: type 'Series' is not supported
2025-01-19 09:30:57,529 - root - ERROR - Error in scenario_pud_select: 'PySide6.QtWidgets.QComboBox.findText' called with wrong argument types:
  PySide6.QtWidgets.QComboBox.findText(Series)
Supported signatures:
  PySide6.QtWidgets.QComboBox.findText(str, PySide6.QtCore.Qt.MatchFlag = Instance(Qt.MatchFlags(Qt.MatchExactly | Qt.MatchCaseSensitive)))
2025-01-19 09:35:56,720 - root - DEBUG - Toolbar setup completed
2025-01-19 09:35:56,721 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:35:56,723 - root - DEBUG - Table setup completed
2025-01-19 09:35:56,723 - root - DEBUG - UI setup completed successfully
2025-01-19 09:35:56,724 - root - DEBUG - Signal connections established
2025-01-19 09:35:56,727 - root - WARNING - No active scenario found.
2025-01-19 09:36:00,261 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:36:12,183 - root - ERROR - Error adding scenario '0     test11111
1     test11111
2     test11111
3     test11111
4     test11111
5     test11111
6     test11111
7     test11111
8     test11111
9     test11111
10    test11111
11    test11111
12    test11111
13    test11111
14    test11111
15    test11111
16    test11111
17    test11111
18    test11111
19    test11111
20    test11111
21    test11111
22    test11111
23    test11111
24    test11111
25    test11111
26    test11111
Name: scenario, dtype: object': Error binding parameter 1: type 'Series' is not supported
2025-01-19 09:36:12,431 - root - ERROR - Error in scenario_pud_select: 'PySide6.QtWidgets.QComboBox.findText' called with wrong argument types:
  PySide6.QtWidgets.QComboBox.findText(Series)
Supported signatures:
  PySide6.QtWidgets.QComboBox.findText(str, PySide6.QtCore.Qt.MatchFlag = Instance(Qt.MatchFlags(Qt.MatchExactly | Qt.MatchCaseSensitive)))
2025-01-19 09:43:41,630 - root - DEBUG - Toolbar setup completed
2025-01-19 09:43:41,631 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:43:41,634 - root - DEBUG - Table setup completed
2025-01-19 09:43:41,634 - root - DEBUG - UI setup completed successfully
2025-01-19 09:43:41,635 - root - DEBUG - Signal connections established
2025-01-19 09:43:41,637 - root - INFO - No scenarios to load.
2025-01-19 09:43:41,637 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:43:42,590 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 09:44:02,884 - root - INFO - Scenario 'art' added successfully with ID 2. Active: 0
2025-01-19 09:44:05,010 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 09:44:05,021 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 09:44:05,027 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 09:44:05,033 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 09:44:05,038 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 09:44:05,045 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 09:44:05,051 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 09:44:05,057 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 09:44:05,062 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 09:44:05,067 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 09:44:05,073 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 09:44:05,107 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 09:44:05,113 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 09:44:05,118 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 09:44:05,125 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 09:44:05,131 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 09:44:05,137 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 09:44:05,142 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 09:44:05,146 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 09:44:05,152 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 09:44:05,157 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 09:44:05,162 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 09:44:05,167 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 09:44:05,174 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 09:44:05,179 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 09:44:05,184 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 09:44:05,189 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 09:44:07,906 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-19 09:44:10,088 - root - INFO - Deleted model properties for scenario 2
2025-01-19 09:44:10,089 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 09:44:10,097 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:10,371 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:10,601 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:10,839 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:11,068 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:11,348 - root - INFO - Processed 5/27 wells
2025-01-19 09:44:11,350 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:11,615 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:11,869 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:12,107 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:12,379 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:12,607 - root - INFO - Processed 10/27 wells
2025-01-19 09:44:12,609 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:12,832 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:13,051 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:13,304 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:13,526 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:13,751 - root - INFO - Processed 15/27 wells
2025-01-19 09:44:13,752 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:13,966 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:14,202 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:14,431 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:14,690 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:14,926 - root - INFO - Processed 20/27 wells
2025-01-19 09:44:14,926 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:15,198 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:15,440 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:15,683 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:44:15,918 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:16,189 - root - INFO - Processed 25/27 wells
2025-01-19 09:44:16,190 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:44:16,447 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:44:18,105 - root - INFO - Well pads table populated successfully.
2025-01-19 09:50:40,367 - root - DEBUG - Toolbar setup completed
2025-01-19 09:50:40,368 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 09:50:40,370 - root - DEBUG - Table setup completed
2025-01-19 09:50:40,371 - root - DEBUG - UI setup completed successfully
2025-01-19 09:50:40,373 - root - DEBUG - Signal connections established
2025-01-19 09:50:40,429 - root - INFO - Well pads table populated successfully.
2025-01-19 09:50:40,429 - root - INFO - Initial data loaded successfully.
2025-01-19 09:50:40,429 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 09:50:53,080 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 09:51:28,261 - root - INFO - Scenario 'art1' added successfully with ID 3. Active: 0
2025-01-19 09:51:28,275 - root - INFO - Scenario changed to: art1
2025-01-19 09:51:28,276 - root - DEBUG - UI updated for scenario: art1
2025-01-19 09:51:28,279 - root - INFO - Well pads table populated successfully.
2025-01-19 09:51:30,083 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 09:51:30,088 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 09:51:30,094 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 09:51:30,100 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 09:51:30,105 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 09:51:30,111 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 09:51:30,116 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 09:51:30,122 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 09:51:30,127 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 09:51:30,133 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 09:51:30,138 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 09:51:30,144 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 09:51:30,149 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 09:51:30,155 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 09:51:30,161 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 09:51:30,167 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 09:51:30,173 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 09:51:30,178 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 09:51:30,184 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 09:51:30,190 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 09:51:30,196 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 09:51:30,202 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 09:51:30,208 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 09:51:30,213 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 09:51:30,219 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 09:51:30,225 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 09:51:30,231 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 09:51:32,073 - root - INFO - Scenario 3 updated with 27 wells.
2025-01-19 09:51:34,201 - root - INFO - Deleted model properties for scenario 3
2025-01-19 09:51:34,202 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 09:51:34,213 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:35,244 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:36,218 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:37,175 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:38,164 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:39,059 - root - INFO - Processed 5/27 wells
2025-01-19 09:51:39,060 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:39,969 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:40,909 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:41,855 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:42,816 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:43,769 - root - INFO - Processed 10/27 wells
2025-01-19 09:51:43,770 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:44,774 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:45,718 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:46,657 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:47,568 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:48,472 - root - INFO - Processed 15/27 wells
2025-01-19 09:51:48,473 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:51:49,371 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:50,279 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:51,231 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:52,189 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:53,306 - root - INFO - Processed 20/27 wells
2025-01-19 09:51:53,308 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:54,220 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:55,149 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:56,079 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 09:51:57,046 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:58,001 - root - INFO - Processed 25/27 wells
2025-01-19 09:51:58,002 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 09:51:58,960 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 09:52:03,910 - root - INFO - Well pads table populated successfully.
2025-01-19 10:00:43,023 - root - DEBUG - Toolbar setup completed
2025-01-19 10:00:43,024 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:00:43,026 - root - DEBUG - Table setup completed
2025-01-19 10:00:43,027 - root - DEBUG - UI setup completed successfully
2025-01-19 10:00:43,028 - root - DEBUG - Signal connections established
2025-01-19 10:00:43,030 - root - INFO - Scenario changed to: art1
2025-01-19 10:00:43,031 - root - DEBUG - UI updated for scenario: art1
2025-01-19 10:00:43,090 - root - INFO - Well pads table populated successfully.
2025-01-19 10:00:43,145 - root - INFO - Well pads table populated successfully.
2025-01-19 10:00:43,145 - root - INFO - Initial data loaded successfully.
2025-01-19 10:00:43,145 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:00:44,221 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:01:03,158 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:01:03,160 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:01:03,162 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:01:03,163 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:01:03,165 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:01:03,166 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:01:03,168 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:01:03,169 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:01:03,171 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:01:03,173 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:01:03,174 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:01:03,176 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:01:03,177 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:01:03,179 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:01:03,180 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:01:03,182 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:01:03,183 - root - INFO - Updating well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:01:03,185 - root - INFO - Updating well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:01:03,187 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:01:03,188 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:01:03,190 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:01:03,192 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:01:03,194 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:01:03,195 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:01:03,196 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:01:03,198 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:01:03,200 - root - INFO - Updating well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:01:05,159 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-19 10:01:07,040 - root - INFO - Deleted model properties for scenario 2
2025-01-19 10:01:07,042 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:01:07,051 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:07,304 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:07,506 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:07,712 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:07,914 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:08,136 - root - INFO - Processed 5/27 wells
2025-01-19 10:01:08,137 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:08,348 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:08,543 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:08,738 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:08,939 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:09,134 - root - INFO - Processed 10/27 wells
2025-01-19 10:01:09,135 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:09,334 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:09,529 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:09,735 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:09,928 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:10,130 - root - INFO - Processed 15/27 wells
2025-01-19 10:01:10,131 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:10,369 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:10,570 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:10,769 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:10,966 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:11,171 - root - INFO - Processed 20/27 wells
2025-01-19 10:01:11,172 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:11,377 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:11,570 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:11,766 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:01:11,967 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:12,178 - root - INFO - Processed 25/27 wells
2025-01-19 10:01:12,179 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:01:12,372 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:01:13,893 - root - INFO - Well pads table populated successfully.
2025-01-19 10:06:56,524 - root - DEBUG - Toolbar setup completed
2025-01-19 10:06:56,525 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:06:56,528 - root - DEBUG - Table setup completed
2025-01-19 10:06:56,528 - root - DEBUG - UI setup completed successfully
2025-01-19 10:06:56,529 - root - DEBUG - Signal connections established
2025-01-19 10:06:56,532 - root - INFO - Scenario changed to: art1
2025-01-19 10:06:56,533 - root - DEBUG - UI updated for scenario: art1
2025-01-19 10:06:56,600 - root - INFO - Well pads table populated successfully.
2025-01-19 10:06:56,678 - root - INFO - Well pads table populated successfully.
2025-01-19 10:06:56,679 - root - INFO - Initial data loaded successfully.
2025-01-19 10:06:56,679 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:08:09,511 - root - DEBUG - Toolbar setup completed
2025-01-19 10:08:09,512 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:08:09,515 - root - DEBUG - Table setup completed
2025-01-19 10:08:09,515 - root - DEBUG - UI setup completed successfully
2025-01-19 10:08:09,516 - root - DEBUG - Signal connections established
2025-01-19 10:08:09,519 - root - INFO - Scenario changed to: art1
2025-01-19 10:08:09,520 - root - DEBUG - UI updated for scenario: art1
2025-01-19 10:08:09,569 - root - INFO - Well pads table populated successfully.
2025-01-19 10:08:09,622 - root - INFO - Well pads table populated successfully.
2025-01-19 10:08:09,622 - root - INFO - Initial data loaded successfully.
2025-01-19 10:08:09,622 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:09:52,341 - root - DEBUG - Toolbar setup completed
2025-01-19 10:09:52,343 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:09:52,345 - root - DEBUG - Table setup completed
2025-01-19 10:09:52,345 - root - DEBUG - UI setup completed successfully
2025-01-19 10:09:52,347 - root - DEBUG - Signal connections established
2025-01-19 10:09:52,351 - root - INFO - Scenario changed to: art1
2025-01-19 10:09:52,352 - root - DEBUG - UI updated for scenario: art1
2025-01-19 10:09:52,428 - root - INFO - Well pads table populated successfully.
2025-01-19 10:09:52,507 - root - INFO - Well pads table populated successfully.
2025-01-19 10:09:52,507 - root - INFO - Initial data loaded successfully.
2025-01-19 10:09:52,507 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:10:08,221 - root - INFO - Scenario 'art7777' added successfully with ID 4. Active: 0
2025-01-19 10:10:08,233 - root - INFO - Scenario changed to: art7777
2025-01-19 10:10:08,234 - root - DEBUG - UI updated for scenario: art7777
2025-01-19 10:10:08,236 - root - INFO - Well pads table populated successfully.
2025-01-19 10:10:08,236 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:10:10,329 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:10:10,334 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:10:10,340 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:10:10,346 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:10:10,352 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:10:10,357 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:10:10,363 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:10:10,370 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:10:10,377 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:10:10,383 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:10:10,389 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:10:10,397 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:10:10,403 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:10:10,408 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:10:10,414 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:10:10,420 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:10:10,426 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:10:10,431 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:10:10,437 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:10:10,443 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:10:10,448 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:10:10,454 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:10:10,459 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:10:10,465 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:10:10,469 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:10:10,475 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:10:10,481 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:10:12,733 - root - INFO - Scenario 4 updated with 27 wells.
2025-01-19 10:10:14,294 - root - INFO - Deleted model properties for scenario 4
2025-01-19 10:10:14,296 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:10:14,309 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:14,587 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:14,831 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:15,047 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:15,259 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:15,503 - root - INFO - Processed 5/27 wells
2025-01-19 10:10:15,504 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:15,741 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:15,949 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:16,164 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:16,410 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:16,629 - root - INFO - Processed 10/27 wells
2025-01-19 10:10:16,630 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:16,854 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:17,097 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:17,314 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:17,548 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:17,769 - root - INFO - Processed 15/27 wells
2025-01-19 10:10:17,770 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:17,967 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:18,215 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:18,429 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:18,627 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:18,844 - root - INFO - Processed 20/27 wells
2025-01-19 10:10:18,844 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:19,047 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:19,256 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:19,464 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:10:19,671 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:19,897 - root - INFO - Processed 25/27 wells
2025-01-19 10:10:19,898 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:10:20,100 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:10:26,979 - root - INFO - Well pads table populated successfully.
2025-01-19 10:11:25,479 - root - DEBUG - Toolbar setup completed
2025-01-19 10:11:25,481 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:11:25,483 - root - DEBUG - Table setup completed
2025-01-19 10:11:25,484 - root - DEBUG - UI setup completed successfully
2025-01-19 10:11:25,485 - root - DEBUG - Signal connections established
2025-01-19 10:11:25,487 - root - INFO - Scenario changed to: art7777
2025-01-19 10:11:25,488 - root - DEBUG - UI updated for scenario: art7777
2025-01-19 10:11:25,542 - root - INFO - Well pads table populated successfully.
2025-01-19 10:11:25,598 - root - INFO - Well pads table populated successfully.
2025-01-19 10:11:25,598 - root - INFO - Initial data loaded successfully.
2025-01-19 10:11:25,598 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:11:38,458 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:12:56,201 - root - INFO - Scenario 'art123' added successfully with ID 5. Active: 0
2025-01-19 10:12:59,008 - root - INFO - Scenario changed to: art123
2025-01-19 10:12:59,009 - root - DEBUG - UI updated for scenario: art123
2025-01-19 10:12:59,011 - root - INFO - Well pads table populated successfully.
2025-01-19 10:13:00,299 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:13:00,309 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:13:00,315 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:13:00,321 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:13:00,326 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:13:00,332 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:13:00,338 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:13:00,344 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:13:00,350 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:13:00,356 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:13:00,362 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:13:00,368 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:13:00,373 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:13:00,379 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:13:00,385 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:13:00,391 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:13:00,397 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:13:00,403 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:13:00,410 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:13:00,416 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:13:00,423 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:13:00,428 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:13:00,434 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:13:00,440 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:13:00,446 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:13:00,452 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:13:00,458 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:14:56,876 - root - DEBUG - Toolbar setup completed
2025-01-19 10:14:56,877 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:14:56,880 - root - DEBUG - Table setup completed
2025-01-19 10:14:56,880 - root - DEBUG - UI setup completed successfully
2025-01-19 10:14:56,882 - root - DEBUG - Signal connections established
2025-01-19 10:14:56,885 - root - INFO - Scenario changed to: art123
2025-01-19 10:14:56,885 - root - DEBUG - UI updated for scenario: art123
2025-01-19 10:14:56,936 - root - INFO - Well pads table populated successfully.
2025-01-19 10:14:56,990 - root - INFO - Well pads table populated successfully.
2025-01-19 10:14:56,990 - root - INFO - Initial data loaded successfully.
2025-01-19 10:14:56,992 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:15:07,597 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:15:19,735 - root - INFO - Scenario 'art397' added successfully with ID 6. Active: 0
2025-01-19 10:15:19,750 - root - INFO - Scenario changed to: art397
2025-01-19 10:15:19,752 - root - DEBUG - UI updated for scenario: art397
2025-01-19 10:15:19,755 - root - INFO - Well pads table populated successfully.
2025-01-19 10:15:19,892 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP3L1Side1Leg1', 'total_depth': 2293.6551170391585}
2025-01-19 10:15:19,893 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP6L1Side1Leg2', 'total_depth': 2135.62512264325}
2025-01-19 10:15:19,895 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP4L1Side1Leg1', 'total_depth': 2293.6512076844724}
2025-01-19 10:15:19,896 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP9L1Side1Leg2', 'total_depth': 1324.589229096551}
2025-01-19 10:15:19,898 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP7L1Side1Leg3', 'total_depth': 2293.6514145538085}
2025-01-19 10:15:19,899 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP2L1Side1Leg3', 'total_depth': 2293.666789628998}
2025-01-19 10:15:19,900 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP1L1Side1Leg1', 'total_depth': 2293.6468243157533}
2025-01-19 10:15:19,901 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP8L1Side1Leg3', 'total_depth': 1981.0509303119527}
2025-01-19 10:15:19,903 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP4L1Side1Leg2', 'total_depth': 2135.620000001043}
2025-01-19 10:15:19,904 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP1L1Side1Leg2', 'total_depth': 2135.6199999991804}
2025-01-19 10:15:19,906 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP9L1Side1Leg3', 'total_depth': 1479.3117373529258}
2025-01-19 10:15:19,907 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP2L1Side1Leg1', 'total_depth': 2293.6706563943662}
2025-01-19 10:15:19,908 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP6L1Side1Leg1', 'total_depth': 2293.6496792095327}
2025-01-19 10:15:19,909 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP9L1Side1Leg1', 'total_depth': 1517.895032891965}
2025-01-19 10:15:19,911 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP8L1Side1Leg1', 'total_depth': 1984.7328320827357}
2025-01-19 10:15:19,912 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP7L1Side1Leg1', 'total_depth': 2293.647812360794}
2025-01-19 10:15:19,913 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP5L1Side1Leg2', 'total_depth': 2135.631564266494}
2025-01-19 10:15:19,914 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP5L1Side1Leg3', 'total_depth': 2293.651857250609}
2025-01-19 10:15:19,915 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP6L1Side1Leg3', 'total_depth': 2293.651264769404}
2025-01-19 10:15:19,917 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP7L1Side1Leg2', 'total_depth': 2135.629250201506}
2025-01-19 10:15:19,918 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP2L1Side1Leg2', 'total_depth': 2135.6300000008196}
2025-01-19 10:15:19,920 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP4L1Side1Leg3', 'total_depth': 2293.6608739180033}
2025-01-19 10:15:19,921 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP3L1Side1Leg2', 'total_depth': 2135.627024426648}
2025-01-19 10:15:19,922 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP8L1Side1Leg2', 'total_depth': 1804.7923244225353}
2025-01-19 10:15:19,923 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP3L1Side1Leg3', 'total_depth': 2293.651246781898}
2025-01-19 10:15:19,925 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP1L1Side1Leg3', 'total_depth': 2293.656311244949}
2025-01-19 10:15:19,926 - root - INFO - Inserting new well pad for UWI: {'UWI': 'WP5L1Side1Leg1', 'total_depth': 2293.6518013130644}
2025-01-19 10:17:49,460 - root - DEBUG - Toolbar setup completed
2025-01-19 10:17:49,461 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:17:49,463 - root - DEBUG - Table setup completed
2025-01-19 10:17:49,463 - root - DEBUG - UI setup completed successfully
2025-01-19 10:17:49,464 - root - DEBUG - Signal connections established
2025-01-19 10:17:49,467 - root - INFO - Scenario changed to: art397
2025-01-19 10:17:49,467 - root - DEBUG - UI updated for scenario: art397
2025-01-19 10:17:49,468 - root - INFO - Well pads table populated successfully.
2025-01-19 10:17:49,470 - root - INFO - Well pads table populated successfully.
2025-01-19 10:17:49,470 - root - INFO - Initial data loaded successfully.
2025-01-19 10:17:49,470 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:18:06,409 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:18:15,561 - root - INFO - Scenario 'art5555' added successfully with ID 7. Active: 0
2025-01-19 10:18:15,577 - root - INFO - Scenario changed to: art5555
2025-01-19 10:18:15,578 - root - DEBUG - UI updated for scenario: art5555
2025-01-19 10:18:15,579 - root - INFO - Well pads table populated successfully.
2025-01-19 10:18:15,581 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:18:15,587 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:18:15,593 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:18:15,600 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:18:15,606 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:18:15,613 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:18:15,620 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:18:15,626 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:18:15,633 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:18:15,639 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:18:15,646 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:18:15,652 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:18:15,659 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:18:15,665 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:18:15,672 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:18:15,679 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:18:15,684 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:18:15,691 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:18:15,698 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:18:15,704 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:18:15,710 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:18:15,716 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:18:15,720 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:18:15,726 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:18:15,732 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:18:15,740 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:18:15,745 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:18:21,696 - root - INFO - Scenario 7 updated with 27 wells.
2025-01-19 10:18:21,699 - root - INFO - Deleted model properties for scenario 7
2025-01-19 10:18:21,700 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:18:21,711 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:22,013 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:22,255 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:22,463 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:22,671 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:22,879 - root - INFO - Processed 5/27 wells
2025-01-19 10:18:22,880 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:23,123 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:23,328 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:23,555 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:23,757 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:23,954 - root - INFO - Processed 10/27 wells
2025-01-19 10:18:23,955 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:24,169 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:24,378 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:24,586 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:24,789 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:24,993 - root - INFO - Processed 15/27 wells
2025-01-19 10:18:24,995 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:25,208 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:25,414 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:25,623 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:25,830 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:26,035 - root - INFO - Processed 20/27 wells
2025-01-19 10:18:26,036 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:26,247 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:26,460 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:26,657 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:18:26,861 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:27,063 - root - INFO - Processed 25/27 wells
2025-01-19 10:18:27,063 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:18:27,298 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:18:30,392 - root - INFO - Well pads table populated successfully.
2025-01-19 10:26:43,673 - root - DEBUG - Toolbar setup completed
2025-01-19 10:26:43,674 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:26:43,677 - root - DEBUG - Table setup completed
2025-01-19 10:26:43,677 - root - DEBUG - UI setup completed successfully
2025-01-19 10:26:43,678 - root - DEBUG - Signal connections established
2025-01-19 10:26:43,683 - root - INFO - Scenario changed to: art5555
2025-01-19 10:26:43,684 - root - DEBUG - UI updated for scenario: art5555
2025-01-19 10:26:43,761 - root - INFO - Well pads table populated successfully.
2025-01-19 10:26:43,837 - root - INFO - Well pads table populated successfully.
2025-01-19 10:26:43,837 - root - INFO - Initial data loaded successfully.
2025-01-19 10:26:43,837 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:30:30,213 - root - DEBUG - Toolbar setup completed
2025-01-19 10:30:30,214 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:30:30,216 - root - DEBUG - Table setup completed
2025-01-19 10:30:30,217 - root - DEBUG - UI setup completed successfully
2025-01-19 10:30:30,218 - root - DEBUG - Signal connections established
2025-01-19 10:30:30,221 - root - INFO - Scenario changed to: art5555
2025-01-19 10:30:30,221 - root - DEBUG - UI updated for scenario: art5555
2025-01-19 10:30:30,279 - root - INFO - Well pads table populated successfully.
2025-01-19 10:30:30,341 - root - INFO - Well pads table populated successfully.
2025-01-19 10:30:30,342 - root - INFO - Initial data loaded successfully.
2025-01-19 10:30:30,342 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:30:39,019 - root - INFO - Scenario 'artfffadsfa' added successfully with ID 8. Active: 0
2025-01-19 10:30:39,035 - root - INFO - Scenario changed to: artfffadsfa
2025-01-19 10:30:39,036 - root - DEBUG - UI updated for scenario: artfffadsfa
2025-01-19 10:30:39,039 - root - INFO - Well pads table populated successfully.
2025-01-19 10:30:39,040 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:30:39,044 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:30:39,051 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:30:39,056 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:30:39,063 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:30:39,067 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:30:39,074 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:30:39,080 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:30:39,087 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:30:39,093 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:30:39,098 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:30:39,104 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:30:39,110 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:30:39,115 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:30:39,123 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:30:39,129 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:30:39,135 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:30:39,143 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:30:39,149 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:30:39,154 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:30:39,160 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:30:39,166 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:30:39,171 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:30:39,177 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:30:39,183 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:30:39,187 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:30:39,192 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:30:40,331 - root - INFO - Scenario 8 updated with 27 wells.
2025-01-19 10:30:40,333 - root - INFO - Deleted model properties for scenario 8
2025-01-19 10:30:40,334 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:30:40,340 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:40,494 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:40,610 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:40,726 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:40,842 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:40,959 - root - INFO - Processed 5/27 wells
2025-01-19 10:30:40,959 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:41,083 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:41,205 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:41,322 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:41,448 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:41,591 - root - INFO - Processed 10/27 wells
2025-01-19 10:30:41,592 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:41,735 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:41,881 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:42,011 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:42,131 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:42,263 - root - INFO - Processed 15/27 wells
2025-01-19 10:30:42,264 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:42,382 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:42,505 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:42,627 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:42,740 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:42,859 - root - INFO - Processed 20/27 wells
2025-01-19 10:30:42,860 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:42,973 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:43,086 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:43,201 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:30:43,322 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:43,443 - root - INFO - Processed 25/27 wells
2025-01-19 10:30:43,444 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:30:43,570 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:30:47,494 - root - INFO - Well pads table populated successfully.
2025-01-19 10:32:47,303 - root - DEBUG - Toolbar setup completed
2025-01-19 10:32:47,304 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:32:47,306 - root - DEBUG - Table setup completed
2025-01-19 10:32:47,307 - root - DEBUG - UI setup completed successfully
2025-01-19 10:32:47,308 - root - DEBUG - Signal connections established
2025-01-19 10:32:47,311 - root - INFO - Scenario changed to: artfffadsfa
2025-01-19 10:32:47,312 - root - DEBUG - UI updated for scenario: artfffadsfa
2025-01-19 10:32:47,363 - root - INFO - Well pads table populated successfully.
2025-01-19 10:32:47,414 - root - INFO - Well pads table populated successfully.
2025-01-19 10:32:47,415 - root - INFO - Initial data loaded successfully.
2025-01-19 10:32:47,415 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:32:57,218 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:33:56,458 - root - DEBUG - Toolbar setup completed
2025-01-19 10:33:56,459 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:33:56,461 - root - DEBUG - Table setup completed
2025-01-19 10:33:56,462 - root - DEBUG - UI setup completed successfully
2025-01-19 10:33:56,463 - root - DEBUG - Signal connections established
2025-01-19 10:33:56,466 - root - INFO - Scenario changed to: artfffadsfa
2025-01-19 10:33:56,466 - root - DEBUG - UI updated for scenario: artfffadsfa
2025-01-19 10:33:56,517 - root - INFO - Well pads table populated successfully.
2025-01-19 10:33:56,567 - root - INFO - Well pads table populated successfully.
2025-01-19 10:33:56,567 - root - INFO - Initial data loaded successfully.
2025-01-19 10:33:56,567 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:34:23,920 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:34:33,356 - root - INFO - Scenario 'artasdfaee' added successfully with ID 9. Active: 0
2025-01-19 10:34:33,369 - root - INFO - Scenario changed to: artasdfaee
2025-01-19 10:34:33,370 - root - DEBUG - UI updated for scenario: artasdfaee
2025-01-19 10:34:33,372 - root - INFO - Well pads table populated successfully.
2025-01-19 10:34:33,375 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:34:33,379 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:34:33,384 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:34:33,390 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:34:33,397 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:34:33,402 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:34:33,408 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:34:33,415 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:34:33,422 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:34:33,427 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:34:33,432 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:34:33,437 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:34:33,443 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:34:33,448 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:34:33,452 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:34:33,458 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:34:33,464 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:34:33,469 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:34:33,474 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:34:33,479 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:34:33,486 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:34:33,492 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:34:33,497 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:34:33,502 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:34:33,507 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:34:33,512 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:34:33,518 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:34:40,347 - root - INFO - Scenario 9 updated with 27 wells.
2025-01-19 10:34:40,349 - root - INFO - Deleted model properties for scenario 9
2025-01-19 10:34:40,351 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:34:40,361 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:40,615 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:40,822 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:41,023 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:41,226 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:41,458 - root - INFO - Processed 5/27 wells
2025-01-19 10:34:41,460 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:41,698 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:41,912 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:42,151 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:42,364 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:42,569 - root - INFO - Processed 10/27 wells
2025-01-19 10:34:42,571 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:42,800 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:43,015 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:43,219 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:43,417 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:43,630 - root - INFO - Processed 15/27 wells
2025-01-19 10:34:43,631 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:43,856 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:44,083 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:44,288 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:44,502 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:44,704 - root - INFO - Processed 20/27 wells
2025-01-19 10:34:44,705 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:44,912 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:45,108 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:45,319 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:34:45,532 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:45,728 - root - INFO - Processed 25/27 wells
2025-01-19 10:34:45,729 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:34:45,939 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:34:47,985 - root - INFO - Well pads table populated successfully.
2025-01-19 10:36:19,354 - root - DEBUG - Toolbar setup completed
2025-01-19 10:36:19,356 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:36:19,358 - root - DEBUG - Table setup completed
2025-01-19 10:36:19,358 - root - DEBUG - UI setup completed successfully
2025-01-19 10:36:19,359 - root - DEBUG - Signal connections established
2025-01-19 10:36:19,364 - root - INFO - Scenario changed to: artasdfaee
2025-01-19 10:36:19,365 - root - DEBUG - UI updated for scenario: artasdfaee
2025-01-19 10:36:19,425 - root - INFO - Well pads table populated successfully.
2025-01-19 10:36:19,484 - root - INFO - Well pads table populated successfully.
2025-01-19 10:36:19,485 - root - INFO - Initial data loaded successfully.
2025-01-19 10:36:19,485 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:36:45,579 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:37:01,181 - root - ERROR - Error in scenario_pud_select: list indices must be integers or slices, not str
2025-01-19 10:39:59,051 - root - DEBUG - Toolbar setup completed
2025-01-19 10:39:59,052 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:39:59,055 - root - DEBUG - Table setup completed
2025-01-19 10:39:59,055 - root - DEBUG - UI setup completed successfully
2025-01-19 10:39:59,056 - root - DEBUG - Signal connections established
2025-01-19 10:39:59,060 - root - INFO - Scenario changed to: artasdfaee
2025-01-19 10:39:59,061 - root - DEBUG - UI updated for scenario: artasdfaee
2025-01-19 10:39:59,131 - root - INFO - Well pads table populated successfully.
2025-01-19 10:39:59,181 - root - INFO - Well pads table populated successfully.
2025-01-19 10:39:59,182 - root - INFO - Initial data loaded successfully.
2025-01-19 10:39:59,182 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:40:26,326 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:42:54,053 - root - INFO - Scenario 'artffdasdfs333' added successfully with ID 10. Active: 0
2025-01-19 10:43:04,717 - root - INFO - Scenario changed to: artffdasdfs333
2025-01-19 10:43:04,718 - root - DEBUG - UI updated for scenario: artffdasdfs333
2025-01-19 10:43:04,721 - root - INFO - Well pads table populated successfully.
2025-01-19 10:43:04,722 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:43:04,732 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:43:04,738 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:43:04,743 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:43:04,748 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:43:04,754 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:43:04,761 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:43:04,767 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:43:04,772 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:43:04,778 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:43:04,784 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:43:04,790 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:43:04,796 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:43:04,801 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:43:04,808 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:43:04,814 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:43:04,820 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:43:04,826 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:43:04,832 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:43:04,840 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:43:04,845 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:43:04,852 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:43:04,857 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:43:04,863 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:43:04,869 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:43:04,875 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:43:04,880 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:43:09,462 - root - INFO - Scenario 10 updated with 27 wells.
2025-01-19 10:43:09,464 - root - INFO - Deleted model properties for scenario 10
2025-01-19 10:43:09,466 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:43:09,475 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:09,833 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:10,099 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:10,366 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:10,636 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:10,916 - root - INFO - Processed 5/27 wells
2025-01-19 10:43:10,917 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:11,192 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:11,472 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:11,759 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:12,063 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:12,354 - root - INFO - Processed 10/27 wells
2025-01-19 10:43:12,356 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:12,631 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:12,925 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:13,213 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:13,506 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:13,789 - root - INFO - Processed 15/27 wells
2025-01-19 10:43:13,791 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:14,072 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:14,403 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:14,700 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:15,009 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:15,316 - root - INFO - Processed 20/27 wells
2025-01-19 10:43:15,318 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:15,611 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:15,908 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:16,199 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:43:16,490 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:16,794 - root - INFO - Processed 25/27 wells
2025-01-19 10:43:16,794 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:43:17,066 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:43:34,815 - root - INFO - Well pads table populated successfully.
2025-01-19 10:45:20,997 - root - DEBUG - Toolbar setup completed
2025-01-19 10:45:20,998 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:45:21,001 - root - DEBUG - Table setup completed
2025-01-19 10:45:21,001 - root - DEBUG - UI setup completed successfully
2025-01-19 10:45:21,002 - root - DEBUG - Signal connections established
2025-01-19 10:45:21,006 - root - INFO - Scenario changed to: artffdasdfs333
2025-01-19 10:45:21,007 - root - DEBUG - UI updated for scenario: artffdasdfs333
2025-01-19 10:45:21,058 - root - INFO - Well pads table populated successfully.
2025-01-19 10:45:21,109 - root - INFO - Well pads table populated successfully.
2025-01-19 10:45:21,109 - root - INFO - Initial data loaded successfully.
2025-01-19 10:45:21,110 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:45:41,015 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:47:10,806 - root - DEBUG - Toolbar setup completed
2025-01-19 10:47:10,808 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:47:10,810 - root - DEBUG - Table setup completed
2025-01-19 10:47:10,811 - root - DEBUG - UI setup completed successfully
2025-01-19 10:47:10,812 - root - DEBUG - Signal connections established
2025-01-19 10:47:10,815 - root - INFO - Scenario changed to: artffdasdfs333
2025-01-19 10:47:10,816 - root - DEBUG - UI updated for scenario: artffdasdfs333
2025-01-19 10:47:10,878 - root - INFO - Well pads table populated successfully.
2025-01-19 10:47:10,939 - root - INFO - Well pads table populated successfully.
2025-01-19 10:47:10,939 - root - INFO - Initial data loaded successfully.
2025-01-19 10:47:10,939 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:47:24,545 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:48:13,945 - root - INFO - Scenario '6666' added successfully with ID 11. Active: 0
2025-01-19 10:48:21,964 - root - INFO - Scenario changed to: 6666
2025-01-19 10:48:21,965 - root - DEBUG - UI updated for scenario: 6666
2025-01-19 10:48:21,968 - root - INFO - Well pads table populated successfully.
2025-01-19 10:50:29,662 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:50:29,674 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:50:29,680 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:50:29,686 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:50:29,690 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:50:29,696 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:50:29,702 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:50:29,708 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:50:29,713 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:50:29,718 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:50:29,724 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:50:29,729 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:50:29,736 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:50:29,741 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:50:29,747 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:50:29,753 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:50:29,759 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:50:29,765 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:50:29,771 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:50:29,778 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:50:29,784 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:50:29,790 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:50:29,795 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:50:29,801 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:50:29,807 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:50:29,812 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:50:29,818 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:50:31,908 - root - INFO - Scenario 11 updated with 27 wells.
2025-01-19 10:53:47,725 - root - DEBUG - Toolbar setup completed
2025-01-19 10:53:47,726 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 10:53:47,729 - root - DEBUG - Table setup completed
2025-01-19 10:53:47,729 - root - DEBUG - UI setup completed successfully
2025-01-19 10:53:47,730 - root - DEBUG - Signal connections established
2025-01-19 10:53:47,733 - root - INFO - Scenario changed to: 6666
2025-01-19 10:53:47,734 - root - DEBUG - UI updated for scenario: 6666
2025-01-19 10:53:47,785 - root - INFO - Well pads table populated successfully.
2025-01-19 10:53:47,837 - root - INFO - Well pads table populated successfully.
2025-01-19 10:53:47,837 - root - INFO - Initial data loaded successfully.
2025-01-19 10:53:47,837 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 10:54:05,673 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 10:54:11,470 - root - INFO - Scenario '0099' added successfully with ID 12. Active: 0
2025-01-19 10:54:11,483 - root - INFO - Scenario changed to: 0099
2025-01-19 10:54:11,484 - root - DEBUG - UI updated for scenario: 0099
2025-01-19 10:54:11,486 - root - INFO - Well pads table populated successfully.
2025-01-19 10:54:24,291 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-19 10:54:24,303 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-19 10:54:24,309 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-19 10:54:24,315 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-19 10:54:24,321 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-19 10:54:24,327 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-19 10:54:24,335 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-19 10:54:24,342 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-19 10:54:24,349 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-19 10:54:24,355 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-19 10:54:24,362 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-19 10:54:24,367 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-19 10:54:24,374 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-19 10:54:24,380 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-19 10:54:24,385 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-19 10:54:24,392 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-19 10:54:24,398 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-19 10:54:24,404 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-19 10:54:24,410 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-19 10:54:24,417 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-19 10:54:24,424 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-19 10:54:24,432 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-19 10:54:24,438 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-19 10:54:24,444 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-19 10:54:24,450 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-19 10:54:24,455 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-19 10:54:24,461 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-19 10:54:33,164 - root - INFO - Scenario 12 updated with 27 wells.
2025-01-19 10:54:35,815 - root - INFO - Deleted model properties for scenario 12
2025-01-19 10:54:35,816 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 10:54:35,824 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:36,155 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:36,421 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:36,684 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:36,968 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:37,249 - root - INFO - Processed 5/27 wells
2025-01-19 10:54:37,250 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:37,525 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:37,809 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:38,087 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:38,397 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:38,691 - root - INFO - Processed 10/27 wells
2025-01-19 10:54:38,692 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:38,957 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:39,226 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:39,523 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:39,794 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:40,097 - root - INFO - Processed 15/27 wells
2025-01-19 10:54:40,098 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:40,405 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:40,703 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:40,979 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:41,294 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:41,586 - root - INFO - Processed 20/27 wells
2025-01-19 10:54:41,587 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:41,850 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:42,140 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:42,420 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 10:54:42,685 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:42,973 - root - INFO - Processed 25/27 wells
2025-01-19 10:54:42,975 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 10:54:43,233 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 10:54:57,577 - root - INFO - Well pads table populated successfully.
2025-01-19 10:56:52,649 - root - INFO - Dialog closed successfully
2025-01-19 12:08:21,311 - root - DEBUG - Toolbar setup completed
2025-01-19 12:08:21,313 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:08:21,315 - root - DEBUG - Table setup completed
2025-01-19 12:08:21,315 - root - DEBUG - UI setup completed successfully
2025-01-19 12:08:21,317 - root - DEBUG - Signal connections established
2025-01-19 12:08:21,320 - root - INFO - Scenario changed to: 0099
2025-01-19 12:08:21,321 - root - DEBUG - UI updated for scenario: 0099
2025-01-19 12:08:21,377 - root - INFO - Well pads table populated successfully.
2025-01-19 12:08:21,436 - root - INFO - Well pads table populated successfully.
2025-01-19 12:08:21,437 - root - INFO - Initial data loaded successfully.
2025-01-19 12:08:21,437 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:08:23,136 - root - ERROR - Error in scenario_pud_select: 'PUDWellSelector' object has no attribute 'filter_wells'
2025-01-19 12:09:37,353 - root - DEBUG - Toolbar setup completed
2025-01-19 12:09:37,354 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:09:37,357 - root - DEBUG - Table setup completed
2025-01-19 12:09:37,357 - root - DEBUG - UI setup completed successfully
2025-01-19 12:09:37,358 - root - DEBUG - Signal connections established
2025-01-19 12:09:37,362 - root - INFO - Scenario changed to: 0099
2025-01-19 12:09:37,363 - root - DEBUG - UI updated for scenario: 0099
2025-01-19 12:09:37,428 - root - INFO - Well pads table populated successfully.
2025-01-19 12:09:37,495 - root - INFO - Well pads table populated successfully.
2025-01-19 12:09:37,495 - root - INFO - Initial data loaded successfully.
2025-01-19 12:09:37,495 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:14:02,495 - root - DEBUG - Toolbar setup completed
2025-01-19 12:14:02,496 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:14:02,499 - root - DEBUG - Table setup completed
2025-01-19 12:14:02,499 - root - DEBUG - UI setup completed successfully
2025-01-19 12:14:02,500 - root - DEBUG - Signal connections established
2025-01-19 12:14:02,504 - root - INFO - Scenario changed to: 0099
2025-01-19 12:14:02,505 - root - DEBUG - UI updated for scenario: 0099
2025-01-19 12:14:02,574 - root - INFO - Well pads table populated successfully.
2025-01-19 12:14:02,632 - root - INFO - Well pads table populated successfully.
2025-01-19 12:14:02,632 - root - INFO - Initial data loaded successfully.
2025-01-19 12:14:02,633 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:18:01,811 - root - DEBUG - Toolbar setup completed
2025-01-19 12:18:01,813 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:18:01,815 - root - DEBUG - Table setup completed
2025-01-19 12:18:01,816 - root - DEBUG - UI setup completed successfully
2025-01-19 12:18:01,817 - root - DEBUG - Signal connections established
2025-01-19 12:18:01,820 - root - INFO - Scenario changed to: 0099
2025-01-19 12:18:01,821 - root - DEBUG - UI updated for scenario: 0099
2025-01-19 12:18:01,880 - root - INFO - Well pads table populated successfully.
2025-01-19 12:18:01,938 - root - INFO - Well pads table populated successfully.
2025-01-19 12:18:01,938 - root - INFO - Initial data loaded successfully.
2025-01-19 12:18:01,939 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:18:38,938 - root - INFO - Scenario '66576' added successfully with ID 13. Active: 0
2025-01-19 12:18:38,951 - root - INFO - Scenario changed to: 66576
2025-01-19 12:18:38,952 - root - DEBUG - UI updated for scenario: 66576
2025-01-19 12:18:38,954 - root - INFO - Well pads table populated successfully.
2025-01-19 12:18:38,955 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 12:19:07,224 - root - ERROR - Error saving wells to database: 'UWI'
2025-01-19 12:20:53,544 - root - DEBUG - Toolbar setup completed
2025-01-19 12:20:53,546 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:20:53,548 - root - DEBUG - Table setup completed
2025-01-19 12:20:53,548 - root - DEBUG - UI setup completed successfully
2025-01-19 12:20:53,549 - root - DEBUG - Signal connections established
2025-01-19 12:20:53,552 - root - INFO - Scenario changed to: 66576
2025-01-19 12:20:53,553 - root - DEBUG - UI updated for scenario: 66576
2025-01-19 12:20:53,554 - root - INFO - Well pads table populated successfully.
2025-01-19 12:20:53,555 - root - INFO - Well pads table populated successfully.
2025-01-19 12:20:53,556 - root - INFO - Initial data loaded successfully.
2025-01-19 12:20:53,556 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:21:12,006 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 12:21:14,121 - root - ERROR - Error saving wells to database: 'total_depth'
2025-01-19 12:24:55,619 - root - DEBUG - Toolbar setup completed
2025-01-19 12:24:55,620 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:24:55,622 - root - DEBUG - Table setup completed
2025-01-19 12:24:55,623 - root - DEBUG - UI setup completed successfully
2025-01-19 12:24:55,624 - root - DEBUG - Signal connections established
2025-01-19 12:24:55,627 - root - INFO - Scenario changed to: 66576
2025-01-19 12:24:55,627 - root - DEBUG - UI updated for scenario: 66576
2025-01-19 12:24:55,628 - root - INFO - Well pads table populated successfully.
2025-01-19 12:24:55,629 - root - INFO - Well pads table populated successfully.
2025-01-19 12:24:55,630 - root - INFO - Initial data loaded successfully.
2025-01-19 12:24:55,630 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:25:15,040 - root - INFO - Scenario '333333' added successfully with ID 14. Active: 0
2025-01-19 12:25:15,053 - root - INFO - Scenario changed to: 333333
2025-01-19 12:25:15,053 - root - DEBUG - UI updated for scenario: 333333
2025-01-19 12:25:15,055 - root - INFO - Well pads table populated successfully.
2025-01-19 12:25:15,056 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 12:25:29,743 - root - ERROR - Error saving wells to database: 'total_depth'
2025-01-19 12:30:24,314 - root - DEBUG - Toolbar setup completed
2025-01-19 12:30:24,315 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:30:24,318 - root - DEBUG - Table setup completed
2025-01-19 12:30:24,318 - root - DEBUG - UI setup completed successfully
2025-01-19 12:30:24,320 - root - DEBUG - Signal connections established
2025-01-19 12:30:24,323 - root - INFO - Scenario changed to: 333333
2025-01-19 12:30:24,324 - root - DEBUG - UI updated for scenario: 333333
2025-01-19 12:30:24,325 - root - INFO - Well pads table populated successfully.
2025-01-19 12:30:24,327 - root - INFO - Well pads table populated successfully.
2025-01-19 12:30:24,327 - root - INFO - Initial data loaded successfully.
2025-01-19 12:30:24,327 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:31:41,107 - root - INFO - Scenario '77777a' added successfully with ID 15. Active: 0
2025-01-19 12:31:41,121 - root - INFO - Scenario changed to: 77777a
2025-01-19 12:31:41,122 - root - DEBUG - UI updated for scenario: 77777a
2025-01-19 12:31:41,123 - root - INFO - Well pads table populated successfully.
2025-01-19 12:31:41,123 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-19 12:31:46,230 - root - INFO - Deleted model properties for scenario 15
2025-01-19 12:31:46,231 - root - ERROR - Error deleting production rates: no such table: production_rates
2025-01-19 12:31:46,243 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:47,020 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:31:47,795 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:48,520 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:31:49,246 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:31:49,986 - root - INFO - Processed 5/27 wells
2025-01-19 12:31:49,987 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:31:50,729 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:51,480 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:31:52,219 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:31:52,975 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:31:53,768 - root - INFO - Processed 10/27 wells
2025-01-19 12:31:53,769 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:31:54,525 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:55,263 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:55,991 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:56,734 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:57,435 - root - INFO - Processed 15/27 wells
2025-01-19 12:31:57,436 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:31:58,142 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:31:58,878 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:31:59,613 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:32:00,339 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:32:01,075 - root - INFO - Processed 20/27 wells
2025-01-19 12:32:01,076 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:32:01,795 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:32:02,533 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:32:03,247 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-19 12:32:03,959 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:32:04,687 - root - INFO - Processed 25/27 wells
2025-01-19 12:32:04,688 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-19 12:32:05,436 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-19 12:32:07,722 - root - ERROR - Unexpected error while populating row 0: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,724 - root - ERROR - Unexpected error while populating row 1: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,727 - root - ERROR - Unexpected error while populating row 2: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,730 - root - ERROR - Unexpected error while populating row 3: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,734 - root - ERROR - Unexpected error while populating row 4: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,738 - root - ERROR - Unexpected error while populating row 5: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,740 - root - ERROR - Unexpected error while populating row 6: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,742 - root - ERROR - Unexpected error while populating row 7: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,746 - root - ERROR - Unexpected error while populating row 8: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,749 - root - ERROR - Unexpected error while populating row 9: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,753 - root - ERROR - Unexpected error while populating row 10: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,756 - root - ERROR - Unexpected error while populating row 11: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,759 - root - ERROR - Unexpected error while populating row 12: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,762 - root - ERROR - Unexpected error while populating row 13: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,766 - root - ERROR - Unexpected error while populating row 14: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,770 - root - ERROR - Unexpected error while populating row 15: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,774 - root - ERROR - Unexpected error while populating row 16: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,778 - root - ERROR - Unexpected error while populating row 17: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,783 - root - ERROR - Unexpected error while populating row 18: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,786 - root - ERROR - Unexpected error while populating row 19: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,789 - root - ERROR - Unexpected error while populating row 20: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,792 - root - ERROR - Unexpected error while populating row 21: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,796 - root - ERROR - Unexpected error while populating row 22: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,799 - root - ERROR - Unexpected error while populating row 23: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,803 - root - ERROR - Unexpected error while populating row 24: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,805 - root - ERROR - Unexpected error while populating row 25: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,809 - root - ERROR - Unexpected error while populating row 26: unsupported format string passed to NoneType.__format__
2025-01-19 12:32:07,809 - root - INFO - Well pads table populated successfully.
2025-01-19 12:34:30,084 - root - DEBUG - Toolbar setup completed
2025-01-19 12:34:30,086 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:34:30,087 - root - DEBUG - Table setup completed
2025-01-19 12:34:30,088 - root - DEBUG - UI setup completed successfully
2025-01-19 12:34:30,089 - root - DEBUG - Signal connections established
2025-01-19 12:34:30,092 - root - INFO - Scenario changed to: 77777a
2025-01-19 12:34:30,092 - root - DEBUG - UI updated for scenario: 77777a
2025-01-19 12:34:30,098 - root - ERROR - Unexpected error while populating row 0: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,101 - root - ERROR - Unexpected error while populating row 1: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,103 - root - ERROR - Unexpected error while populating row 2: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,106 - root - ERROR - Unexpected error while populating row 3: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,108 - root - ERROR - Unexpected error while populating row 4: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,111 - root - ERROR - Unexpected error while populating row 5: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,113 - root - ERROR - Unexpected error while populating row 6: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,115 - root - ERROR - Unexpected error while populating row 7: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,117 - root - ERROR - Unexpected error while populating row 8: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,119 - root - ERROR - Unexpected error while populating row 9: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,121 - root - ERROR - Unexpected error while populating row 10: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,124 - root - ERROR - Unexpected error while populating row 11: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,126 - root - ERROR - Unexpected error while populating row 12: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,129 - root - ERROR - Unexpected error while populating row 13: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,130 - root - ERROR - Unexpected error while populating row 14: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,133 - root - ERROR - Unexpected error while populating row 15: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,135 - root - ERROR - Unexpected error while populating row 16: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,137 - root - ERROR - Unexpected error while populating row 17: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,139 - root - ERROR - Unexpected error while populating row 18: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,143 - root - ERROR - Unexpected error while populating row 19: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,145 - root - ERROR - Unexpected error while populating row 20: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,147 - root - ERROR - Unexpected error while populating row 21: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,149 - root - ERROR - Unexpected error while populating row 22: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,151 - root - ERROR - Unexpected error while populating row 23: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,153 - root - ERROR - Unexpected error while populating row 24: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,156 - root - ERROR - Unexpected error while populating row 25: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,158 - root - ERROR - Unexpected error while populating row 26: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,158 - root - INFO - Well pads table populated successfully.
2025-01-19 12:34:30,163 - root - ERROR - Unexpected error while populating row 0: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,165 - root - ERROR - Unexpected error while populating row 1: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,167 - root - ERROR - Unexpected error while populating row 2: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,170 - root - ERROR - Unexpected error while populating row 3: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,172 - root - ERROR - Unexpected error while populating row 4: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,175 - root - ERROR - Unexpected error while populating row 5: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,177 - root - ERROR - Unexpected error while populating row 6: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,179 - root - ERROR - Unexpected error while populating row 7: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,181 - root - ERROR - Unexpected error while populating row 8: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,184 - root - ERROR - Unexpected error while populating row 9: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,186 - root - ERROR - Unexpected error while populating row 10: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,189 - root - ERROR - Unexpected error while populating row 11: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,191 - root - ERROR - Unexpected error while populating row 12: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,193 - root - ERROR - Unexpected error while populating row 13: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,195 - root - ERROR - Unexpected error while populating row 14: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,198 - root - ERROR - Unexpected error while populating row 15: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,200 - root - ERROR - Unexpected error while populating row 16: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,203 - root - ERROR - Unexpected error while populating row 17: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,206 - root - ERROR - Unexpected error while populating row 18: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,210 - root - ERROR - Unexpected error while populating row 19: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,213 - root - ERROR - Unexpected error while populating row 20: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,217 - root - ERROR - Unexpected error while populating row 21: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,220 - root - ERROR - Unexpected error while populating row 22: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,222 - root - ERROR - Unexpected error while populating row 23: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,225 - root - ERROR - Unexpected error while populating row 24: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,227 - root - ERROR - Unexpected error while populating row 25: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,230 - root - ERROR - Unexpected error while populating row 26: unsupported format string passed to NoneType.__format__
2025-01-19 12:34:30,230 - root - INFO - Well pads table populated successfully.
2025-01-19 12:34:30,230 - root - INFO - Initial data loaded successfully.
2025-01-19 12:34:30,231 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:34:45,208 - root - INFO - Dialog closed successfully
2025-01-19 12:42:06,590 - root - DEBUG - Toolbar setup completed
2025-01-19 12:42:06,591 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 12:42:06,592 - root - DEBUG - Table setup completed
2025-01-19 12:42:06,592 - root - DEBUG - UI setup completed successfully
2025-01-19 12:42:06,594 - root - DEBUG - Signal connections established
2025-01-19 12:42:06,597 - root - INFO - Scenario changed to: 77777a
2025-01-19 12:42:06,597 - root - DEBUG - UI updated for scenario: 77777a
2025-01-19 12:42:06,603 - root - ERROR - Unexpected error while populating row 0: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,607 - root - ERROR - Unexpected error while populating row 1: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,609 - root - ERROR - Unexpected error while populating row 2: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,612 - root - ERROR - Unexpected error while populating row 3: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,615 - root - ERROR - Unexpected error while populating row 4: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,618 - root - ERROR - Unexpected error while populating row 5: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,621 - root - ERROR - Unexpected error while populating row 6: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,624 - root - ERROR - Unexpected error while populating row 7: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,626 - root - ERROR - Unexpected error while populating row 8: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,629 - root - ERROR - Unexpected error while populating row 9: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,631 - root - ERROR - Unexpected error while populating row 10: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,635 - root - ERROR - Unexpected error while populating row 11: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,637 - root - ERROR - Unexpected error while populating row 12: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,639 - root - ERROR - Unexpected error while populating row 13: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,641 - root - ERROR - Unexpected error while populating row 14: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,644 - root - ERROR - Unexpected error while populating row 15: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,646 - root - ERROR - Unexpected error while populating row 16: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,648 - root - ERROR - Unexpected error while populating row 17: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,650 - root - ERROR - Unexpected error while populating row 18: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,653 - root - ERROR - Unexpected error while populating row 19: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,655 - root - ERROR - Unexpected error while populating row 20: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,658 - root - ERROR - Unexpected error while populating row 21: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,660 - root - ERROR - Unexpected error while populating row 22: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,662 - root - ERROR - Unexpected error while populating row 23: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,664 - root - ERROR - Unexpected error while populating row 24: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,667 - root - ERROR - Unexpected error while populating row 25: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,670 - root - ERROR - Unexpected error while populating row 26: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,670 - root - INFO - Well pads table populated successfully.
2025-01-19 12:42:06,676 - root - ERROR - Unexpected error while populating row 0: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,680 - root - ERROR - Unexpected error while populating row 1: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,684 - root - ERROR - Unexpected error while populating row 2: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,687 - root - ERROR - Unexpected error while populating row 3: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,690 - root - ERROR - Unexpected error while populating row 4: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,695 - root - ERROR - Unexpected error while populating row 5: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,698 - root - ERROR - Unexpected error while populating row 6: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,701 - root - ERROR - Unexpected error while populating row 7: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,704 - root - ERROR - Unexpected error while populating row 8: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,707 - root - ERROR - Unexpected error while populating row 9: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,710 - root - ERROR - Unexpected error while populating row 10: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,714 - root - ERROR - Unexpected error while populating row 11: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,718 - root - ERROR - Unexpected error while populating row 12: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,723 - root - ERROR - Unexpected error while populating row 13: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,725 - root - ERROR - Unexpected error while populating row 14: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,728 - root - ERROR - Unexpected error while populating row 15: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,730 - root - ERROR - Unexpected error while populating row 16: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,832 - root - ERROR - Unexpected error while populating row 17: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,834 - root - ERROR - Unexpected error while populating row 18: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,837 - root - ERROR - Unexpected error while populating row 19: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,840 - root - ERROR - Unexpected error while populating row 20: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,842 - root - ERROR - Unexpected error while populating row 21: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,844 - root - ERROR - Unexpected error while populating row 22: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,847 - root - ERROR - Unexpected error while populating row 23: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,849 - root - ERROR - Unexpected error while populating row 24: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,852 - root - ERROR - Unexpected error while populating row 25: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,854 - root - ERROR - Unexpected error while populating row 26: unsupported format string passed to NoneType.__format__
2025-01-19 12:42:06,855 - root - INFO - Well pads table populated successfully.
2025-01-19 12:42:06,855 - root - INFO - Initial data loaded successfully.
2025-01-19 12:42:06,855 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 12:42:08,700 - root - INFO - Dialog closed successfully
2025-01-19 13:43:03,369 - root - DEBUG - Toolbar setup completed
2025-01-19 13:43:03,371 - root - DEBUG - Scenario dropdown setup completed
2025-01-19 13:43:03,375 - root - DEBUG - Table setup completed
2025-01-19 13:43:03,375 - root - DEBUG - UI setup completed successfully
2025-01-19 13:43:03,377 - root - DEBUG - Signal connections established
2025-01-19 13:43:03,388 - root - INFO - Well pads table populated successfully.
2025-01-19 13:43:03,388 - root - INFO - Initial data loaded successfully.
2025-01-19 13:43:03,388 - root - INFO - PUDPropertiesDialog initialized
2025-01-19 13:43:07,988 - root - INFO - Scenario changed to: 77777a
2025-01-19 13:43:07,989 - root - DEBUG - UI updated for scenario: 77777a
2025-01-19 13:43:08,003 - root - ERROR - Unexpected error while populating row 0: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,007 - root - ERROR - Unexpected error while populating row 1: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,009 - root - ERROR - Unexpected error while populating row 2: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,012 - root - ERROR - Unexpected error while populating row 3: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,014 - root - ERROR - Unexpected error while populating row 4: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,017 - root - ERROR - Unexpected error while populating row 5: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,019 - root - ERROR - Unexpected error while populating row 6: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,021 - root - ERROR - Unexpected error while populating row 7: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,023 - root - ERROR - Unexpected error while populating row 8: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,026 - root - ERROR - Unexpected error while populating row 9: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,028 - root - ERROR - Unexpected error while populating row 10: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,030 - root - ERROR - Unexpected error while populating row 11: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,033 - root - ERROR - Unexpected error while populating row 12: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,035 - root - ERROR - Unexpected error while populating row 13: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,038 - root - ERROR - Unexpected error while populating row 14: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,040 - root - ERROR - Unexpected error while populating row 15: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,043 - root - ERROR - Unexpected error while populating row 16: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,045 - root - ERROR - Unexpected error while populating row 17: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,048 - root - ERROR - Unexpected error while populating row 18: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,050 - root - ERROR - Unexpected error while populating row 19: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,053 - root - ERROR - Unexpected error while populating row 20: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,055 - root - ERROR - Unexpected error while populating row 21: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,057 - root - ERROR - Unexpected error while populating row 22: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,060 - root - ERROR - Unexpected error while populating row 23: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,063 - root - ERROR - Unexpected error while populating row 24: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,066 - root - ERROR - Unexpected error while populating row 25: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,068 - root - ERROR - Unexpected error while populating row 26: unsupported format string passed to NoneType.__format__
2025-01-19 13:43:08,068 - root - INFO - Well pads table populated successfully.
2025-01-21 08:58:27,684 - root - DEBUG - Toolbar setup completed
2025-01-21 08:58:27,686 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 08:58:27,690 - root - DEBUG - Table setup completed
2025-01-21 08:58:27,690 - root - DEBUG - UI setup completed successfully
2025-01-21 08:58:27,692 - root - DEBUG - Signal connections established
2025-01-21 08:58:27,695 - root - INFO - No scenarios to load.
2025-01-21 08:58:27,695 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 08:58:30,092 - root - INFO - Dialog closed successfully
2025-01-21 13:34:14,071 - root - DEBUG - Toolbar setup completed
2025-01-21 13:34:14,073 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 13:34:14,079 - root - DEBUG - Table setup completed
2025-01-21 13:34:14,079 - root - DEBUG - UI setup completed successfully
2025-01-21 13:34:14,080 - root - DEBUG - Signal connections established
2025-01-21 13:34:14,083 - root - INFO - No scenarios to load.
2025-01-21 13:34:14,084 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 13:34:39,494 - root - INFO - Scenario 'TESST' added successfully with ID 2. Active: 0
2025-01-21 13:34:39,510 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 13:34:39,510 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 13:34:39,511 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 13:34:39,512 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 13:34:39,513 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 13:34:39,514 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 13:34:39,515 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 13:34:39,515 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 13:34:39,516 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 13:34:39,517 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 13:34:39,518 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 13:34:39,519 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 13:34:39,520 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 13:34:39,521 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 13:34:39,521 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 13:34:39,522 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 13:34:39,523 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 13:34:39,524 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 13:34:39,525 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 13:34:39,526 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 13:34:39,527 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 13:34:39,527 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 13:34:39,528 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 13:34:39,529 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 13:34:39,530 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 13:34:39,532 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 13:34:39,533 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 13:34:41,011 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-21 13:34:41,014 - root - INFO - Well pads table populated successfully.
2025-01-21 13:36:27,292 - root - DEBUG - Toolbar setup completed
2025-01-21 13:36:27,295 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 13:36:27,298 - root - DEBUG - Table setup completed
2025-01-21 13:36:27,298 - root - DEBUG - UI setup completed successfully
2025-01-21 13:36:27,298 - root - DEBUG - Signal connections established
2025-01-21 13:36:27,303 - root - INFO - Well pads table populated successfully.
2025-01-21 13:36:27,304 - root - INFO - Initial data loaded successfully.
2025-01-21 13:36:27,304 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 13:36:50,597 - root - INFO - Scenario 'TESST1' added successfully with ID 3. Active: 0
2025-01-21 13:36:50,610 - root - INFO - Scenario changed to: TESST1
2025-01-21 13:36:50,611 - root - DEBUG - UI updated for scenario: TESST1
2025-01-21 13:36:50,612 - root - INFO - Well pads table populated successfully.
2025-01-21 13:36:50,615 - root - ERROR - Error saving wells to database: 'total_lateral'
2025-01-21 13:36:53,359 - root - INFO - Well pads table populated successfully.
2025-01-21 14:39:24,726 - root - DEBUG - Toolbar setup completed
2025-01-21 14:39:24,730 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 14:39:24,746 - root - DEBUG - Table setup completed
2025-01-21 14:39:24,746 - root - DEBUG - UI setup completed successfully
2025-01-21 14:39:24,747 - root - DEBUG - Signal connections established
2025-01-21 14:39:24,758 - root - INFO - Scenario changed to: TESST1
2025-01-21 14:39:24,759 - root - DEBUG - UI updated for scenario: TESST1
2025-01-21 14:39:24,763 - root - INFO - Well pads table populated successfully.
2025-01-21 14:39:24,764 - root - INFO - Well pads table populated successfully.
2025-01-21 14:39:24,765 - root - INFO - Initial data loaded successfully.
2025-01-21 14:39:24,765 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 14:39:42,634 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 14:39:42,636 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 14:39:42,637 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 14:39:42,637 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 14:39:42,638 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 14:39:42,639 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 14:39:42,640 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 14:39:42,641 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 14:39:42,642 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 14:39:42,644 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 14:39:42,645 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 14:39:42,645 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 14:39:42,646 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 14:39:42,647 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 14:39:42,648 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 14:39:42,649 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 14:39:42,650 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 14:39:42,650 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 14:39:42,651 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 14:39:42,652 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 14:39:42,653 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 14:39:42,654 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 14:39:42,655 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 14:39:42,656 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 14:39:42,657 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 14:39:42,657 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 14:39:42,658 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 14:53:28,054 - root - DEBUG - Toolbar setup completed
2025-01-21 14:53:28,056 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 14:53:28,070 - root - DEBUG - Table setup completed
2025-01-21 14:53:28,070 - root - DEBUG - UI setup completed successfully
2025-01-21 14:53:28,072 - root - DEBUG - Signal connections established
2025-01-21 14:53:28,077 - root - INFO - Scenario changed to: TESST1
2025-01-21 14:53:28,078 - root - DEBUG - UI updated for scenario: TESST1
2025-01-21 14:53:28,080 - root - INFO - Well pads table populated successfully.
2025-01-21 14:53:28,081 - root - INFO - Well pads table populated successfully.
2025-01-21 14:53:28,081 - root - INFO - Initial data loaded successfully.
2025-01-21 14:53:28,081 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 14:53:29,547 - root - ERROR - Error in scenario_pud_select: 'DatabaseManager' object has no attribute 'get_active_UWIs_with_properties'
2025-01-21 14:53:34,604 - root - ERROR - Error in scenario_pud_select: 'DatabaseManager' object has no attribute 'get_active_UWIs_with_properties'
2025-01-21 15:00:06,123 - root - INFO - Dialog closed successfully
2025-01-21 20:57:49,069 - root - DEBUG - Toolbar setup completed
2025-01-21 20:57:49,077 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 20:57:49,082 - root - DEBUG - Table setup completed
2025-01-21 20:57:49,082 - root - DEBUG - UI setup completed successfully
2025-01-21 20:57:49,084 - root - DEBUG - Signal connections established
2025-01-21 20:57:49,089 - root - INFO - Scenario changed to: TESST1
2025-01-21 20:57:49,090 - root - DEBUG - UI updated for scenario: TESST1
2025-01-21 20:57:49,092 - root - INFO - Well pads table populated successfully.
2025-01-21 20:57:49,093 - root - INFO - Well pads table populated successfully.
2025-01-21 20:57:49,093 - root - INFO - Initial data loaded successfully.
2025-01-21 20:57:49,094 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 20:57:51,050 - root - ERROR - Error in scenario_pud_select: 'DatabaseManager' object has no attribute 'get_active_UWIs_with_properties'
2025-01-21 21:01:12,785 - root - DEBUG - Toolbar setup completed
2025-01-21 21:01:12,787 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:01:12,790 - root - DEBUG - Table setup completed
2025-01-21 21:01:12,790 - root - DEBUG - UI setup completed successfully
2025-01-21 21:01:12,791 - root - DEBUG - Signal connections established
2025-01-21 21:01:12,794 - root - INFO - Scenario changed to: TESST1
2025-01-21 21:01:12,794 - root - DEBUG - UI updated for scenario: TESST1
2025-01-21 21:01:12,796 - root - INFO - Well pads table populated successfully.
2025-01-21 21:01:12,797 - root - INFO - Well pads table populated successfully.
2025-01-21 21:01:12,798 - root - INFO - Initial data loaded successfully.
2025-01-21 21:01:12,798 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:01:14,127 - root - ERROR - Error in scenario_pud_select: Cannot operate on a closed database.
2025-01-21 21:02:56,527 - root - DEBUG - Toolbar setup completed
2025-01-21 21:02:56,530 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:02:56,532 - root - DEBUG - Table setup completed
2025-01-21 21:02:56,533 - root - DEBUG - UI setup completed successfully
2025-01-21 21:02:56,534 - root - DEBUG - Signal connections established
2025-01-21 21:02:56,537 - root - INFO - Scenario changed to: TESST1
2025-01-21 21:02:56,537 - root - DEBUG - UI updated for scenario: TESST1
2025-01-21 21:02:56,538 - root - INFO - Well pads table populated successfully.
2025-01-21 21:02:56,539 - root - INFO - Well pads table populated successfully.
2025-01-21 21:02:56,540 - root - INFO - Initial data loaded successfully.
2025-01-21 21:02:56,540 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:03:11,851 - root - ERROR - Error adding scenario '0     TESST
1     TESST
2     TESST
3     TESST
4     TESST
5     TESST
6     TESST
7     TESST
8     TESST
9     TESST
10    TESST
11    TESST
12    TESST
13    TESST
14    TESST
15    TESST
16    TESST
17    TESST
18    TESST
19    TESST
20    TESST
21    TESST
22    TESST
23    TESST
24    TESST
25    TESST
26    TESST
Name: scenario, dtype: object': Error binding parameter 1: type 'Series' is not supported
2025-01-21 21:03:12,159 - root - ERROR - Error in scenario_pud_select: 'PySide6.QtWidgets.QComboBox.findText' called with wrong argument types:
  PySide6.QtWidgets.QComboBox.findText(Series)
Supported signatures:
  PySide6.QtWidgets.QComboBox.findText(str, PySide6.QtCore.Qt.MatchFlag = Instance(Qt.MatchFlags(Qt.MatchExactly | Qt.MatchCaseSensitive)))
2025-01-21 21:03:34,600 - root - INFO - Dialog closed successfully
2025-01-21 21:04:56,467 - root - DEBUG - Toolbar setup completed
2025-01-21 21:04:56,469 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:04:56,473 - root - DEBUG - Table setup completed
2025-01-21 21:04:56,473 - root - DEBUG - UI setup completed successfully
2025-01-21 21:04:56,474 - root - DEBUG - Signal connections established
2025-01-21 21:04:56,477 - root - WARNING - No active scenario found.
2025-01-21 21:04:59,156 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:05:03,762 - root - INFO - Dialog closed successfully
2025-01-21 21:05:14,834 - root - DEBUG - Toolbar setup completed
2025-01-21 21:05:14,834 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:05:14,836 - root - DEBUG - Table setup completed
2025-01-21 21:05:14,836 - root - DEBUG - UI setup completed successfully
2025-01-21 21:05:14,837 - root - DEBUG - Signal connections established
2025-01-21 21:05:14,840 - root - WARNING - No active scenario found.
2025-01-21 21:05:16,830 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:05:31,264 - root - ERROR - Error adding scenario '0     TESST1111
1     TESST1111
2     TESST1111
3     TESST1111
4     TESST1111
5     TESST1111
6     TESST1111
7     TESST1111
8     TESST1111
9     TESST1111
10    TESST1111
11    TESST1111
12    TESST1111
13    TESST1111
14    TESST1111
15    TESST1111
16    TESST1111
17    TESST1111
18    TESST1111
19    TESST1111
20    TESST1111
21    TESST1111
22    TESST1111
23    TESST1111
24    TESST1111
25    TESST1111
26    TESST1111
Name: scenario, dtype: object': Error binding parameter 1: type 'Series' is not supported
2025-01-21 21:05:42,654 - root - ERROR - Error in scenario_pud_select: 'PySide6.QtWidgets.QComboBox.findText' called with wrong argument types:
  PySide6.QtWidgets.QComboBox.findText(Series)
Supported signatures:
  PySide6.QtWidgets.QComboBox.findText(str, PySide6.QtCore.Qt.MatchFlag = Instance(Qt.MatchFlags(Qt.MatchExactly | Qt.MatchCaseSensitive)))
2025-01-21 21:07:22,586 - root - DEBUG - Toolbar setup completed
2025-01-21 21:07:22,586 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:07:22,589 - root - DEBUG - Table setup completed
2025-01-21 21:07:22,589 - root - DEBUG - UI setup completed successfully
2025-01-21 21:07:22,590 - root - DEBUG - Signal connections established
2025-01-21 21:07:22,592 - root - INFO - No scenarios to load.
2025-01-21 21:07:22,592 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:07:27,412 - root - INFO - Dialog closed successfully
2025-01-21 21:07:38,139 - root - DEBUG - Toolbar setup completed
2025-01-21 21:07:38,139 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:07:38,141 - root - DEBUG - Table setup completed
2025-01-21 21:07:38,141 - root - DEBUG - UI setup completed successfully
2025-01-21 21:07:38,142 - root - DEBUG - Signal connections established
2025-01-21 21:07:38,145 - root - INFO - No scenarios to load.
2025-01-21 21:07:38,145 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:07:55,719 - root - ERROR - Error adding scenario '0     first
1     first
2     first
3     first
4     first
5     first
6     first
7     first
8     first
9     first
10    first
11    first
12    first
13    first
14    first
15    first
16    first
17    first
18    first
19    first
20    first
21    first
22    first
23    first
24    first
25    first
26    first
Name: scenario, dtype: object': Error binding parameter 1: type 'Series' is not supported
2025-01-21 21:17:01,458 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 21:18:14,491 - root - DEBUG - Toolbar setup completed
2025-01-21 21:18:14,494 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:18:14,496 - root - DEBUG - Table setup completed
2025-01-21 21:18:14,496 - root - DEBUG - UI setup completed successfully
2025-01-21 21:18:14,498 - root - DEBUG - Signal connections established
2025-01-21 21:18:14,500 - root - INFO - No scenarios to load.
2025-01-21 21:18:14,500 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:18:26,008 - root - ERROR - Error in scenario_pud_select: 'PUDPropertiesDialog' object has no attribute 'well_data'
2025-01-21 21:19:18,817 - root - DEBUG - Toolbar setup completed
2025-01-21 21:19:18,820 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:19:18,822 - root - DEBUG - Table setup completed
2025-01-21 21:19:18,823 - root - DEBUG - UI setup completed successfully
2025-01-21 21:19:18,824 - root - DEBUG - Signal connections established
2025-01-21 21:19:18,825 - root - INFO - No scenarios to load.
2025-01-21 21:19:18,826 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:19:28,702 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 21:19:56,235 - root - INFO - Scenario 'aaaa' added successfully with ID 2. Active: 0
2025-01-21 21:20:24,361 - root - ERROR - Error saving wells to database: 'selected_wells'
2025-01-21 21:20:27,435 - root - ERROR - Error in run_scenario: 'DatabaseManager' object has no attribute 'delete_model_properties_for_scenario'
2025-01-21 21:27:37,927 - root - DEBUG - Toolbar setup completed
2025-01-21 21:27:37,928 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:27:37,930 - root - DEBUG - Table setup completed
2025-01-21 21:27:37,931 - root - DEBUG - UI setup completed successfully
2025-01-21 21:27:37,932 - root - DEBUG - Signal connections established
2025-01-21 21:27:37,938 - root - INFO - Well pads table populated successfully.
2025-01-21 21:27:37,938 - root - INFO - Initial data loaded successfully.
2025-01-21 21:27:37,938 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:27:49,742 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 21:28:01,570 - root - INFO - Scenario 'aaaa1' added successfully with ID 3. Active: 0
2025-01-21 21:28:19,905 - root - INFO - Scenario changed to: aaaa1
2025-01-21 21:28:19,906 - root - DEBUG - UI updated for scenario: aaaa1
2025-01-21 21:28:19,907 - root - INFO - Well pads table populated successfully.
2025-01-21 21:28:19,908 - root - ERROR - Error saving wells to database: 'selected_wells'
2025-01-21 21:34:31,737 - root - ERROR - Error in run_scenario: 'list' object has no attribute 'empty'
2025-01-21 21:34:33,435 - root - INFO - Well pads table populated successfully.
2025-01-21 21:34:56,312 - root - INFO - Scenario 'aaaa666' added successfully with ID 4. Active: 0
2025-01-21 21:37:43,591 - root - INFO - Scenario changed to: aaaa666
2025-01-21 21:37:43,592 - root - DEBUG - UI updated for scenario: aaaa666
2025-01-21 21:37:43,594 - root - INFO - Well pads table populated successfully.
2025-01-21 21:37:43,595 - root - ERROR - Error saving wells to database: 'selected_wells'
2025-01-21 21:39:38,225 - root - DEBUG - Toolbar setup completed
2025-01-21 21:39:38,226 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 21:39:38,228 - root - DEBUG - Table setup completed
2025-01-21 21:39:38,228 - root - DEBUG - UI setup completed successfully
2025-01-21 21:39:38,230 - root - DEBUG - Signal connections established
2025-01-21 21:39:38,232 - root - INFO - Scenario changed to: aaaa666
2025-01-21 21:39:38,233 - root - DEBUG - UI updated for scenario: aaaa666
2025-01-21 21:39:38,234 - root - INFO - Well pads table populated successfully.
2025-01-21 21:39:38,235 - root - INFO - Well pads table populated successfully.
2025-01-21 21:39:38,235 - root - INFO - Initial data loaded successfully.
2025-01-21 21:39:38,235 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 21:39:51,761 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 21:40:10,166 - root - INFO - Scenario 'aaaa777' added successfully with ID 5. Active: 0
2025-01-21 21:43:42,035 - root - INFO - Scenario changed to: aaaa777
2025-01-21 21:43:42,036 - root - DEBUG - UI updated for scenario: aaaa777
2025-01-21 21:43:42,038 - root - INFO - Well pads table populated successfully.
2025-01-21 22:03:00,886 - root - DEBUG - Toolbar setup completed
2025-01-21 22:03:00,889 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:03:00,891 - root - DEBUG - Table setup completed
2025-01-21 22:03:00,891 - root - DEBUG - UI setup completed successfully
2025-01-21 22:03:00,893 - root - DEBUG - Signal connections established
2025-01-21 22:03:00,896 - root - INFO - Scenario changed to: aaaa777
2025-01-21 22:03:00,896 - root - DEBUG - UI updated for scenario: aaaa777
2025-01-21 22:03:00,897 - root - INFO - Well pads table populated successfully.
2025-01-21 22:03:00,898 - root - INFO - Well pads table populated successfully.
2025-01-21 22:03:00,898 - root - INFO - Initial data loaded successfully.
2025-01-21 22:03:00,899 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:03:15,271 - root - INFO - Scenario 'aaaa744' added successfully with ID 6. Active: 0
2025-01-21 22:03:15,300 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:03:25,486 - root - INFO - Scenario changed to: aaaa744
2025-01-21 22:03:28,675 - root - DEBUG - UI updated for scenario: aaaa744
2025-01-21 22:03:28,676 - root - INFO - Well pads table populated successfully.
2025-01-21 22:04:05,341 - root - ERROR - Error saving wells to database: 'selected_wells'
2025-01-21 22:05:47,044 - root - DEBUG - Toolbar setup completed
2025-01-21 22:05:47,045 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:05:47,052 - root - DEBUG - Table setup completed
2025-01-21 22:05:47,053 - root - DEBUG - UI setup completed successfully
2025-01-21 22:05:47,054 - root - DEBUG - Signal connections established
2025-01-21 22:05:47,057 - root - INFO - Scenario changed to: aaaa744
2025-01-21 22:05:47,058 - root - DEBUG - UI updated for scenario: aaaa744
2025-01-21 22:05:47,060 - root - INFO - Well pads table populated successfully.
2025-01-21 22:05:47,061 - root - INFO - Well pads table populated successfully.
2025-01-21 22:05:47,061 - root - INFO - Initial data loaded successfully.
2025-01-21 22:05:47,062 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:05:58,823 - root - INFO - Scenario 'aaaaddasd' added successfully with ID 7. Active: 0
2025-01-21 22:05:58,847 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:06:02,482 - root - INFO - Scenario changed to: aaaaddasd
2025-01-21 22:06:07,073 - root - DEBUG - UI updated for scenario: aaaaddasd
2025-01-21 22:06:07,075 - root - INFO - Well pads table populated successfully.
2025-01-21 22:06:11,874 - root - ERROR - Error saving wells to database: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-01-21 22:09:51,061 - root - ERROR - Error in run_scenario: 'list' object has no attribute 'empty'
2025-01-21 22:09:53,050 - root - INFO - Well pads table populated successfully.
2025-01-21 22:10:08,829 - root - INFO - Scenario 'aaaadddaadda' added successfully with ID 8. Active: 0
2025-01-21 22:10:14,155 - root - INFO - Scenario changed to: aaaadddaadda
2025-01-21 22:10:14,156 - root - DEBUG - UI updated for scenario: aaaadddaadda
2025-01-21 22:10:14,158 - root - INFO - Well pads table populated successfully.
2025-01-21 22:10:14,162 - root - ERROR - Error saving wells to database: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-01-21 22:10:17,615 - root - ERROR - Error in run_scenario: 'list' object has no attribute 'empty'
2025-01-21 22:10:39,420 - root - INFO - Well pads table populated successfully.
2025-01-21 22:10:59,711 - root - DEBUG - Toolbar setup completed
2025-01-21 22:10:59,714 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:10:59,717 - root - DEBUG - Table setup completed
2025-01-21 22:10:59,717 - root - DEBUG - UI setup completed successfully
2025-01-21 22:10:59,718 - root - DEBUG - Signal connections established
2025-01-21 22:10:59,722 - root - INFO - Scenario changed to: aaaadddaadda
2025-01-21 22:10:59,722 - root - DEBUG - UI updated for scenario: aaaadddaadda
2025-01-21 22:10:59,723 - root - INFO - Well pads table populated successfully.
2025-01-21 22:10:59,724 - root - INFO - Well pads table populated successfully.
2025-01-21 22:10:59,725 - root - INFO - Initial data loaded successfully.
2025-01-21 22:10:59,725 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:11:11,258 - root - INFO - Scenario 'aaaa12' added successfully with ID 9. Active: 0
2025-01-21 22:11:11,270 - root - INFO - Scenario changed to: aaaa12
2025-01-21 22:11:11,271 - root - DEBUG - UI updated for scenario: aaaa12
2025-01-21 22:11:11,272 - root - INFO - Well pads table populated successfully.
2025-01-21 22:11:11,285 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:11:59,092 - root - ERROR - Error saving wells to database: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-01-21 22:14:31,696 - root - DEBUG - Toolbar setup completed
2025-01-21 22:14:31,699 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:14:31,702 - root - DEBUG - Table setup completed
2025-01-21 22:14:31,702 - root - DEBUG - UI setup completed successfully
2025-01-21 22:14:31,704 - root - DEBUG - Signal connections established
2025-01-21 22:14:31,708 - root - INFO - Scenario changed to: aaaa12
2025-01-21 22:14:31,709 - root - DEBUG - UI updated for scenario: aaaa12
2025-01-21 22:14:31,711 - root - INFO - Well pads table populated successfully.
2025-01-21 22:14:31,712 - root - INFO - Well pads table populated successfully.
2025-01-21 22:14:31,712 - root - INFO - Initial data loaded successfully.
2025-01-21 22:14:31,712 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:14:43,078 - root - INFO - Scenario 'aaaaddfadasdf' added successfully with ID 10. Active: 0
2025-01-21 22:14:43,091 - root - INFO - Scenario changed to: aaaaddfadasdf
2025-01-21 22:14:43,092 - root - DEBUG - UI updated for scenario: aaaaddfadasdf
2025-01-21 22:14:43,093 - root - INFO - Well pads table populated successfully.
2025-01-21 22:14:43,103 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:14:54,819 - root - ERROR - Error saving wells to database: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-01-21 22:16:41,817 - root - DEBUG - Toolbar setup completed
2025-01-21 22:16:41,819 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:16:41,821 - root - DEBUG - Table setup completed
2025-01-21 22:16:41,821 - root - DEBUG - UI setup completed successfully
2025-01-21 22:16:41,823 - root - DEBUG - Signal connections established
2025-01-21 22:16:41,826 - root - INFO - Scenario changed to: aaaaddfadasdf
2025-01-21 22:16:41,827 - root - DEBUG - UI updated for scenario: aaaaddfadasdf
2025-01-21 22:16:41,829 - root - INFO - Well pads table populated successfully.
2025-01-21 22:16:41,830 - root - INFO - Well pads table populated successfully.
2025-01-21 22:16:41,831 - root - INFO - Initial data loaded successfully.
2025-01-21 22:16:41,831 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:16:56,526 - root - INFO - Scenario '111aaaa' added successfully with ID 11. Active: 0
2025-01-21 22:16:56,541 - root - INFO - Scenario changed to: 111aaaa
2025-01-21 22:16:56,542 - root - DEBUG - UI updated for scenario: 111aaaa
2025-01-21 22:16:56,543 - root - INFO - Well pads table populated successfully.
2025-01-21 22:16:56,558 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:17:33,483 - root - ERROR - Error saving wells to database: cannot access local variable 'UWI' where it is not associated with a value
2025-01-21 22:18:50,112 - root - DEBUG - Toolbar setup completed
2025-01-21 22:18:50,116 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:18:50,119 - root - DEBUG - Table setup completed
2025-01-21 22:18:50,119 - root - DEBUG - UI setup completed successfully
2025-01-21 22:18:50,120 - root - DEBUG - Signal connections established
2025-01-21 22:18:50,123 - root - INFO - Scenario changed to: 111aaaa
2025-01-21 22:18:50,124 - root - DEBUG - UI updated for scenario: 111aaaa
2025-01-21 22:18:50,125 - root - INFO - Well pads table populated successfully.
2025-01-21 22:18:50,126 - root - INFO - Well pads table populated successfully.
2025-01-21 22:18:50,126 - root - INFO - Initial data loaded successfully.
2025-01-21 22:18:50,127 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:18:59,748 - root - INFO - Scenario '2' added successfully with ID 12. Active: 0
2025-01-21 22:18:59,762 - root - INFO - Scenario changed to: 2
2025-01-21 22:18:59,763 - root - DEBUG - UI updated for scenario: 2
2025-01-21 22:18:59,764 - root - INFO - Well pads table populated successfully.
2025-01-21 22:18:59,775 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:21:01,080 - root - ERROR - Error saving wells to database: cannot access local variable 'UWI' where it is not associated with a value
2025-01-21 22:23:23,949 - root - DEBUG - Toolbar setup completed
2025-01-21 22:23:23,951 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:23:23,953 - root - DEBUG - Table setup completed
2025-01-21 22:23:23,953 - root - DEBUG - UI setup completed successfully
2025-01-21 22:23:23,954 - root - DEBUG - Signal connections established
2025-01-21 22:23:23,957 - root - INFO - Scenario changed to: 2
2025-01-21 22:23:23,958 - root - DEBUG - UI updated for scenario: 2
2025-01-21 22:23:23,959 - root - INFO - Well pads table populated successfully.
2025-01-21 22:23:23,960 - root - INFO - Well pads table populated successfully.
2025-01-21 22:23:23,960 - root - INFO - Initial data loaded successfully.
2025-01-21 22:23:23,960 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:23:38,357 - root - INFO - Scenario '3' added successfully with ID 13. Active: 0
2025-01-21 22:23:38,371 - root - INFO - Scenario changed to: 3
2025-01-21 22:23:38,372 - root - DEBUG - UI updated for scenario: 3
2025-01-21 22:23:38,373 - root - INFO - Well pads table populated successfully.
2025-01-21 22:23:38,387 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:23:52,063 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:24:16,046 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:24:17,019 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:24:17,491 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:24:17,646 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:24:17,820 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:24:17,993 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:24:18,156 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:24:18,321 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:24:18,474 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:24:18,649 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:24:18,833 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:24:19,008 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:24:19,192 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:24:19,395 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:24:19,602 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:24:19,829 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:24:20,045 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:24:20,277 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:24:20,519 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:24:20,766 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:24:21,046 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:24:21,253 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:24:21,490 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:24:21,767 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:24:22,004 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:24:22,254 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:24:25,166 - root - INFO - Scenario 13 updated with 27 wells.
2025-01-21 22:24:56,478 - root - ERROR - Error in run_scenario: 'list' object has no attribute 'empty'
2025-01-21 22:27:17,337 - root - DEBUG - Toolbar setup completed
2025-01-21 22:27:17,340 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:27:17,343 - root - DEBUG - Table setup completed
2025-01-21 22:27:17,343 - root - DEBUG - UI setup completed successfully
2025-01-21 22:27:17,344 - root - DEBUG - Signal connections established
2025-01-21 22:27:17,347 - root - INFO - Scenario changed to: 3
2025-01-21 22:27:17,348 - root - DEBUG - UI updated for scenario: 3
2025-01-21 22:27:17,409 - root - INFO - Well pads table populated successfully.
2025-01-21 22:27:17,458 - root - INFO - Well pads table populated successfully.
2025-01-21 22:27:17,458 - root - INFO - Initial data loaded successfully.
2025-01-21 22:27:17,458 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:27:38,639 - root - INFO - Scenario '7' added successfully with ID 14. Active: 0
2025-01-21 22:27:38,650 - root - INFO - Scenario changed to: 7
2025-01-21 22:27:38,651 - root - DEBUG - UI updated for scenario: 7
2025-01-21 22:27:38,682 - root - INFO - Well pads table populated successfully.
2025-01-21 22:27:38,741 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:27:42,128 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:27:52,297 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:27:58,224 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:27:58,822 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:27:59,332 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:27:59,527 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:27:59,669 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:27:59,832 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:28:01,872 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:28:02,023 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:28:02,196 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:28:02,371 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:28:02,514 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:28:02,689 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:28:02,865 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:28:03,029 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:28:03,224 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:28:03,421 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:28:03,615 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:28:03,790 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:28:03,977 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:28:04,152 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:28:04,335 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:28:04,510 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:28:04,695 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:28:04,912 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:28:05,099 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:28:07,733 - root - INFO - Scenario 14 updated with 27 wells.
2025-01-21 22:28:33,575 - root - ERROR - Error in run_scenario: 'list' object has no attribute 'empty'
2025-01-21 22:30:20,652 - root - DEBUG - Toolbar setup completed
2025-01-21 22:30:20,655 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:30:20,658 - root - DEBUG - Table setup completed
2025-01-21 22:30:20,658 - root - DEBUG - UI setup completed successfully
2025-01-21 22:30:20,659 - root - DEBUG - Signal connections established
2025-01-21 22:30:20,663 - root - INFO - Scenario changed to: 7
2025-01-21 22:30:20,664 - root - DEBUG - UI updated for scenario: 7
2025-01-21 22:30:20,731 - root - INFO - Well pads table populated successfully.
2025-01-21 22:30:20,788 - root - INFO - Well pads table populated successfully.
2025-01-21 22:30:20,788 - root - INFO - Initial data loaded successfully.
2025-01-21 22:30:20,788 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:30:32,244 - root - INFO - Scenario 'aaaa999' added successfully with ID 15. Active: 0
2025-01-21 22:30:32,257 - root - INFO - Scenario changed to: aaaa999
2025-01-21 22:30:32,258 - root - DEBUG - UI updated for scenario: aaaa999
2025-01-21 22:30:32,260 - root - INFO - Well pads table populated successfully.
2025-01-21 22:30:32,312 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:30:34,386 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:30:36,181 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:30:36,700 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:30:36,873 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:30:37,016 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:30:37,181 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:30:37,313 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:30:37,467 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:30:37,611 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:30:37,754 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:30:37,898 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:30:40,236 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:30:40,401 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:30:40,524 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:30:40,686 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:30:40,852 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:30:40,997 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:30:41,172 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:30:41,346 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:30:41,511 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:30:41,665 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:30:41,830 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:30:41,994 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:30:42,149 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:30:42,302 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:30:42,455 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:30:42,591 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:30:44,700 - root - INFO - Scenario 15 updated with 27 wells.
2025-01-21 22:31:14,009 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,300 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,302 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,305 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,306 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,308 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,310 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,312 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,313 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,315 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,317 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,319 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,321 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,323 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,324 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,325 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,327 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,328 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,329 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,331 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,332 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,334 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,336 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,337 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,339 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,341 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,342 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,343 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,344 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,347 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,348 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,349 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,351 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,352 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,355 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,356 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,357 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,359 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,361 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,362 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,364 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,365 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,367 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,369 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,370 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,372 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,373 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 
2025-01-21 22:31:23,375 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,376 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,377 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,380 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 
2025-01-21 22:31:23,382 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:31:23,383 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 
2025-01-21 22:31:23,385 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:32:59,017 - root - DEBUG - Toolbar setup completed
2025-01-21 22:32:59,020 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:32:59,023 - root - DEBUG - Table setup completed
2025-01-21 22:32:59,023 - root - DEBUG - UI setup completed successfully
2025-01-21 22:32:59,024 - root - DEBUG - Signal connections established
2025-01-21 22:32:59,028 - root - INFO - Scenario changed to: aaaa999
2025-01-21 22:32:59,029 - root - DEBUG - UI updated for scenario: aaaa999
2025-01-21 22:32:59,101 - root - INFO - Well pads table populated successfully.
2025-01-21 22:32:59,171 - root - INFO - Well pads table populated successfully.
2025-01-21 22:32:59,171 - root - INFO - Initial data loaded successfully.
2025-01-21 22:32:59,172 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:33:11,436 - root - INFO - Scenario '45' added successfully with ID 16. Active: 0
2025-01-21 22:33:11,451 - root - INFO - Scenario changed to: 45
2025-01-21 22:33:11,452 - root - DEBUG - UI updated for scenario: 45
2025-01-21 22:33:11,454 - root - INFO - Well pads table populated successfully.
2025-01-21 22:33:11,510 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:33:16,108 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:33:16,115 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:33:16,122 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:33:16,132 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:33:16,140 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:33:16,147 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:33:16,156 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:33:16,165 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:33:16,172 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:33:16,180 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:33:16,186 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:33:16,193 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:33:16,200 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:33:16,207 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:33:16,214 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:33:16,222 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:33:16,230 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:33:16,239 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:33:16,247 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:33:16,256 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:33:16,265 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:33:16,273 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:33:16,282 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:33:16,289 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:33:16,296 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:33:16,302 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:33:16,310 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:33:17,972 - root - INFO - Scenario 16 updated with 27 wells.
2025-01-21 22:33:42,883 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 
2025-01-21 22:36:10,864 - root - DEBUG - Toolbar setup completed
2025-01-21 22:36:10,866 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:36:10,869 - root - DEBUG - Table setup completed
2025-01-21 22:36:10,869 - root - DEBUG - UI setup completed successfully
2025-01-21 22:36:10,870 - root - DEBUG - Signal connections established
2025-01-21 22:36:10,873 - root - INFO - Scenario changed to: 45
2025-01-21 22:36:10,874 - root - DEBUG - UI updated for scenario: 45
2025-01-21 22:36:10,930 - root - INFO - Well pads table populated successfully.
2025-01-21 22:36:10,982 - root - INFO - Well pads table populated successfully.
2025-01-21 22:36:10,982 - root - INFO - Initial data loaded successfully.
2025-01-21 22:36:10,982 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:36:20,307 - root - INFO - Scenario '1213' added successfully with ID 17. Active: 0
2025-01-21 22:36:20,348 - root - INFO - Scenario changed to: 1213
2025-01-21 22:36:20,349 - root - DEBUG - UI updated for scenario: 1213
2025-01-21 22:36:20,351 - root - INFO - Well pads table populated successfully.
2025-01-21 22:36:20,387 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:36:20,404 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:36:20,411 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:36:20,416 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:36:20,421 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:36:20,427 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:36:20,432 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:36:20,438 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:36:20,476 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:36:20,482 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:36:20,487 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:36:20,493 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:36:20,498 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:36:20,503 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:36:20,508 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:36:20,514 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:36:20,519 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:36:20,525 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:36:20,573 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:36:20,579 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:36:20,584 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:36:20,590 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:36:20,595 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:36:20,601 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:36:20,607 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:36:20,612 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:36:20,617 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:36:21,892 - root - INFO - Scenario 17 updated with 27 wells.
2025-01-21 22:36:21,919 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:36:25,977 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 
2025-01-21 22:39:38,610 - root - DEBUG - Toolbar setup completed
2025-01-21 22:39:38,613 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:39:38,615 - root - DEBUG - Table setup completed
2025-01-21 22:39:38,615 - root - DEBUG - UI setup completed successfully
2025-01-21 22:39:38,616 - root - DEBUG - Signal connections established
2025-01-21 22:39:38,619 - root - INFO - Scenario changed to: 1213
2025-01-21 22:39:38,619 - root - DEBUG - UI updated for scenario: 1213
2025-01-21 22:39:38,666 - root - INFO - Well pads table populated successfully.
2025-01-21 22:39:38,715 - root - INFO - Well pads table populated successfully.
2025-01-21 22:39:38,715 - root - INFO - Initial data loaded successfully.
2025-01-21 22:39:38,715 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:39:49,321 - root - INFO - Scenario 'aaaa45555' added successfully with ID 18. Active: 0
2025-01-21 22:39:49,332 - root - INFO - Scenario changed to: aaaa45555
2025-01-21 22:39:49,333 - root - DEBUG - UI updated for scenario: aaaa45555
2025-01-21 22:39:49,335 - root - INFO - Well pads table populated successfully.
2025-01-21 22:39:49,368 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:39:49,374 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:39:49,382 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:39:49,389 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:39:49,395 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:39:49,403 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:39:49,408 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:39:49,415 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:39:49,421 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:39:49,427 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:39:49,434 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:39:49,440 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:39:49,448 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:39:49,455 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:39:49,462 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:39:49,468 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:39:49,475 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:39:49,482 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:39:49,488 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:39:49,495 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:39:49,502 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:39:49,509 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:39:49,517 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:39:49,522 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:39:49,530 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:39:49,535 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:39:49,543 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:39:50,847 - root - INFO - Scenario 18 updated with 27 wells.
2025-01-21 22:39:50,869 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:41:15,291 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 
2025-01-21 22:43:32,830 - root - DEBUG - Toolbar setup completed
2025-01-21 22:43:32,833 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:43:32,835 - root - DEBUG - Table setup completed
2025-01-21 22:43:32,835 - root - DEBUG - UI setup completed successfully
2025-01-21 22:43:32,836 - root - DEBUG - Signal connections established
2025-01-21 22:43:32,840 - root - INFO - Scenario changed to: aaaa45555
2025-01-21 22:43:32,841 - root - DEBUG - UI updated for scenario: aaaa45555
2025-01-21 22:43:32,893 - root - INFO - Well pads table populated successfully.
2025-01-21 22:43:32,943 - root - INFO - Well pads table populated successfully.
2025-01-21 22:43:32,943 - root - INFO - Initial data loaded successfully.
2025-01-21 22:43:32,944 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:43:40,559 - root - INFO - Scenario 'aaaaasdfdas' added successfully with ID 19. Active: 0
2025-01-21 22:43:40,576 - root - INFO - Scenario changed to: aaaaasdfdas
2025-01-21 22:43:40,577 - root - DEBUG - UI updated for scenario: aaaaasdfdas
2025-01-21 22:43:40,580 - root - INFO - Well pads table populated successfully.
2025-01-21 22:43:40,621 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:43:40,630 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:43:40,638 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:43:40,644 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:43:40,652 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:43:40,659 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:43:40,667 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:43:40,676 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:43:40,682 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:43:40,690 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:43:40,696 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:43:40,704 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:43:40,710 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:43:40,718 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:43:40,726 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:43:40,734 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:43:40,742 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:43:40,748 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:43:40,755 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:43:40,762 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:43:40,768 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:43:40,775 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:43:40,781 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:43:40,788 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:43:40,794 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:43:40,801 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:43:40,806 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:43:41,864 - root - INFO - Scenario 19 updated with 27 wells.
2025-01-21 22:43:41,899 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 22:43:45,765 - root - ERROR - Error in run_scenario: cannot access local variable 'well_data' where it is not associated with a value
2025-01-21 22:44:33,945 - root - DEBUG - Toolbar setup completed
2025-01-21 22:44:33,947 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:44:33,950 - root - DEBUG - Table setup completed
2025-01-21 22:44:33,950 - root - DEBUG - UI setup completed successfully
2025-01-21 22:44:33,951 - root - DEBUG - Signal connections established
2025-01-21 22:44:33,954 - root - INFO - Scenario changed to: aaaaasdfdas
2025-01-21 22:44:33,955 - root - DEBUG - UI updated for scenario: aaaaasdfdas
2025-01-21 22:44:34,006 - root - INFO - Well pads table populated successfully.
2025-01-21 22:44:34,068 - root - INFO - Well pads table populated successfully.
2025-01-21 22:44:34,068 - root - INFO - Initial data loaded successfully.
2025-01-21 22:44:34,068 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:44:40,357 - root - INFO - Scenario 'a223321' added successfully with ID 20. Active: 0
2025-01-21 22:44:40,370 - root - INFO - Scenario changed to: a223321
2025-01-21 22:44:40,370 - root - DEBUG - UI updated for scenario: a223321
2025-01-21 22:44:40,372 - root - INFO - Well pads table populated successfully.
2025-01-21 22:44:40,406 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:44:40,412 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:44:40,420 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:44:40,427 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:44:40,435 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:44:40,442 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:44:40,448 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:44:40,456 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:44:40,462 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:44:40,469 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:44:40,475 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:44:40,482 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:44:40,490 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:44:40,498 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:44:40,505 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:44:40,512 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:44:40,518 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:44:40,526 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:44:40,532 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:44:40,538 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:44:40,545 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:44:40,551 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:44:40,558 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:44:40,563 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:44:40,570 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:44:40,576 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:44:40,582 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:44:41,736 - root - INFO - Scenario 20 updated with 27 wells.
2025-01-21 22:44:41,751 - root - ERROR - Error processing well WP3L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,753 - root - ERROR - Error processing well WP6L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,754 - root - ERROR - Error processing well WP4L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,754 - root - ERROR - Error processing well WP9L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,755 - root - ERROR - Error processing well WP7L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,755 - root - ERROR - Error processing well WP2L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,755 - root - ERROR - Error processing well WP1L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,756 - root - ERROR - Error processing well WP8L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,756 - root - ERROR - Error processing well WP4L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,757 - root - ERROR - Error processing well WP1L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,758 - root - ERROR - Error processing well WP9L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,758 - root - ERROR - Error processing well WP2L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,758 - root - ERROR - Error processing well WP6L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,760 - root - ERROR - Error processing well WP9L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,760 - root - ERROR - Error processing well WP8L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,761 - root - ERROR - Error processing well WP7L1Side1Leg1: 'decline_curve'
2025-01-21 22:44:41,762 - root - ERROR - Error processing well WP5L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,762 - root - ERROR - Error processing well WP5L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,763 - root - ERROR - Error processing well WP6L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,763 - root - ERROR - Error processing well WP7L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,765 - root - ERROR - Error processing well WP2L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,766 - root - ERROR - Error processing well WP4L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,766 - root - ERROR - Error processing well WP3L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,767 - root - ERROR - Error processing well WP8L1Side1Leg2: 'decline_curve'
2025-01-21 22:44:41,768 - root - ERROR - Error processing well WP3L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,768 - root - ERROR - Error processing well WP1L1Side1Leg3: 'decline_curve'
2025-01-21 22:44:41,769 - root - ERROR - Error processing well WP5L1Side1Leg1: 'decline_curve'
2025-01-21 22:53:44,557 - root - DEBUG - Toolbar setup completed
2025-01-21 22:53:44,561 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:53:44,570 - root - DEBUG - Table setup completed
2025-01-21 22:53:44,570 - root - DEBUG - UI setup completed successfully
2025-01-21 22:53:44,571 - root - DEBUG - Signal connections established
2025-01-21 22:53:44,574 - root - INFO - Scenario changed to: a223321
2025-01-21 22:53:44,575 - root - DEBUG - UI updated for scenario: a223321
2025-01-21 22:53:44,651 - root - INFO - Well pads table populated successfully.
2025-01-21 22:53:44,710 - root - INFO - Well pads table populated successfully.
2025-01-21 22:53:44,711 - root - INFO - Initial data loaded successfully.
2025-01-21 22:53:44,711 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:53:58,117 - root - INFO - Scenario 'd2331' added successfully with ID 21. Active: 0
2025-01-21 22:53:58,132 - root - INFO - Scenario changed to: d2331
2025-01-21 22:53:58,133 - root - DEBUG - UI updated for scenario: d2331
2025-01-21 22:53:58,135 - root - INFO - Well pads table populated successfully.
2025-01-21 22:53:58,187 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:53:58,191 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:53:58,197 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:53:58,202 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:53:58,208 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:53:58,213 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:53:58,219 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:53:58,223 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:53:58,261 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:53:58,268 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:53:58,273 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:53:58,279 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:53:58,284 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:53:58,290 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:53:58,295 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:53:58,300 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:53:58,341 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:53:58,346 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:53:58,351 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:53:58,356 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:53:58,361 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:53:58,366 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:53:58,372 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:53:58,378 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:53:58,383 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:53:58,390 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:53:58,426 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:53:59,547 - root - INFO - Scenario 21 updated with 27 wells.
2025-01-21 22:53:59,573 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,575 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,575 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,576 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,577 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,578 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,579 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,579 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,581 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,582 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,582 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,583 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,584 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,586 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,586 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,587 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,588 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,589 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,589 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,591 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,592 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,593 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,594 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,595 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,596 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,597 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,597 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,599 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,600 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,601 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,602 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,603 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,603 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,604 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,605 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,606 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,607 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,608 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,608 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,609 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,611 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,612 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,613 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,614 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,614 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,617 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,617 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 
2025-01-21 22:53:59,618 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,619 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,620 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,621 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 
2025-01-21 22:53:59,622 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:53:59,623 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 
2025-01-21 22:53:59,625 - root - WARNING - No model properties found for reference UWI: 
2025-01-21 22:58:27,375 - root - DEBUG - Toolbar setup completed
2025-01-21 22:58:27,379 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 22:58:27,382 - root - DEBUG - Table setup completed
2025-01-21 22:58:27,382 - root - DEBUG - UI setup completed successfully
2025-01-21 22:58:27,383 - root - DEBUG - Signal connections established
2025-01-21 22:58:27,387 - root - INFO - Scenario changed to: d2331
2025-01-21 22:58:27,387 - root - DEBUG - UI updated for scenario: d2331
2025-01-21 22:58:27,446 - root - INFO - Well pads table populated successfully.
2025-01-21 22:58:27,512 - root - INFO - Well pads table populated successfully.
2025-01-21 22:58:27,512 - root - INFO - Initial data loaded successfully.
2025-01-21 22:58:27,513 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 22:58:33,884 - root - INFO - Scenario '334213421423' added successfully with ID 22. Active: 0
2025-01-21 22:58:33,898 - root - INFO - Scenario changed to: 334213421423
2025-01-21 22:58:33,899 - root - DEBUG - UI updated for scenario: 334213421423
2025-01-21 22:58:33,901 - root - INFO - Well pads table populated successfully.
2025-01-21 22:58:33,937 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 22:58:33,942 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 22:58:33,949 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 22:58:33,955 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 22:58:33,961 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 22:58:33,967 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 22:58:33,974 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 22:58:33,980 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 22:58:33,986 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 22:58:33,992 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 22:58:33,999 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 22:58:34,005 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 22:58:34,013 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 22:58:34,019 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 22:58:34,025 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 22:58:34,032 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 22:58:34,038 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 22:58:34,046 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 22:58:34,053 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 22:58:34,059 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 22:58:34,066 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 22:58:34,073 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 22:58:34,080 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 22:58:34,086 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 22:58:34,093 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 22:58:34,099 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 22:58:34,104 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 22:58:35,057 - root - INFO - Scenario 22 updated with 27 wells.
2025-01-21 22:58:35,070 - root - ERROR - Error processing well WP3L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,071 - root - ERROR - Error processing well WP6L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,071 - root - ERROR - Error processing well WP4L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,072 - root - ERROR - Error processing well WP9L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,073 - root - ERROR - Error processing well WP7L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,073 - root - ERROR - Error processing well WP2L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,074 - root - ERROR - Error processing well WP1L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,075 - root - ERROR - Error processing well WP8L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,075 - root - ERROR - Error processing well WP4L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,076 - root - ERROR - Error processing well WP1L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,077 - root - ERROR - Error processing well WP9L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,077 - root - ERROR - Error processing well WP2L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,078 - root - ERROR - Error processing well WP6L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,078 - root - ERROR - Error processing well WP9L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,079 - root - ERROR - Error processing well WP8L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,079 - root - ERROR - Error processing well WP7L1Side1Leg1: 'decline_curve'
2025-01-21 22:58:35,080 - root - ERROR - Error processing well WP5L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,081 - root - ERROR - Error processing well WP5L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,081 - root - ERROR - Error processing well WP6L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,082 - root - ERROR - Error processing well WP7L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,082 - root - ERROR - Error processing well WP2L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,083 - root - ERROR - Error processing well WP4L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,084 - root - ERROR - Error processing well WP3L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,085 - root - ERROR - Error processing well WP8L1Side1Leg2: 'decline_curve'
2025-01-21 22:58:35,085 - root - ERROR - Error processing well WP3L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,086 - root - ERROR - Error processing well WP1L1Side1Leg3: 'decline_curve'
2025-01-21 22:58:35,086 - root - ERROR - Error processing well WP5L1Side1Leg1: 'decline_curve'
2025-01-21 23:00:04,896 - root - DEBUG - Toolbar setup completed
2025-01-21 23:00:04,902 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 23:00:04,905 - root - DEBUG - Table setup completed
2025-01-21 23:00:04,905 - root - DEBUG - UI setup completed successfully
2025-01-21 23:00:04,908 - root - DEBUG - Signal connections established
2025-01-21 23:00:04,912 - root - INFO - Scenario changed to: 334213421423
2025-01-21 23:00:04,913 - root - DEBUG - UI updated for scenario: 334213421423
2025-01-21 23:00:05,017 - root - INFO - Well pads table populated successfully.
2025-01-21 23:00:05,128 - root - INFO - Well pads table populated successfully.
2025-01-21 23:00:05,129 - root - INFO - Initial data loaded successfully.
2025-01-21 23:00:05,129 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 23:00:13,619 - root - INFO - Scenario '23131321' added successfully with ID 23. Active: 0
2025-01-21 23:00:13,635 - root - INFO - Scenario changed to: 23131321
2025-01-21 23:00:13,636 - root - DEBUG - UI updated for scenario: 23131321
2025-01-21 23:00:13,638 - root - INFO - Well pads table populated successfully.
2025-01-21 23:00:13,675 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 23:00:13,681 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 23:00:13,689 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 23:00:13,697 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 23:00:13,703 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 23:00:13,711 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 23:00:13,718 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 23:00:13,725 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 23:00:13,735 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 23:00:13,742 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 23:00:13,748 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 23:00:13,757 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 23:00:13,765 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 23:00:13,773 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 23:00:13,781 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 23:00:13,789 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 23:00:13,796 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 23:00:13,804 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 23:00:13,813 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 23:00:13,821 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 23:00:13,830 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 23:00:13,838 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 23:00:13,845 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 23:00:13,853 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 23:00:13,859 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 23:00:13,868 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 23:00:13,878 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 23:00:14,904 - root - INFO - Scenario 23 updated with 27 wells.
2025-01-21 23:00:14,954 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 23:02:12,427 - root - DEBUG - Toolbar setup completed
2025-01-21 23:02:12,430 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 23:02:12,432 - root - DEBUG - Table setup completed
2025-01-21 23:02:12,433 - root - DEBUG - UI setup completed successfully
2025-01-21 23:02:12,434 - root - DEBUG - Signal connections established
2025-01-21 23:02:12,436 - root - INFO - Scenario changed to: 23131321
2025-01-21 23:02:12,437 - root - DEBUG - UI updated for scenario: 23131321
2025-01-21 23:02:12,491 - root - INFO - Well pads table populated successfully.
2025-01-21 23:02:12,549 - root - INFO - Well pads table populated successfully.
2025-01-21 23:02:12,549 - root - INFO - Initial data loaded successfully.
2025-01-21 23:02:12,549 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 23:02:18,263 - root - INFO - Scenario '343243242' added successfully with ID 24. Active: 0
2025-01-21 23:02:18,277 - root - INFO - Scenario changed to: 343243242
2025-01-21 23:02:18,278 - root - DEBUG - UI updated for scenario: 343243242
2025-01-21 23:02:18,281 - root - INFO - Well pads table populated successfully.
2025-01-21 23:02:18,315 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 23:02:18,321 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 23:02:18,328 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 23:02:18,334 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 23:02:18,340 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 23:02:18,346 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 23:02:18,352 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 23:02:18,357 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 23:02:18,364 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 23:02:18,370 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 23:02:18,377 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 23:02:18,384 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 23:02:18,391 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 23:02:18,396 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 23:02:18,403 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 23:02:18,409 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 23:02:18,416 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 23:02:18,422 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 23:02:18,429 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 23:02:18,436 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 23:02:18,443 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 23:02:18,449 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 23:02:18,454 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 23:02:18,461 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 23:02:18,468 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 23:02:18,474 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 23:02:18,480 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 23:02:19,527 - root - INFO - Scenario 24 updated with 27 wells.
2025-01-21 23:02:19,552 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 23:04:38,208 - root - DEBUG - Toolbar setup completed
2025-01-21 23:04:38,211 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 23:04:38,213 - root - DEBUG - Table setup completed
2025-01-21 23:04:38,213 - root - DEBUG - UI setup completed successfully
2025-01-21 23:04:38,220 - root - DEBUG - Signal connections established
2025-01-21 23:04:38,223 - root - INFO - Scenario changed to: 343243242
2025-01-21 23:04:38,224 - root - DEBUG - UI updated for scenario: 343243242
2025-01-21 23:04:38,271 - root - INFO - Well pads table populated successfully.
2025-01-21 23:04:38,319 - root - INFO - Well pads table populated successfully.
2025-01-21 23:04:38,321 - root - INFO - Initial data loaded successfully.
2025-01-21 23:04:38,321 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 23:04:50,356 - root - INFO - Scenario '4452342' added successfully with ID 25. Active: 0
2025-01-21 23:04:50,369 - root - INFO - Scenario changed to: 4452342
2025-01-21 23:04:50,369 - root - DEBUG - UI updated for scenario: 4452342
2025-01-21 23:04:50,371 - root - INFO - Well pads table populated successfully.
2025-01-21 23:04:50,408 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 23:04:50,414 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 23:04:50,421 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 23:04:50,427 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 23:04:50,434 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 23:04:50,440 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 23:04:50,447 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 23:04:50,453 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 23:04:50,460 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 23:04:50,466 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 23:04:50,472 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 23:04:50,478 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 23:04:50,483 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 23:04:50,489 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 23:04:50,496 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 23:04:50,503 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 23:04:50,509 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 23:04:50,516 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 23:04:50,523 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 23:04:50,528 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 23:04:50,533 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 23:04:50,540 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 23:04:50,546 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 23:04:50,552 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 23:04:50,557 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 23:04:50,565 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 23:04:50,571 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 23:04:51,595 - root - INFO - Scenario 25 updated with 27 wells.
2025-01-21 23:04:51,687 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 23:05:02,097 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:07,597 - root - DEBUG - Toolbar setup completed
2025-01-21 23:07:07,600 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 23:07:07,602 - root - DEBUG - Table setup completed
2025-01-21 23:07:07,602 - root - DEBUG - UI setup completed successfully
2025-01-21 23:07:07,603 - root - DEBUG - Signal connections established
2025-01-21 23:07:07,606 - root - INFO - Scenario changed to: 4452342
2025-01-21 23:07:07,606 - root - DEBUG - UI updated for scenario: 4452342
2025-01-21 23:07:07,656 - root - INFO - Well pads table populated successfully.
2025-01-21 23:07:07,706 - root - INFO - Well pads table populated successfully.
2025-01-21 23:07:07,706 - root - INFO - Initial data loaded successfully.
2025-01-21 23:07:07,706 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 23:07:12,470 - root - INFO - Scenario '1111' added successfully with ID 26. Active: 0
2025-01-21 23:07:12,482 - root - INFO - Scenario changed to: 1111
2025-01-21 23:07:12,483 - root - DEBUG - UI updated for scenario: 1111
2025-01-21 23:07:12,485 - root - INFO - Well pads table populated successfully.
2025-01-21 23:07:12,519 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 23:07:12,525 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 23:07:12,532 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 23:07:12,539 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 23:07:12,546 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 23:07:12,552 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 23:07:12,558 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 23:07:12,565 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 23:07:12,571 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 23:07:12,578 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 23:07:12,584 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 23:07:12,590 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 23:07:12,596 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 23:07:12,601 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 23:07:12,607 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 23:07:12,613 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 23:07:12,618 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 23:07:12,626 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 23:07:12,632 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 23:07:12,639 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 23:07:12,645 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 23:07:12,652 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 23:07:12,658 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 23:07:12,663 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 23:07:12,669 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 23:07:12,675 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 23:07:12,680 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 23:07:13,615 - root - INFO - Scenario 26 updated with 27 wells.
2025-01-21 23:07:13,678 - root - INFO - Processing well WP3L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,679 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,679 - root - INFO - Processing well WP6L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,680 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,680 - root - INFO - Processing well WP4L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,680 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,681 - root - INFO - Processing well WP9L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,681 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,682 - root - INFO - Processing well WP7L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,682 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,683 - root - INFO - Processing well WP2L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,684 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,684 - root - INFO - Processing well WP1L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,684 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,685 - root - INFO - Processing well WP8L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,685 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,685 - root - INFO - Processing well WP4L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,685 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,686 - root - INFO - Processing well WP1L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,686 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,687 - root - INFO - Processing well WP9L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,687 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,687 - root - INFO - Processing well WP2L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,688 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,688 - root - INFO - Processing well WP6L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,688 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,689 - root - INFO - Processing well WP9L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,689 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,689 - root - INFO - Processing well WP8L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,689 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,690 - root - INFO - Processing well WP7L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,690 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,690 - root - INFO - Processing well WP5L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,690 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,691 - root - INFO - Processing well WP5L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,691 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,692 - root - INFO - Processing well WP6L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,692 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,692 - root - INFO - Processing well WP7L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,692 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,692 - root - INFO - Processing well WP2L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,692 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,693 - root - INFO - Processing well WP4L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,693 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,693 - root - INFO - Processing well WP3L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,693 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,694 - root - INFO - Processing well WP8L1Side1Leg2 with None: 840300000505415
2025-01-21 23:07:13,694 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,694 - root - INFO - Processing well WP3L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,695 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,695 - root - INFO - Processing well WP1L1Side1Leg3 with None: 840300000505415
2025-01-21 23:07:13,695 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:07:13,696 - root - INFO - Processing well WP5L1Side1Leg1 with None: 840300000505415
2025-01-21 23:07:13,696 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:49,982 - root - DEBUG - Toolbar setup completed
2025-01-21 23:09:49,985 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 23:09:49,987 - root - DEBUG - Table setup completed
2025-01-21 23:09:49,988 - root - DEBUG - UI setup completed successfully
2025-01-21 23:09:49,989 - root - DEBUG - Signal connections established
2025-01-21 23:09:49,992 - root - INFO - Scenario changed to: 1111
2025-01-21 23:09:49,992 - root - DEBUG - UI updated for scenario: 1111
2025-01-21 23:09:50,058 - root - INFO - Well pads table populated successfully.
2025-01-21 23:09:50,124 - root - INFO - Well pads table populated successfully.
2025-01-21 23:09:50,124 - root - INFO - Initial data loaded successfully.
2025-01-21 23:09:50,124 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 23:09:56,869 - root - INFO - Scenario '009999' added successfully with ID 27. Active: 0
2025-01-21 23:09:56,882 - root - INFO - Scenario changed to: 009999
2025-01-21 23:09:56,883 - root - DEBUG - UI updated for scenario: 009999
2025-01-21 23:09:56,885 - root - INFO - Well pads table populated successfully.
2025-01-21 23:09:56,922 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 23:09:56,928 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 23:09:56,935 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 23:09:56,942 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 23:09:56,950 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 23:09:56,957 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 23:09:56,964 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 23:09:56,970 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 23:09:56,978 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 23:09:56,984 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 23:09:56,992 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 23:09:56,999 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 23:09:57,006 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 23:09:57,012 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 23:09:57,018 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 23:09:57,026 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 23:09:57,033 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 23:09:57,039 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 23:09:57,047 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 23:09:57,055 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 23:09:57,062 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 23:09:57,069 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 23:09:57,076 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 23:09:57,081 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 23:09:57,088 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 23:09:57,094 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 23:09:57,100 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 23:09:58,072 - root - INFO - Scenario 27 updated with 27 wells.
2025-01-21 23:09:58,144 - root - INFO - Processing well WP3L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,144 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,145 - root - INFO - Processing well WP6L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,145 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,146 - root - INFO - Processing well WP4L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,146 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,146 - root - INFO - Processing well WP9L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,147 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,147 - root - INFO - Processing well WP7L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,148 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,148 - root - INFO - Processing well WP2L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,148 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,149 - root - INFO - Processing well WP1L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,149 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,150 - root - INFO - Processing well WP8L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,150 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,150 - root - INFO - Processing well WP4L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,151 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,151 - root - INFO - Processing well WP1L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,151 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,152 - root - INFO - Processing well WP9L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,152 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,152 - root - INFO - Processing well WP2L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,153 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,153 - root - INFO - Processing well WP6L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,153 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,154 - root - INFO - Processing well WP9L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,154 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,154 - root - INFO - Processing well WP8L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,154 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,155 - root - INFO - Processing well WP7L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,155 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,155 - root - INFO - Processing well WP5L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,155 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,156 - root - INFO - Processing well WP5L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,156 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,156 - root - INFO - Processing well WP6L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,156 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,156 - root - INFO - Processing well WP7L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,156 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,158 - root - INFO - Processing well WP2L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,158 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,158 - root - INFO - Processing well WP4L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,158 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,159 - root - INFO - Processing well WP3L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,159 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,159 - root - INFO - Processing well WP8L1Side1Leg2 with None: 840300000505415
2025-01-21 23:09:58,159 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,160 - root - INFO - Processing well WP3L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,160 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,161 - root - INFO - Processing well WP1L1Side1Leg3 with None: 840300000505415
2025-01-21 23:09:58,161 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:09:58,161 - root - INFO - Processing well WP5L1Side1Leg1 with None: 840300000505415
2025-01-21 23:09:58,161 - root - ERROR - Unknown decline curve type: None
2025-01-21 23:14:57,245 - root - DEBUG - Toolbar setup completed
2025-01-21 23:14:57,249 - root - DEBUG - Scenario dropdown setup completed
2025-01-21 23:14:57,251 - root - DEBUG - Table setup completed
2025-01-21 23:14:57,252 - root - DEBUG - UI setup completed successfully
2025-01-21 23:14:57,253 - root - DEBUG - Signal connections established
2025-01-21 23:14:57,255 - root - INFO - Scenario changed to: 009999
2025-01-21 23:14:57,256 - root - DEBUG - UI updated for scenario: 009999
2025-01-21 23:14:57,313 - root - INFO - Well pads table populated successfully.
2025-01-21 23:14:57,362 - root - INFO - Well pads table populated successfully.
2025-01-21 23:14:57,363 - root - INFO - Initial data loaded successfully.
2025-01-21 23:14:57,363 - root - INFO - PUDPropertiesDialog initialized
2025-01-21 23:15:05,235 - root - INFO - Scenario '455243242' added successfully with ID 28. Active: 0
2025-01-21 23:15:05,246 - root - INFO - Scenario changed to: 455243242
2025-01-21 23:15:05,247 - root - DEBUG - UI updated for scenario: 455243242
2025-01-21 23:15:05,250 - root - INFO - Well pads table populated successfully.
2025-01-21 23:15:05,261 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-21 23:15:17,011 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-21 23:15:17,017 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-21 23:15:17,024 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-21 23:15:17,032 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-21 23:15:17,040 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-21 23:15:17,048 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-21 23:15:17,056 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-21 23:15:17,063 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-21 23:15:17,071 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-21 23:15:17,078 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-21 23:15:17,086 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-21 23:15:17,094 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-21 23:15:17,101 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-21 23:15:17,108 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-21 23:15:17,115 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-21 23:15:17,122 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-21 23:15:17,130 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-21 23:15:17,138 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-21 23:15:17,146 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-21 23:15:17,155 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-21 23:15:17,162 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-21 23:15:17,170 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-21 23:15:17,232 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-21 23:15:17,240 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-21 23:15:17,248 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-21 23:15:17,257 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-21 23:15:17,265 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-21 23:15:19,287 - root - INFO - Scenario 28 updated with 27 wells.
2025-01-21 23:15:27,078 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:15:31,329 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:15:35,324 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:15:39,006 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:15:42,735 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:15:46,690 - root - INFO - Processed 5/27 wells
2025-01-21 23:15:46,691 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:15:50,479 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:15:54,189 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:15:57,876 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:16:01,748 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:16:05,444 - root - INFO - Processed 10/27 wells
2025-01-21 23:16:05,445 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:16:09,713 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:16:13,459 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:16:17,238 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:16:21,056 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:16:25,272 - root - INFO - Processed 15/27 wells
2025-01-21 23:16:25,273 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:16:29,244 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:16:33,380 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:16:37,419 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:16:41,217 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:16:45,008 - root - INFO - Processed 20/27 wells
2025-01-21 23:16:45,009 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:16:48,844 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:16:52,763 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:16:56,526 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-21 23:17:00,379 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:17:04,197 - root - INFO - Processed 25/27 wells
2025-01-21 23:17:04,198 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-21 23:17:08,207 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-21 23:17:31,990 - root - INFO - Well pads table populated successfully.
2025-01-21 23:17:50,080 - root - INFO - Dialog closed successfully
2025-01-22 20:50:41,627 - root - DEBUG - Toolbar setup completed
2025-01-22 20:50:41,629 - root - DEBUG - Scenario dropdown setup completed
2025-01-22 20:50:41,636 - root - DEBUG - Table setup completed
2025-01-22 20:50:41,636 - root - DEBUG - UI setup completed successfully
2025-01-22 20:50:41,638 - root - DEBUG - Signal connections established
2025-01-22 20:50:41,640 - root - INFO - No scenarios to load.
2025-01-22 20:50:41,640 - root - INFO - PUDPropertiesDialog initialized
2025-01-22 20:50:43,701 - root - INFO - Dialog closed successfully
2025-01-22 20:50:45,238 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-23 19:30:40,870 - root - DEBUG - Toolbar setup completed
2025-01-23 19:30:40,872 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 19:30:40,875 - root - DEBUG - Table setup completed
2025-01-23 19:30:40,876 - root - DEBUG - UI setup completed successfully
2025-01-23 19:30:40,878 - root - DEBUG - Signal connections established
2025-01-23 19:30:40,880 - root - INFO - No scenarios to load.
2025-01-23 19:30:40,881 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 19:31:00,467 - root - INFO - Dialog closed successfully
2025-01-23 19:31:12,199 - root - DEBUG - Toolbar setup completed
2025-01-23 19:31:12,199 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 19:31:12,201 - root - DEBUG - Table setup completed
2025-01-23 19:31:12,201 - root - DEBUG - UI setup completed successfully
2025-01-23 19:31:12,202 - root - DEBUG - Signal connections established
2025-01-23 19:31:12,208 - root - INFO - No scenarios to load.
2025-01-23 19:31:12,208 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 19:32:06,973 - root - INFO - Scenario 'First one' added successfully with ID 2. Active: 0
2025-01-23 19:32:14,150 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-23 19:32:14,153 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-23 19:32:14,157 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-23 19:32:14,160 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-23 19:32:14,163 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-23 19:32:14,166 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-23 19:32:14,170 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-23 19:32:14,173 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-23 19:32:14,175 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-23 19:32:14,178 - root - INFO - Inserting new well pad for UWI: 840300020072475
2025-01-23 19:32:14,180 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-23 19:32:14,182 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-23 19:32:14,184 - root - INFO - Inserting new well pad for UWI: 840300020070923
2025-01-23 19:32:14,187 - root - INFO - Inserting new well pad for UWI: 840300020072469
2025-01-23 19:32:14,189 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-23 19:32:14,191 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-23 19:32:14,193 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-23 19:32:14,195 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-23 19:32:14,197 - root - INFO - Inserting new well pad for UWI: 840300020072473
2025-01-23 19:32:14,200 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-23 19:32:14,203 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-23 19:32:14,206 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-23 19:32:14,209 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-23 19:32:14,211 - root - INFO - Inserting new well pad for UWI: 840300020070906
2025-01-23 19:32:14,213 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-23 19:32:14,216 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-23 19:32:14,219 - root - INFO - Inserting new well pad for UWI: 840300020069956
2025-01-23 19:32:14,223 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-23 19:32:14,224 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-23 19:32:14,228 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-23 19:32:14,230 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-23 19:32:14,233 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-23 19:32:14,235 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-23 19:32:16,307 - root - INFO - Scenario 2 updated with 33 wells.
2025-01-23 19:32:18,364 - root - WARNING - No wells found for this scenario.
2025-01-23 19:32:21,017 - root - INFO - Well pads table populated successfully.
2025-01-23 21:00:22,436 - root - DEBUG - Toolbar setup completed
2025-01-23 21:00:22,438 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:00:22,446 - root - DEBUG - Table setup completed
2025-01-23 21:00:22,446 - root - DEBUG - UI setup completed successfully
2025-01-23 21:00:22,447 - root - DEBUG - Signal connections established
2025-01-23 21:00:22,450 - root - INFO - No scenarios to load.
2025-01-23 21:00:22,450 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:00:27,716 - root - INFO - Dialog closed successfully
2025-01-23 21:00:46,044 - root - DEBUG - Toolbar setup completed
2025-01-23 21:00:46,044 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:00:46,046 - root - DEBUG - Table setup completed
2025-01-23 21:00:46,046 - root - DEBUG - UI setup completed successfully
2025-01-23 21:00:46,048 - root - DEBUG - Signal connections established
2025-01-23 21:00:46,050 - root - INFO - No scenarios to load.
2025-01-23 21:00:46,051 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:00:49,900 - root - INFO - Dialog closed successfully
2025-01-23 21:01:09,524 - root - DEBUG - Toolbar setup completed
2025-01-23 21:01:09,524 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:01:09,525 - root - DEBUG - Table setup completed
2025-01-23 21:01:09,526 - root - DEBUG - UI setup completed successfully
2025-01-23 21:01:09,526 - root - DEBUG - Signal connections established
2025-01-23 21:01:09,528 - root - INFO - No scenarios to load.
2025-01-23 21:01:09,528 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:01:53,961 - root - INFO - Scenario 'First one' added successfully with ID 2. Active: 0
2025-01-23 21:01:53,977 - root - ERROR - Error retrieving UIWs for scenario 2: no such table: well_pads
2025-01-23 21:01:54,011 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-23 21:01:54,013 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-23 21:01:54,014 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-23 21:01:54,016 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-23 21:01:54,018 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-23 21:01:54,020 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-23 21:01:54,022 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-23 21:01:54,023 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-23 21:01:54,025 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-23 21:01:54,026 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-23 21:01:54,028 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-23 21:01:54,029 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-23 21:01:54,031 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-23 21:01:54,033 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-23 21:01:54,035 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-23 21:01:54,037 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-23 21:01:54,039 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-23 21:01:54,040 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-23 21:01:54,042 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-23 21:01:54,044 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-23 21:01:54,046 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-23 21:01:54,047 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-23 21:01:54,049 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-23 21:01:54,051 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-23 21:01:54,052 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-23 21:01:54,054 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-23 21:01:54,055 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-23 21:01:55,489 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-23 21:01:55,493 - root - ERROR - Error in run_scenario: Execution failed on sql '
            SELECT * 
            FROM well_pads 
            WHERE scenario_id = ?
            ': no such table: well_pads
2025-01-23 21:02:14,578 - root - INFO - Well pads table populated successfully.
2025-01-23 21:15:53,724 - root - DEBUG - Toolbar setup completed
2025-01-23 21:15:53,726 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:15:53,728 - root - DEBUG - Table setup completed
2025-01-23 21:15:53,728 - root - DEBUG - UI setup completed successfully
2025-01-23 21:15:53,730 - root - DEBUG - Signal connections established
2025-01-23 21:15:53,798 - root - INFO - Well pads table populated successfully.
2025-01-23 21:15:53,799 - root - INFO - Initial data loaded successfully.
2025-01-23 21:15:53,799 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:17:00,955 - root - DEBUG - Toolbar setup completed
2025-01-23 21:17:00,956 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:17:00,959 - root - DEBUG - Table setup completed
2025-01-23 21:17:00,959 - root - DEBUG - UI setup completed successfully
2025-01-23 21:17:00,960 - root - DEBUG - Signal connections established
2025-01-23 21:17:01,042 - root - INFO - Well pads table populated successfully.
2025-01-23 21:17:01,043 - root - INFO - Initial data loaded successfully.
2025-01-23 21:17:01,043 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:49:10,273 - root - DEBUG - Toolbar setup completed
2025-01-23 21:49:10,276 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:49:10,287 - root - DEBUG - Table setup completed
2025-01-23 21:49:10,287 - root - DEBUG - UI setup completed successfully
2025-01-23 21:49:10,289 - root - DEBUG - Signal connections established
2025-01-23 21:49:10,386 - root - INFO - Well pads table populated successfully.
2025-01-23 21:49:10,386 - root - INFO - Initial data loaded successfully.
2025-01-23 21:49:10,387 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:58:12,998 - root - DEBUG - Toolbar setup completed
2025-01-23 21:58:12,999 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 21:58:13,001 - root - DEBUG - Table setup completed
2025-01-23 21:58:13,002 - root - DEBUG - UI setup completed successfully
2025-01-23 21:58:13,003 - root - DEBUG - Signal connections established
2025-01-23 21:58:13,081 - root - INFO - Well pads table populated successfully.
2025-01-23 21:58:13,082 - root - INFO - Initial data loaded successfully.
2025-01-23 21:58:13,082 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 21:58:17,753 - root - INFO - No modifications to update
2025-01-23 22:01:16,365 - root - DEBUG - Toolbar setup completed
2025-01-23 22:01:16,367 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:01:16,369 - root - DEBUG - Table setup completed
2025-01-23 22:01:16,369 - root - DEBUG - UI setup completed successfully
2025-01-23 22:01:16,370 - root - DEBUG - Signal connections established
2025-01-23 22:01:16,437 - root - INFO - Well pads table populated successfully.
2025-01-23 22:01:16,437 - root - INFO - Initial data loaded successfully.
2025-01-23 22:01:16,437 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:01:17,810 - root - ERROR - Error in scenario_pud_select: 'PUDWellSelector' object has no attribute 'add_all'
2025-01-23 22:02:56,741 - root - DEBUG - Toolbar setup completed
2025-01-23 22:02:56,742 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:02:56,744 - root - DEBUG - Table setup completed
2025-01-23 22:02:56,745 - root - DEBUG - UI setup completed successfully
2025-01-23 22:02:56,746 - root - DEBUG - Signal connections established
2025-01-23 22:02:56,819 - root - INFO - Well pads table populated successfully.
2025-01-23 22:02:56,819 - root - INFO - Initial data loaded successfully.
2025-01-23 22:02:56,819 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:02:58,378 - root - ERROR - Error in scenario_pud_select: 'PUDWellSelector' object has no attribute 'add_all'
2025-01-23 22:04:33,069 - root - DEBUG - Toolbar setup completed
2025-01-23 22:04:33,070 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:04:33,072 - root - DEBUG - Table setup completed
2025-01-23 22:04:33,072 - root - DEBUG - UI setup completed successfully
2025-01-23 22:04:33,074 - root - DEBUG - Signal connections established
2025-01-23 22:04:33,145 - root - INFO - Well pads table populated successfully.
2025-01-23 22:04:33,145 - root - INFO - Initial data loaded successfully.
2025-01-23 22:04:33,145 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:08:24,769 - root - DEBUG - Toolbar setup completed
2025-01-23 22:08:24,771 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:08:24,773 - root - DEBUG - Table setup completed
2025-01-23 22:08:24,773 - root - DEBUG - UI setup completed successfully
2025-01-23 22:08:24,774 - root - DEBUG - Signal connections established
2025-01-23 22:08:24,838 - root - INFO - Well pads table populated successfully.
2025-01-23 22:08:24,839 - root - INFO - Initial data loaded successfully.
2025-01-23 22:08:24,839 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:13:19,323 - root - DEBUG - Toolbar setup completed
2025-01-23 22:13:19,325 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:13:19,327 - root - DEBUG - Table setup completed
2025-01-23 22:13:19,327 - root - DEBUG - UI setup completed successfully
2025-01-23 22:13:19,329 - root - DEBUG - Signal connections established
2025-01-23 22:13:19,400 - root - INFO - Well pads table populated successfully.
2025-01-23 22:13:19,400 - root - INFO - Initial data loaded successfully.
2025-01-23 22:13:19,400 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:13:48,731 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg1
2025-01-23 22:13:48,739 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg1
2025-01-23 22:13:48,745 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg1
2025-01-23 22:13:48,752 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg1
2025-01-23 22:13:48,759 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg1
2025-01-23 22:13:48,767 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg1
2025-01-23 22:13:48,773 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg1
2025-01-23 22:13:48,781 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg1
2025-01-23 22:13:48,786 - root - INFO - Updating well pad for UWI: WP5L1Side1Leg1
2025-01-23 22:13:48,793 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg2
2025-01-23 22:13:48,800 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg2
2025-01-23 22:13:48,806 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg2
2025-01-23 22:13:48,812 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg2
2025-01-23 22:13:48,820 - root - INFO - Updating well pad for UWI: WP5L1Side1Leg2
2025-01-23 22:13:48,827 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg2
2025-01-23 22:13:48,834 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg2
2025-01-23 22:13:48,841 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg2
2025-01-23 22:13:48,847 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg2
2025-01-23 22:13:48,854 - root - INFO - Updating well pad for UWI: WP7L1Side1Leg3
2025-01-23 22:13:48,861 - root - INFO - Updating well pad for UWI: WP2L1Side1Leg3
2025-01-23 22:13:48,867 - root - INFO - Updating well pad for UWI: WP8L1Side1Leg3
2025-01-23 22:13:48,874 - root - INFO - Updating well pad for UWI: WP9L1Side1Leg3
2025-01-23 22:13:48,880 - root - INFO - Updating well pad for UWI: WP5L1Side1Leg3
2025-01-23 22:13:48,887 - root - INFO - Updating well pad for UWI: WP6L1Side1Leg3
2025-01-23 22:13:48,893 - root - INFO - Updating well pad for UWI: WP4L1Side1Leg3
2025-01-23 22:13:48,899 - root - INFO - Updating well pad for UWI: WP3L1Side1Leg3
2025-01-23 22:13:48,904 - root - INFO - Updating well pad for UWI: WP1L1Side1Leg3
2025-01-23 22:13:48,911 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg1
2025-01-23 22:13:48,916 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP3L1Side1Leg1
2025-01-23 22:13:48,917 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg2
2025-01-23 22:13:48,921 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP6L1Side1Leg2
2025-01-23 22:13:48,922 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg1
2025-01-23 22:13:48,927 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP4L1Side1Leg1
2025-01-23 22:13:48,927 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg2
2025-01-23 22:13:48,932 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP9L1Side1Leg2
2025-01-23 22:13:48,932 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg3
2025-01-23 22:13:48,938 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP7L1Side1Leg3
2025-01-23 22:13:48,938 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg3
2025-01-23 22:13:48,944 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP2L1Side1Leg3
2025-01-23 22:13:48,944 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg1
2025-01-23 22:13:48,949 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP1L1Side1Leg1
2025-01-23 22:13:48,949 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg3
2025-01-23 22:13:48,954 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP8L1Side1Leg3
2025-01-23 22:13:48,954 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg2
2025-01-23 22:13:48,959 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP4L1Side1Leg2
2025-01-23 22:13:48,959 - root - INFO - Removing well pad for UWI: 840300020072475
2025-01-23 22:13:48,964 - root - INFO - Deleted pad: Scenario ID=2, UWI=840300020072475
2025-01-23 22:13:48,964 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg2
2025-01-23 22:13:48,969 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP1L1Side1Leg2
2025-01-23 22:13:48,969 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg3
2025-01-23 22:13:48,974 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP9L1Side1Leg3
2025-01-23 22:13:48,975 - root - INFO - Removing well pad for UWI: 840300020070923
2025-01-23 22:13:48,979 - root - INFO - Deleted pad: Scenario ID=2, UWI=840300020070923
2025-01-23 22:13:48,979 - root - INFO - Removing well pad for UWI: 840300020072469
2025-01-23 22:13:48,985 - root - INFO - Deleted pad: Scenario ID=2, UWI=840300020072469
2025-01-23 22:13:48,985 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg1
2025-01-23 22:13:48,990 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP2L1Side1Leg1
2025-01-23 22:13:48,990 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg1
2025-01-23 22:13:48,995 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP6L1Side1Leg1
2025-01-23 22:13:48,995 - root - INFO - Removing well pad for UWI: WP9L1Side1Leg1
2025-01-23 22:13:49,000 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP9L1Side1Leg1
2025-01-23 22:13:49,000 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg1
2025-01-23 22:13:49,007 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP8L1Side1Leg1
2025-01-23 22:13:49,007 - root - INFO - Removing well pad for UWI: 840300020072473
2025-01-23 22:13:49,011 - root - INFO - Deleted pad: Scenario ID=2, UWI=840300020072473
2025-01-23 22:13:49,012 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg1
2025-01-23 22:13:49,017 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP7L1Side1Leg1
2025-01-23 22:13:49,017 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg2
2025-01-23 22:13:49,023 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP5L1Side1Leg2
2025-01-23 22:13:49,024 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg3
2025-01-23 22:13:49,028 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP5L1Side1Leg3
2025-01-23 22:13:49,028 - root - INFO - Removing well pad for UWI: WP6L1Side1Leg3
2025-01-23 22:13:49,033 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP6L1Side1Leg3
2025-01-23 22:13:49,033 - root - INFO - Removing well pad for UWI: 840300020070906
2025-01-23 22:13:49,038 - root - INFO - Deleted pad: Scenario ID=2, UWI=840300020070906
2025-01-23 22:13:49,038 - root - INFO - Removing well pad for UWI: WP7L1Side1Leg2
2025-01-23 22:13:49,044 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP7L1Side1Leg2
2025-01-23 22:13:49,044 - root - INFO - Removing well pad for UWI: WP2L1Side1Leg2
2025-01-23 22:13:49,050 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP2L1Side1Leg2
2025-01-23 22:13:49,050 - root - INFO - Removing well pad for UWI: 840300020069956
2025-01-23 22:13:49,054 - root - INFO - Deleted pad: Scenario ID=2, UWI=840300020069956
2025-01-23 22:13:49,055 - root - INFO - Removing well pad for UWI: WP4L1Side1Leg3
2025-01-23 22:13:49,060 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP4L1Side1Leg3
2025-01-23 22:13:49,060 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg2
2025-01-23 22:13:49,066 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP3L1Side1Leg2
2025-01-23 22:13:49,066 - root - INFO - Removing well pad for UWI: WP8L1Side1Leg2
2025-01-23 22:13:49,070 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP8L1Side1Leg2
2025-01-23 22:13:49,070 - root - INFO - Removing well pad for UWI: WP3L1Side1Leg3
2025-01-23 22:13:49,076 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP3L1Side1Leg3
2025-01-23 22:13:49,076 - root - INFO - Removing well pad for UWI: WP1L1Side1Leg3
2025-01-23 22:13:49,080 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP1L1Side1Leg3
2025-01-23 22:13:49,080 - root - INFO - Removing well pad for UWI: WP5L1Side1Leg1
2025-01-23 22:13:49,085 - root - INFO - Deleted pad: Scenario ID=2, UWI=WP5L1Side1Leg1
2025-01-23 22:13:52,098 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-23 22:13:52,142 - root - WARNING - No wells found for this scenario.
2025-01-23 22:13:53,195 - root - INFO - Well pads table populated successfully.
2025-01-23 22:14:44,939 - root - INFO - Scenario 'Second' added successfully with ID 3. Active: 0
2025-01-23 22:14:44,952 - root - INFO - Scenario changed to: Second
2025-01-23 22:14:44,953 - root - DEBUG - UI updated for scenario: Second
2025-01-23 22:14:44,955 - root - INFO - Well pads table populated successfully.
2025-01-23 22:14:45,007 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-23 22:14:45,014 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-23 22:14:45,021 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-23 22:14:45,026 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-23 22:14:45,033 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-23 22:14:45,039 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-23 22:14:45,046 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-23 22:14:45,053 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-23 22:14:45,059 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-23 22:14:45,066 - root - INFO - Inserting new well pad for UWI: 840300020072475
2025-01-23 22:14:45,073 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-23 22:14:45,080 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-23 22:14:45,086 - root - INFO - Inserting new well pad for UWI: 840300020070923
2025-01-23 22:14:45,092 - root - INFO - Inserting new well pad for UWI: 840300020072469
2025-01-23 22:14:45,099 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-23 22:14:45,105 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-23 22:14:45,110 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-23 22:14:45,116 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-23 22:14:45,122 - root - INFO - Inserting new well pad for UWI: 840300020072473
2025-01-23 22:14:45,130 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-23 22:14:45,135 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-23 22:14:45,141 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-23 22:14:45,148 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-23 22:14:45,154 - root - INFO - Inserting new well pad for UWI: 840300020070906
2025-01-23 22:14:45,159 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-23 22:14:45,164 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-23 22:14:45,170 - root - INFO - Inserting new well pad for UWI: 840300020069956
2025-01-23 22:14:45,176 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-23 22:14:45,182 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-23 22:14:45,187 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-23 22:14:45,194 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-23 22:14:45,199 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-23 22:14:45,205 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-23 22:14:46,637 - root - INFO - Scenario 3 updated with 33 wells.
2025-01-23 22:14:46,721 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:14:48,213 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:14:49,769 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:14:51,179 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:14:52,691 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:14:54,224 - root - INFO - Processed 5/33 wells
2025-01-23 22:14:54,224 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:14:55,758 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:14:57,219 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:14:58,733 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:00,210 - root - INFO - Processing well 840300020072475 with UWI: 840300000505415
2025-01-23 22:15:01,695 - root - INFO - Processed 10/33 wells
2025-01-23 22:15:01,696 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:03,127 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:15:04,610 - root - INFO - Processing well 840300020070923 with UWI: 840300000505415
2025-01-23 22:15:06,080 - root - INFO - Processing well 840300020072469 with UWI: 840300000505415
2025-01-23 22:15:07,636 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:15:09,129 - root - INFO - Processed 15/33 wells
2025-01-23 22:15:09,130 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:15:10,622 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:15:12,131 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:15:13,953 - root - INFO - Processing well 840300020072473 with UWI: 840300000505415
2025-01-23 22:15:15,546 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:15:17,062 - root - INFO - Processed 20/33 wells
2025-01-23 22:15:17,062 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:18,711 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:15:20,262 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:15:21,819 - root - INFO - Processing well 840300020070906 with UWI: 840300000505415
2025-01-23 22:15:23,321 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:24,822 - root - INFO - Processed 25/33 wells
2025-01-23 22:15:24,823 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:26,303 - root - INFO - Processing well 840300020069956 with UWI: 840300000505415
2025-01-23 22:15:27,695 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:15:29,162 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:30,700 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-23 22:15:32,196 - root - INFO - Processed 30/33 wells
2025-01-23 22:15:32,197 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:15:33,716 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-23 22:15:35,149 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-23 22:15:39,018 - root - INFO - Well pads table populated successfully.
2025-01-23 22:16:54,666 - root - INFO - Dialog closed successfully
2025-01-23 22:21:33,915 - root - DEBUG - Toolbar setup completed
2025-01-23 22:21:33,915 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:21:33,917 - root - DEBUG - Table setup completed
2025-01-23 22:21:33,918 - root - DEBUG - UI setup completed successfully
2025-01-23 22:21:33,919 - root - DEBUG - Signal connections established
2025-01-23 22:21:33,922 - root - INFO - Scenario changed to: Second
2025-01-23 22:21:33,923 - root - DEBUG - UI updated for scenario: Second
2025-01-23 22:21:34,080 - root - INFO - Well pads table populated successfully.
2025-01-23 22:21:34,144 - root - INFO - Well pads table populated successfully.
2025-01-23 22:21:34,144 - root - INFO - Initial data loaded successfully.
2025-01-23 22:21:34,144 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:22:37,189 - root - INFO - Dialog closed successfully
2025-01-23 22:24:14,682 - root - DEBUG - Toolbar setup completed
2025-01-23 22:24:14,683 - root - DEBUG - Scenario dropdown setup completed
2025-01-23 22:24:14,684 - root - DEBUG - Table setup completed
2025-01-23 22:24:14,684 - root - DEBUG - UI setup completed successfully
2025-01-23 22:24:14,686 - root - DEBUG - Signal connections established
2025-01-23 22:24:14,688 - root - INFO - Scenario changed to: Second
2025-01-23 22:24:14,689 - root - DEBUG - UI updated for scenario: Second
2025-01-23 22:24:14,747 - root - INFO - Well pads table populated successfully.
2025-01-23 22:24:14,811 - root - INFO - Well pads table populated successfully.
2025-01-23 22:24:14,811 - root - INFO - Initial data loaded successfully.
2025-01-23 22:24:14,812 - root - INFO - PUDPropertiesDialog initialized
2025-01-23 22:24:17,626 - root - INFO - Dialog closed successfully
2025-01-24 09:45:27,241 - root - DEBUG - Toolbar setup completed
2025-01-24 09:45:27,244 - root - DEBUG - Scenario dropdown setup completed
2025-01-24 09:45:27,248 - root - DEBUG - Table setup completed
2025-01-24 09:45:27,248 - root - DEBUG - UI setup completed successfully
2025-01-24 09:45:27,250 - root - DEBUG - Signal connections established
2025-01-24 09:45:27,255 - root - INFO - Scenario changed to: Second
2025-01-24 09:45:27,256 - root - DEBUG - UI updated for scenario: Second
2025-01-24 09:45:27,342 - root - INFO - Well pads table populated successfully.
2025-01-24 09:45:27,407 - root - INFO - Well pads table populated successfully.
2025-01-24 09:45:27,407 - root - INFO - Initial data loaded successfully.
2025-01-24 09:45:27,407 - root - INFO - PUDPropertiesDialog initialized
2025-01-24 09:45:32,288 - root - INFO - Dialog closed successfully
2025-01-24 09:45:38,702 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-24 12:40:42,878 - root - DEBUG - Toolbar setup completed
2025-01-24 12:40:42,881 - root - DEBUG - Scenario dropdown setup completed
2025-01-24 12:40:42,884 - root - DEBUG - Table setup completed
2025-01-24 12:40:42,884 - root - DEBUG - UI setup completed successfully
2025-01-24 12:40:42,886 - root - DEBUG - Signal connections established
2025-01-24 12:40:42,888 - root - INFO - No scenarios to load.
2025-01-24 12:40:42,888 - root - INFO - PUDPropertiesDialog initialized
2025-01-24 12:40:48,131 - root - INFO - Dialog closed successfully
2025-01-24 12:40:57,802 - root - DEBUG - Toolbar setup completed
2025-01-24 12:40:57,802 - root - DEBUG - Scenario dropdown setup completed
2025-01-24 12:40:57,803 - root - DEBUG - Table setup completed
2025-01-24 12:40:57,804 - root - DEBUG - UI setup completed successfully
2025-01-24 12:40:57,805 - root - DEBUG - Signal connections established
2025-01-24 12:40:57,808 - root - INFO - No scenarios to load.
2025-01-24 12:40:57,809 - root - INFO - PUDPropertiesDialog initialized
2025-01-24 12:41:32,178 - root - INFO - Scenario 'First' added successfully with ID 2. Active: 0
2025-01-24 12:41:32,232 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-24 12:41:32,238 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-24 12:41:32,245 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-24 12:41:32,251 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-24 12:41:32,258 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-24 12:41:32,265 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-24 12:41:32,271 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-24 12:41:32,277 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-24 12:41:32,284 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-24 12:41:32,291 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-24 12:41:32,298 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-24 12:41:32,305 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-24 12:41:32,312 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-24 12:41:32,317 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-24 12:41:32,324 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-24 12:41:32,331 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-24 12:41:32,337 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-24 12:41:32,343 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-24 12:41:32,350 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-24 12:41:32,360 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-24 12:41:32,368 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-24 12:41:32,375 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-24 12:41:32,382 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-24 12:41:32,391 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-24 12:41:32,399 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-24 12:41:32,406 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-24 12:41:32,413 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-24 12:41:33,994 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-24 12:41:34,061 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:34,163 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-24 12:41:43,981 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:44,833 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:45,621 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:46,522 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:47,341 - root - INFO - Processed 5/27 wells
2025-01-24 12:41:47,342 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:48,106 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:48,860 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:49,605 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-24 12:41:50,335 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:51,096 - root - INFO - Processed 10/27 wells
2025-01-24 12:41:51,097 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:51,834 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:52,576 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:53,312 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:54,050 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:54,793 - root - INFO - Processed 15/27 wells
2025-01-24 12:41:54,795 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:55,534 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:56,263 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-24 12:41:57,004 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:41:57,742 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:41:58,497 - root - INFO - Processed 20/27 wells
2025-01-24 12:41:58,499 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:41:59,486 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:42:00,854 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:42:01,896 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:42:02,789 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:42:03,580 - root - INFO - Processed 25/27 wells
2025-01-24 12:42:03,582 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:42:04,415 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-24 12:42:29,977 - root - INFO - Well pads table populated successfully.
2025-01-24 12:43:05,799 - root - INFO - Dialog closed successfully
2025-01-24 13:11:02,435 - root - DEBUG - Toolbar setup completed
2025-01-24 13:11:02,437 - root - DEBUG - Scenario dropdown setup completed
2025-01-24 13:11:02,441 - root - DEBUG - Table setup completed
2025-01-24 13:11:02,441 - root - DEBUG - UI setup completed successfully
2025-01-24 13:11:02,442 - root - DEBUG - Signal connections established
2025-01-24 13:11:02,501 - root - INFO - Well pads table populated successfully.
2025-01-24 13:11:02,501 - root - INFO - Initial data loaded successfully.
2025-01-24 13:11:02,501 - root - INFO - PUDPropertiesDialog initialized
2025-01-24 13:11:06,451 - root - INFO - Dialog closed successfully
2025-01-30 12:31:04,069 - root - DEBUG - Toolbar setup completed
2025-01-30 12:31:04,071 - root - DEBUG - Scenario dropdown setup completed
2025-01-30 12:31:04,074 - root - DEBUG - Table setup completed
2025-01-30 12:31:04,074 - root - DEBUG - UI setup completed successfully
2025-01-30 12:31:04,075 - root - DEBUG - Signal connections established
2025-01-30 12:31:04,077 - root - INFO - No scenarios to load.
2025-01-30 12:31:04,077 - root - INFO - PUDPropertiesDialog initialized
2025-01-30 12:31:15,672 - root - INFO - Dialog closed successfully
2025-01-30 12:31:36,704 - root - DEBUG - Toolbar setup completed
2025-01-30 12:31:36,705 - root - DEBUG - Scenario dropdown setup completed
2025-01-30 12:31:36,706 - root - DEBUG - Table setup completed
2025-01-30 12:31:36,706 - root - DEBUG - UI setup completed successfully
2025-01-30 12:31:36,707 - root - DEBUG - Signal connections established
2025-01-30 12:31:36,713 - root - INFO - No scenarios to load.
2025-01-30 12:31:36,714 - root - INFO - PUDPropertiesDialog initialized
2025-01-30 12:31:50,418 - root - INFO - Scenario 'First' added successfully with ID 2. Active: 0
2025-01-30 12:31:50,464 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-30 12:31:50,469 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-30 12:31:50,476 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-30 12:31:50,483 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-30 12:31:50,490 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-30 12:31:50,496 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-30 12:31:50,504 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-30 12:31:50,511 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-30 12:31:50,516 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-30 12:31:50,524 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-30 12:31:50,531 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-30 12:31:50,538 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-30 12:31:50,545 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-30 12:31:50,552 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-30 12:31:50,560 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-30 12:31:50,566 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-30 12:31:50,573 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-30 12:31:50,580 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-30 12:31:50,587 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-30 12:31:50,593 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-30 12:31:50,600 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-30 12:31:50,606 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-30 12:31:50,612 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-30 12:31:50,619 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-30 12:31:50,625 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-30 12:31:50,630 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-30 12:31:50,638 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-30 12:31:51,853 - root - INFO - Scenario 2 updated with 27 wells.
2025-01-30 12:31:51,920 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:52,250 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:52,525 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:52,808 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:53,090 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:53,364 - root - INFO - Processed 5/27 wells
2025-01-30 12:31:53,365 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:53,648 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:53,927 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:54,214 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:54,495 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:54,773 - root - INFO - Processed 10/27 wells
2025-01-30 12:31:54,774 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:55,060 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:55,335 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:55,607 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:55,882 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:56,167 - root - INFO - Processed 15/27 wells
2025-01-30 12:31:56,167 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:56,450 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:56,741 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:57,022 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-30 12:31:57,302 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:57,572 - root - INFO - Processed 20/27 wells
2025-01-30 12:31:57,573 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:57,848 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:58,131 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:58,419 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:58,703 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-30 12:31:58,983 - root - INFO - Processed 25/27 wells
2025-01-30 12:31:58,984 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:31:59,295 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-30 12:32:01,033 - root - INFO - Well pads table populated successfully.
2025-01-30 12:32:06,633 - root - INFO - Dialog closed successfully
2025-01-31 15:11:35,764 - root - DEBUG - Toolbar setup completed
2025-01-31 15:11:35,766 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 15:11:35,770 - root - DEBUG - Table setup completed
2025-01-31 15:11:35,770 - root - DEBUG - UI setup completed successfully
2025-01-31 15:11:35,771 - root - DEBUG - Signal connections established
2025-01-31 15:11:35,831 - root - INFO - Well pads table populated successfully.
2025-01-31 15:11:35,831 - root - INFO - Initial data loaded successfully.
2025-01-31 15:11:35,831 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 15:11:43,371 - root - INFO - Scenario changed to: Test
2025-01-31 15:11:43,372 - root - DEBUG - UI updated for scenario: Test
2025-01-31 15:11:43,374 - root - INFO - Well pads table populated successfully.
2025-01-31 15:11:45,103 - root - INFO - Scenario changed to: First
2025-01-31 15:11:45,104 - root - DEBUG - UI updated for scenario: First
2025-01-31 15:11:45,160 - root - INFO - Well pads table populated successfully.
2025-01-31 15:11:56,158 - root - INFO - Scenario changed to: Test
2025-01-31 15:11:56,160 - root - DEBUG - UI updated for scenario: Test
2025-01-31 15:11:56,162 - root - INFO - Well pads table populated successfully.
2025-01-31 15:11:58,276 - root - INFO - Scenario changed to: First
2025-01-31 15:11:58,277 - root - DEBUG - UI updated for scenario: First
2025-01-31 15:11:58,331 - root - INFO - Well pads table populated successfully.
2025-01-31 15:14:35,038 - root - INFO - Dialog closed successfully
2025-01-31 15:14:38,286 - root - DEBUG - Toolbar setup completed
2025-01-31 15:14:38,286 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 15:14:38,288 - root - DEBUG - Table setup completed
2025-01-31 15:14:38,288 - root - DEBUG - UI setup completed successfully
2025-01-31 15:14:38,288 - root - DEBUG - Signal connections established
2025-01-31 15:14:38,357 - root - INFO - Well pads table populated successfully.
2025-01-31 15:14:38,357 - root - INFO - Initial data loaded successfully.
2025-01-31 15:14:38,358 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 15:25:07,195 - root - DEBUG - Toolbar setup completed
2025-01-31 15:25:07,196 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 15:25:07,199 - root - DEBUG - Table setup completed
2025-01-31 15:25:07,199 - root - DEBUG - UI setup completed successfully
2025-01-31 15:25:07,200 - root - DEBUG - Signal connections established
2025-01-31 15:25:07,259 - root - INFO - Well pads table populated successfully.
2025-01-31 15:25:07,259 - root - INFO - Initial data loaded successfully.
2025-01-31 15:25:07,259 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 15:29:16,003 - root - DEBUG - Toolbar setup completed
2025-01-31 15:29:16,004 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 15:29:16,007 - root - DEBUG - Table setup completed
2025-01-31 15:29:16,007 - root - DEBUG - UI setup completed successfully
2025-01-31 15:29:16,008 - root - DEBUG - Signal connections established
2025-01-31 15:29:16,068 - root - INFO - Well pads table populated successfully.
2025-01-31 15:29:16,069 - root - INFO - Initial data loaded successfully.
2025-01-31 15:29:16,069 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 15:29:44,579 - root - INFO - Dialog closed successfully
2025-01-31 15:53:03,124 - root - DEBUG - Toolbar setup completed
2025-01-31 15:53:03,125 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 15:53:03,126 - root - DEBUG - Table setup completed
2025-01-31 15:53:03,127 - root - DEBUG - UI setup completed successfully
2025-01-31 15:53:03,128 - root - DEBUG - Signal connections established
2025-01-31 15:53:03,205 - root - INFO - Well pads table populated successfully.
2025-01-31 15:53:03,205 - root - INFO - Initial data loaded successfully.
2025-01-31 15:53:03,205 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 15:53:20,304 - root - INFO - Scenario 'Fifth' added successfully with ID 11. Active: 0
2025-01-31 15:53:20,317 - root - INFO - Scenario changed to: Fifth
2025-01-31 15:53:20,318 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 15:53:20,321 - root - INFO - Well pads table populated successfully.
2025-01-31 15:53:20,359 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 15:53:20,366 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 15:53:20,373 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 15:53:20,380 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 15:53:20,386 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 15:53:20,394 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 15:53:20,401 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 15:53:20,408 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 15:53:20,415 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 15:53:20,421 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 15:53:20,428 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 15:53:20,434 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 15:53:20,441 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 15:53:20,448 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 15:53:20,455 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 15:53:20,463 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 15:53:20,468 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 15:53:20,474 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 15:53:20,480 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 15:53:20,487 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 15:53:20,492 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 15:53:20,498 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 15:53:20,503 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 15:53:20,510 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 15:53:20,516 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 15:53:20,521 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 15:53:20,527 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 15:53:22,210 - root - INFO - Scenario 11 updated with 27 wells.
2025-01-31 15:53:22,285 - root - INFO - Processing well WP8L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,306 - root - ERROR - Error processing well WP8L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,307 - root - INFO - Processing well WP3L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,323 - root - ERROR - Error processing well WP3L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,324 - root - INFO - Processing well WP2L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,336 - root - ERROR - Error processing well WP2L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,336 - root - INFO - Processing well WP7L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,350 - root - ERROR - Error processing well WP7L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,351 - root - INFO - Processing well WP3L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,364 - root - ERROR - Error processing well WP3L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,364 - root - INFO - Processing well WP6L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,377 - root - ERROR - Error processing well WP6L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,378 - root - INFO - Processing well WP8L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,391 - root - ERROR - Error processing well WP8L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,392 - root - INFO - Processing well WP3L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,404 - root - ERROR - Error processing well WP3L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,404 - root - INFO - Processing well WP7L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,419 - root - ERROR - Error processing well WP7L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,420 - root - INFO - Processing well WP5L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,435 - root - ERROR - Error processing well WP5L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,435 - root - INFO - Processing well WP9L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,448 - root - ERROR - Error processing well WP9L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,448 - root - INFO - Processing well WP1L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,462 - root - ERROR - Error processing well WP1L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,462 - root - INFO - Processing well WP2L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,474 - root - ERROR - Error processing well WP2L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,475 - root - INFO - Processing well WP7L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,486 - root - ERROR - Error processing well WP7L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,487 - root - INFO - Processing well WP9L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,498 - root - ERROR - Error processing well WP9L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,499 - root - INFO - Processing well WP6L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,510 - root - ERROR - Error processing well WP6L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,512 - root - INFO - Processing well WP5L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,524 - root - ERROR - Error processing well WP5L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,524 - root - INFO - Processing well WP6L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,536 - root - ERROR - Error processing well WP6L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,536 - root - INFO - Processing well WP4L1Side1Leg1 with Saved DC: Art
2025-01-31 15:53:22,548 - root - ERROR - Error processing well WP4L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,549 - root - INFO - Processing well WP9L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,560 - root - ERROR - Error processing well WP9L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,561 - root - INFO - Processing well WP1L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,574 - root - ERROR - Error processing well WP1L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,574 - root - INFO - Processing well WP1L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,587 - root - ERROR - Error processing well WP1L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,588 - root - INFO - Processing well WP2L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,601 - root - ERROR - Error processing well WP2L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,602 - root - INFO - Processing well WP5L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,615 - root - ERROR - Error processing well WP5L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,616 - root - INFO - Processing well WP4L1Side1Leg3 with Saved DC: Art
2025-01-31 15:53:22,630 - root - ERROR - Error processing well WP4L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,631 - root - INFO - Processing well WP4L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,646 - root - ERROR - Error processing well WP4L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:53:22,646 - root - INFO - Processing well WP8L1Side1Leg2 with Saved DC: Art
2025-01-31 15:53:22,660 - root - ERROR - Error processing well WP8L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 15:54:01,685 - root - INFO - Well pads table populated successfully.
2025-01-31 15:54:13,617 - root - INFO - Widget change tracked - Row: 1, Column: 1, Value: 2025-03-30
2025-01-31 15:55:20,602 - root - INFO - Updating scenario with 2 modified rows
2025-01-31 15:55:20,616 - root - ERROR - Error updating row 1: 'DatabaseManager' object has no attribute 'delete_model_properties_for_UWI'
2025-01-31 15:55:20,625 - root - ERROR - Error updating row 4: 'DatabaseManager' object has no attribute 'delete_model_properties_for_UWI'
2025-01-31 15:55:34,831 - root - INFO - Well pads table populated successfully.
2025-01-31 15:55:47,688 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 15:55:47,690 - root - ERROR - Error updating row 1: 'DatabaseManager' object has no attribute 'delete_model_properties_for_UWI'
2025-01-31 15:55:49,104 - root - INFO - Well pads table populated successfully.
2025-01-31 15:56:39,190 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 15:56:39,192 - root - ERROR - Error updating row 1: 'DatabaseManager' object has no attribute 'delete_model_properties_for_UWI'
2025-01-31 15:56:41,004 - root - INFO - Well pads table populated successfully.
2025-01-31 16:00:54,866 - root - DEBUG - Toolbar setup completed
2025-01-31 16:00:54,867 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:00:54,869 - root - DEBUG - Table setup completed
2025-01-31 16:00:54,870 - root - DEBUG - UI setup completed successfully
2025-01-31 16:00:54,871 - root - DEBUG - Signal connections established
2025-01-31 16:00:54,874 - root - INFO - Scenario changed to: Fifth
2025-01-31 16:00:54,875 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 16:00:54,914 - root - INFO - Well pads table populated successfully.
2025-01-31 16:00:54,954 - root - INFO - Well pads table populated successfully.
2025-01-31 16:00:54,954 - root - INFO - Initial data loaded successfully.
2025-01-31 16:00:54,954 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:00:58,373 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 16:00:58,389 - root - ERROR - Error updating row 1: 'DatabaseManager' object has no attribute 'get_well_pad_data'
2025-01-31 16:04:02,065 - root - DEBUG - Toolbar setup completed
2025-01-31 16:04:02,066 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:04:02,068 - root - DEBUG - Table setup completed
2025-01-31 16:04:02,068 - root - DEBUG - UI setup completed successfully
2025-01-31 16:04:02,069 - root - DEBUG - Signal connections established
2025-01-31 16:04:02,072 - root - INFO - Scenario changed to: Fifth
2025-01-31 16:04:02,073 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 16:04:02,107 - root - INFO - Well pads table populated successfully.
2025-01-31 16:04:02,266 - root - INFO - Well pads table populated successfully.
2025-01-31 16:04:02,266 - root - INFO - Initial data loaded successfully.
2025-01-31 16:04:02,266 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:04:05,518 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 16:04:05,530 - root - ERROR - Error updating row 1: "['scenario_id', 'max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:04:18,507 - root - INFO - Well pads table populated successfully.
2025-01-31 16:11:41,555 - root - DEBUG - Toolbar setup completed
2025-01-31 16:11:41,556 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:11:41,558 - root - DEBUG - Table setup completed
2025-01-31 16:11:41,558 - root - DEBUG - UI setup completed successfully
2025-01-31 16:11:41,559 - root - DEBUG - Signal connections established
2025-01-31 16:11:41,563 - root - INFO - Scenario changed to: Fifth
2025-01-31 16:11:41,564 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 16:11:41,605 - root - INFO - Well pads table populated successfully.
2025-01-31 16:11:41,642 - root - INFO - Well pads table populated successfully.
2025-01-31 16:11:41,642 - root - INFO - Initial data loaded successfully.
2025-01-31 16:11:41,642 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:11:46,918 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 16:11:46,930 - root - ERROR - Error updating row 1: "['scenario_id', 'max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:11:48,472 - root - INFO - Well pads table populated successfully.
2025-01-31 16:16:41,073 - root - DEBUG - Toolbar setup completed
2025-01-31 16:16:41,075 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:16:41,076 - root - DEBUG - Table setup completed
2025-01-31 16:16:41,077 - root - DEBUG - UI setup completed successfully
2025-01-31 16:16:41,078 - root - DEBUG - Signal connections established
2025-01-31 16:16:41,081 - root - INFO - Scenario changed to: Fifth
2025-01-31 16:16:41,082 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 16:16:41,125 - root - INFO - Well pads table populated successfully.
2025-01-31 16:16:41,161 - root - INFO - Well pads table populated successfully.
2025-01-31 16:16:41,163 - root - INFO - Initial data loaded successfully.
2025-01-31 16:16:41,163 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:17:44,940 - root - DEBUG - Toolbar setup completed
2025-01-31 16:17:44,941 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:17:44,943 - root - DEBUG - Table setup completed
2025-01-31 16:17:44,943 - root - DEBUG - UI setup completed successfully
2025-01-31 16:17:44,945 - root - DEBUG - Signal connections established
2025-01-31 16:17:44,948 - root - INFO - Scenario changed to: Fifth
2025-01-31 16:17:44,949 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 16:17:44,988 - root - INFO - Well pads table populated successfully.
2025-01-31 16:17:45,037 - root - INFO - Well pads table populated successfully.
2025-01-31 16:17:45,037 - root - INFO - Initial data loaded successfully.
2025-01-31 16:17:45,037 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:17:53,387 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 16:17:53,401 - root - ERROR - Error updating row 1: "['scenario_id', 'max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:18:01,547 - root - INFO - Well pads table populated successfully.
2025-01-31 16:22:50,066 - root - DEBUG - Toolbar setup completed
2025-01-31 16:22:50,067 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:22:50,070 - root - DEBUG - Table setup completed
2025-01-31 16:22:50,070 - root - DEBUG - UI setup completed successfully
2025-01-31 16:22:50,071 - root - DEBUG - Signal connections established
2025-01-31 16:22:50,076 - root - INFO - Scenario changed to: Fifth
2025-01-31 16:22:50,077 - root - DEBUG - UI updated for scenario: Fifth
2025-01-31 16:22:50,113 - root - INFO - Well pads table populated successfully.
2025-01-31 16:22:50,152 - root - INFO - Well pads table populated successfully.
2025-01-31 16:22:50,152 - root - INFO - Initial data loaded successfully.
2025-01-31 16:22:50,152 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:22:54,909 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 16:22:54,933 - root - ERROR - Error updating row 1: "['scenario_id', 'max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:22:56,284 - root - INFO - Well pads table populated successfully.
2025-01-31 16:26:32,244 - root - INFO - Scenario 'dfer' added successfully with ID 12. Active: 0
2025-01-31 16:26:32,257 - root - INFO - Scenario changed to: dfer
2025-01-31 16:26:32,259 - root - DEBUG - UI updated for scenario: dfer
2025-01-31 16:26:32,262 - root - INFO - Well pads table populated successfully.
2025-01-31 16:26:32,299 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 16:26:32,305 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 16:26:32,312 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 16:26:32,318 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 16:26:32,324 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 16:26:32,332 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 16:26:32,339 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 16:26:32,346 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 16:26:32,354 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 16:26:32,361 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 16:26:32,369 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 16:26:32,376 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 16:26:32,383 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 16:26:32,390 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 16:26:32,396 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 16:26:32,402 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 16:26:32,408 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 16:26:32,414 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 16:26:32,420 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 16:26:32,426 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 16:26:32,431 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 16:26:32,438 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 16:26:32,443 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 16:26:32,449 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 16:26:32,456 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 16:26:32,462 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 16:26:32,468 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 16:35:02,769 - root - INFO - Scenario 12 updated with 27 wells.
2025-01-31 16:35:02,855 - root - INFO - Processing well WP8L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:02,898 - root - ERROR - Error processing well WP8L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,899 - root - INFO - Processing well WP3L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:02,914 - root - ERROR - Error processing well WP3L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,914 - root - INFO - Processing well WP2L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:02,926 - root - ERROR - Error processing well WP2L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,926 - root - INFO - Processing well WP7L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:02,939 - root - ERROR - Error processing well WP7L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,939 - root - INFO - Processing well WP3L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:02,952 - root - ERROR - Error processing well WP3L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,953 - root - INFO - Processing well WP6L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:02,965 - root - ERROR - Error processing well WP6L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,966 - root - INFO - Processing well WP8L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:02,978 - root - ERROR - Error processing well WP8L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,978 - root - INFO - Processing well WP3L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:02,992 - root - ERROR - Error processing well WP3L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:02,993 - root - INFO - Processing well WP7L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:03,009 - root - ERROR - Error processing well WP7L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,009 - root - INFO - Processing well WP5L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:03,021 - root - ERROR - Error processing well WP5L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,022 - root - INFO - Processing well WP9L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,041 - root - ERROR - Error processing well WP9L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,041 - root - INFO - Processing well WP1L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:03,056 - root - ERROR - Error processing well WP1L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,056 - root - INFO - Processing well WP2L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:03,069 - root - ERROR - Error processing well WP2L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,070 - root - INFO - Processing well WP7L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,082 - root - ERROR - Error processing well WP7L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,082 - root - INFO - Processing well WP9L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:03,094 - root - ERROR - Error processing well WP9L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,095 - root - INFO - Processing well WP6L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:03,108 - root - ERROR - Error processing well WP6L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,108 - root - INFO - Processing well WP5L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:03,120 - root - ERROR - Error processing well WP5L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,121 - root - INFO - Processing well WP6L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:03,133 - root - ERROR - Error processing well WP6L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,133 - root - INFO - Processing well WP4L1Side1Leg1 with Saved DC: Art
2025-01-31 16:35:03,146 - root - ERROR - Error processing well WP4L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,146 - root - INFO - Processing well WP9L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:03,158 - root - ERROR - Error processing well WP9L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,159 - root - INFO - Processing well WP1L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,171 - root - ERROR - Error processing well WP1L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,171 - root - INFO - Processing well WP1L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:03,184 - root - ERROR - Error processing well WP1L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,185 - root - INFO - Processing well WP2L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,199 - root - ERROR - Error processing well WP2L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,199 - root - INFO - Processing well WP5L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,211 - root - ERROR - Error processing well WP5L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,212 - root - INFO - Processing well WP4L1Side1Leg3 with Saved DC: Art
2025-01-31 16:35:03,226 - root - ERROR - Error processing well WP4L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,226 - root - INFO - Processing well WP4L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,238 - root - ERROR - Error processing well WP4L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:03,239 - root - INFO - Processing well WP8L1Side1Leg2 with Saved DC: Art
2025-01-31 16:35:03,252 - root - ERROR - Error processing well WP8L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 16:35:05,447 - root - INFO - Well pads table populated successfully.
2025-01-31 16:36:28,484 - root - INFO - Scenario 'asdfasdfFirst' added successfully with ID 13. Active: 0
2025-01-31 16:36:28,500 - root - INFO - Scenario changed to: asdfasdfFirst
2025-01-31 16:36:28,501 - root - DEBUG - UI updated for scenario: asdfasdfFirst
2025-01-31 16:36:28,505 - root - INFO - Well pads table populated successfully.
2025-01-31 16:36:28,545 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 16:36:28,550 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 16:36:28,558 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 16:36:28,566 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 16:36:28,574 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 16:36:28,583 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 16:36:28,590 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 16:36:28,598 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 16:36:28,605 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 16:36:28,612 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 16:36:28,619 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 16:36:28,625 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 16:36:28,631 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 16:36:28,638 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 16:36:28,646 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 16:36:28,653 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 16:36:28,660 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 16:36:28,666 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 16:36:28,673 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 16:36:28,680 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 16:36:28,686 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 16:36:28,694 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 16:36:28,701 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 16:36:28,710 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 16:36:28,717 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 16:36:28,723 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 16:36:28,730 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 16:36:29,882 - root - INFO - Scenario 13 updated with 27 wells.
2025-01-31 16:36:29,956 - root - INFO - Processing well WP8L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:30,269 - root - INFO - Processing well WP3L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:30,544 - root - INFO - Processing well WP2L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:30,848 - root - INFO - Processing well WP7L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:31,134 - root - INFO - Processing well WP3L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:31,443 - root - INFO - Processed 5/27 wells
2025-01-31 16:36:31,444 - root - INFO - Processing well WP6L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:31,727 - root - INFO - Processing well WP8L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:32,038 - root - INFO - Processing well WP3L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:32,312 - root - INFO - Processing well WP7L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:32,616 - root - INFO - Processing well WP5L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:32,937 - root - INFO - Processed 10/27 wells
2025-01-31 16:36:32,938 - root - INFO - Processing well WP9L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:33,263 - root - INFO - Processing well WP1L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:33,560 - root - INFO - Processing well WP2L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:33,852 - root - INFO - Processing well WP7L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:34,216 - root - INFO - Processing well WP9L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:34,549 - root - INFO - Processed 15/27 wells
2025-01-31 16:36:34,550 - root - INFO - Processing well WP6L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:34,844 - root - INFO - Processing well WP5L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:35,137 - root - INFO - Processing well WP6L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:35,437 - root - INFO - Processing well WP4L1Side1Leg1 with UWI: 840300000505415
2025-01-31 16:36:35,722 - root - INFO - Processing well WP9L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:36,018 - root - INFO - Processed 20/27 wells
2025-01-31 16:36:36,018 - root - INFO - Processing well WP1L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:36,318 - root - INFO - Processing well WP1L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:36,621 - root - INFO - Processing well WP2L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:36,916 - root - INFO - Processing well WP5L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:37,198 - root - INFO - Processing well WP4L1Side1Leg3 with UWI: 840300000505415
2025-01-31 16:36:37,494 - root - INFO - Processed 25/27 wells
2025-01-31 16:36:37,494 - root - INFO - Processing well WP4L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:36:37,801 - root - INFO - Processing well WP8L1Side1Leg2 with UWI: 840300000505415
2025-01-31 16:42:11,300 - root - DEBUG - Toolbar setup completed
2025-01-31 16:42:11,300 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:42:11,302 - root - DEBUG - Table setup completed
2025-01-31 16:42:11,303 - root - DEBUG - UI setup completed successfully
2025-01-31 16:42:11,305 - root - DEBUG - Signal connections established
2025-01-31 16:42:11,308 - root - INFO - Scenario changed to: asdfasdfFirst
2025-01-31 16:42:11,309 - root - DEBUG - UI updated for scenario: asdfasdfFirst
2025-01-31 16:42:11,365 - root - INFO - Well pads table populated successfully.
2025-01-31 16:42:11,554 - root - INFO - Well pads table populated successfully.
2025-01-31 16:42:11,554 - root - INFO - Initial data loaded successfully.
2025-01-31 16:42:11,554 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:42:37,542 - root - INFO - Scenario 'ddadaw' added successfully with ID 14. Active: 0
2025-01-31 16:42:37,559 - root - INFO - Scenario changed to: ddadaw
2025-01-31 16:42:37,560 - root - DEBUG - UI updated for scenario: ddadaw
2025-01-31 16:42:37,563 - root - INFO - Well pads table populated successfully.
2025-01-31 16:42:37,596 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 16:42:37,602 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 16:42:37,608 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 16:42:37,615 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 16:42:37,621 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 16:42:37,628 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 16:42:37,636 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 16:42:37,642 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 16:42:37,649 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 16:42:37,656 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 16:42:37,663 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 16:42:37,670 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 16:42:37,676 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 16:42:37,683 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 16:42:37,689 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 16:42:37,696 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 16:42:37,701 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 16:42:37,707 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 16:42:37,714 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 16:42:37,720 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 16:42:37,725 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 16:42:37,732 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 16:42:37,737 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 16:42:37,743 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 16:42:37,749 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 16:42:37,754 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 16:42:37,761 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 16:42:38,896 - root - INFO - Scenario 14 updated with 27 wells.
2025-01-31 16:42:38,930 - root - INFO - Processing well WP8L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,930 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,930 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,931 - root - INFO - Processing well WP3L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,931 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,931 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,932 - root - INFO - Processing well WP2L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,932 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,932 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,933 - root - INFO - Processing well WP7L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,933 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,933 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,934 - root - INFO - Processing well WP3L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,934 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,934 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,934 - root - INFO - Processing well WP6L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,934 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,934 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,935 - root - INFO - Processing well WP8L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,936 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,936 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,936 - root - INFO - Processing well WP3L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,936 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,937 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,937 - root - INFO - Processing well WP7L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,937 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,937 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,938 - root - INFO - Processing well WP5L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,938 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,938 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,939 - root - INFO - Processing well WP9L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,939 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,939 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,939 - root - INFO - Processing well WP1L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,939 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,939 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,941 - root - INFO - Processing well WP2L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,941 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,941 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,941 - root - INFO - Processing well WP7L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,942 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,942 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,942 - root - INFO - Processing well WP9L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,942 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,942 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,942 - root - INFO - Processing well WP6L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,942 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,942 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,943 - root - INFO - Processing well WP5L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,943 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,943 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,943 - root - INFO - Processing well WP6L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,945 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,945 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,945 - root - INFO - Processing well WP4L1Side1Leg1 with Saved DC: Art
2025-01-31 16:42:38,945 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,945 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,945 - root - INFO - Processing well WP9L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,946 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,946 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,946 - root - INFO - Processing well WP1L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,946 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,946 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,947 - root - INFO - Processing well WP1L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,947 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,947 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,947 - root - INFO - Processing well WP2L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,948 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,948 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,948 - root - INFO - Processing well WP5L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,948 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,949 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,949 - root - INFO - Processing well WP4L1Side1Leg3 with Saved DC: Art
2025-01-31 16:42:38,949 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,949 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,950 - root - INFO - Processing well WP4L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,950 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,950 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:42:38,950 - root - INFO - Processing well WP8L1Side1Leg2 with Saved DC: Art
2025-01-31 16:42:38,950 - root - ERROR - Error fetching saved decline curve data: Cannot operate on a closed database.
2025-01-31 16:42:38,951 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:44:56,035 - root - DEBUG - Toolbar setup completed
2025-01-31 16:44:56,036 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:44:56,037 - root - DEBUG - Table setup completed
2025-01-31 16:44:56,038 - root - DEBUG - UI setup completed successfully
2025-01-31 16:44:56,039 - root - DEBUG - Signal connections established
2025-01-31 16:44:56,042 - root - INFO - Scenario changed to: ddadaw
2025-01-31 16:44:56,042 - root - DEBUG - UI updated for scenario: ddadaw
2025-01-31 16:44:56,076 - root - INFO - Well pads table populated successfully.
2025-01-31 16:44:56,234 - root - INFO - Well pads table populated successfully.
2025-01-31 16:44:56,234 - root - INFO - Initial data loaded successfully.
2025-01-31 16:44:56,235 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:45:07,087 - root - INFO - Scenario '11223' added successfully with ID 15. Active: 0
2025-01-31 16:45:07,101 - root - INFO - Scenario changed to: 11223
2025-01-31 16:45:07,101 - root - DEBUG - UI updated for scenario: 11223
2025-01-31 16:45:07,104 - root - INFO - Well pads table populated successfully.
2025-01-31 16:45:07,139 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 16:45:07,145 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 16:45:07,154 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 16:45:07,160 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 16:45:07,166 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 16:45:07,174 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 16:45:07,180 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 16:45:07,187 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 16:45:07,194 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 16:45:07,201 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 16:45:07,208 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 16:45:07,216 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 16:45:07,223 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 16:45:07,228 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 16:45:07,235 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 16:45:07,240 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 16:45:07,246 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 16:45:07,252 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 16:45:07,258 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 16:45:07,264 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 16:45:07,270 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 16:45:07,275 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 16:45:07,282 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 16:45:07,286 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 16:45:07,292 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 16:45:07,299 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 16:45:07,304 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 16:45:11,534 - root - INFO - Scenario 15 updated with 27 wells.
2025-01-31 16:45:11,566 - root - INFO - Processing well WP8L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,567 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,568 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,568 - root - INFO - Processing well WP3L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,569 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,570 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,570 - root - INFO - Processing well WP2L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,572 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,572 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,572 - root - INFO - Processing well WP7L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,573 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,573 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,574 - root - INFO - Processing well WP3L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,575 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,575 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,576 - root - INFO - Processing well WP6L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,577 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,577 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,578 - root - INFO - Processing well WP8L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,579 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,579 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,580 - root - INFO - Processing well WP3L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,581 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,581 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,582 - root - INFO - Processing well WP7L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,582 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,583 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,583 - root - INFO - Processing well WP5L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,584 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,585 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,585 - root - INFO - Processing well WP9L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,587 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,587 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,588 - root - INFO - Processing well WP1L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,589 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,589 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,590 - root - INFO - Processing well WP2L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,590 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,591 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,591 - root - INFO - Processing well WP7L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,592 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,592 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,593 - root - INFO - Processing well WP9L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,594 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,594 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,594 - root - INFO - Processing well WP6L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,595 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,595 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,596 - root - INFO - Processing well WP5L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,598 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,598 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,599 - root - INFO - Processing well WP6L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,600 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,600 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,601 - root - INFO - Processing well WP4L1Side1Leg1 with Saved DC: Art
2025-01-31 16:45:11,601 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,601 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,602 - root - INFO - Processing well WP9L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,603 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,603 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,603 - root - INFO - Processing well WP1L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,604 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,604 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,606 - root - INFO - Processing well WP1L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,607 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,607 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,607 - root - INFO - Processing well WP2L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,608 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,608 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,609 - root - INFO - Processing well WP5L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,609 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,610 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,610 - root - INFO - Processing well WP4L1Side1Leg3 with Saved DC: Art
2025-01-31 16:45:11,611 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,611 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,612 - root - INFO - Processing well WP4L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,613 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,613 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:45:11,613 - root - INFO - Processing well WP8L1Side1Leg2 with Saved DC: Art
2025-01-31 16:45:11,614 - root - ERROR - Error fetching saved decline curve data: no such column: scenario_id
2025-01-31 16:45:11,614 - root - WARNING - No saved decline curve found: Art
2025-01-31 16:48:02,402 - root - DEBUG - Toolbar setup completed
2025-01-31 16:48:02,403 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 16:48:02,406 - root - DEBUG - Table setup completed
2025-01-31 16:48:02,406 - root - DEBUG - UI setup completed successfully
2025-01-31 16:48:02,407 - root - DEBUG - Signal connections established
2025-01-31 16:48:02,410 - root - INFO - Scenario changed to: 11223
2025-01-31 16:48:02,410 - root - DEBUG - UI updated for scenario: 11223
2025-01-31 16:48:02,447 - root - INFO - Well pads table populated successfully.
2025-01-31 16:48:02,611 - root - INFO - Well pads table populated successfully.
2025-01-31 16:48:02,611 - root - INFO - Initial data loaded successfully.
2025-01-31 16:48:02,611 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 16:48:11,039 - root - INFO - Scenario 'Firstasdf' added successfully with ID 16. Active: 0
2025-01-31 16:48:11,081 - root - INFO - Scenario changed to: Firstasdf
2025-01-31 16:48:11,082 - root - DEBUG - UI updated for scenario: Firstasdf
2025-01-31 16:48:11,084 - root - INFO - Well pads table populated successfully.
2025-01-31 16:48:11,121 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 16:48:11,127 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 16:48:11,133 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 16:48:11,139 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 16:48:11,146 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 16:48:11,152 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 16:48:11,158 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 16:48:11,165 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 16:48:11,172 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 16:48:11,177 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 16:48:11,217 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 16:48:11,222 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 16:48:11,229 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 16:48:11,234 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 16:48:11,239 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 16:48:11,244 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 16:48:11,249 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 16:48:11,255 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 16:48:11,296 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 16:48:11,302 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 16:48:11,308 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 16:48:11,313 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 16:48:11,319 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 16:48:11,325 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 16:48:11,330 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 16:48:11,335 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 16:48:11,339 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 16:48:15,680 - root - INFO - Scenario 16 updated with 27 wells.
2025-01-31 16:48:15,714 - root - INFO - Processing well WP8L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,745 - root - ERROR - Error processing well WP8L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,745 - root - INFO - Processing well WP3L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,757 - root - ERROR - Error processing well WP3L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,757 - root - INFO - Processing well WP2L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,767 - root - ERROR - Error processing well WP2L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,768 - root - INFO - Processing well WP7L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,778 - root - ERROR - Error processing well WP7L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,779 - root - INFO - Processing well WP3L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,788 - root - ERROR - Error processing well WP3L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,788 - root - INFO - Processing well WP6L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,800 - root - ERROR - Error processing well WP6L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,801 - root - INFO - Processing well WP8L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,810 - root - ERROR - Error processing well WP8L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,811 - root - INFO - Processing well WP3L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,822 - root - ERROR - Error processing well WP3L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,822 - root - INFO - Processing well WP7L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,833 - root - ERROR - Error processing well WP7L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,833 - root - INFO - Processing well WP5L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,844 - root - ERROR - Error processing well WP5L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,845 - root - INFO - Processing well WP9L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,856 - root - ERROR - Error processing well WP9L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,856 - root - INFO - Processing well WP1L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,867 - root - ERROR - Error processing well WP1L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,867 - root - INFO - Processing well WP2L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,878 - root - ERROR - Error processing well WP2L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,878 - root - INFO - Processing well WP7L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,887 - root - ERROR - Error processing well WP7L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,888 - root - INFO - Processing well WP9L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,898 - root - ERROR - Error processing well WP9L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,898 - root - INFO - Processing well WP6L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,908 - root - ERROR - Error processing well WP6L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,908 - root - INFO - Processing well WP5L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,919 - root - ERROR - Error processing well WP5L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,919 - root - INFO - Processing well WP6L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,930 - root - ERROR - Error processing well WP6L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,930 - root - INFO - Processing well WP4L1Side1Leg1 with Saved DC: Art
2025-01-31 16:48:15,941 - root - ERROR - Error processing well WP4L1Side1Leg1: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,942 - root - INFO - Processing well WP9L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,952 - root - ERROR - Error processing well WP9L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,953 - root - INFO - Processing well WP1L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,963 - root - ERROR - Error processing well WP1L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,963 - root - INFO - Processing well WP1L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:15,973 - root - ERROR - Error processing well WP1L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,974 - root - INFO - Processing well WP2L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,984 - root - ERROR - Error processing well WP2L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,985 - root - INFO - Processing well WP5L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:15,993 - root - ERROR - Error processing well WP5L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:15,994 - root - INFO - Processing well WP4L1Side1Leg3 with Saved DC: Art
2025-01-31 16:48:16,004 - root - ERROR - Error processing well WP4L1Side1Leg3: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:16,004 - root - INFO - Processing well WP4L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:16,014 - root - ERROR - Error processing well WP4L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 16:48:16,014 - root - INFO - Processing well WP8L1Side1Leg2 with Saved DC: Art
2025-01-31 16:48:16,023 - root - ERROR - Error processing well WP8L1Side1Leg2: "['gas_model_status', 'oil_model_status'] not in index"
2025-01-31 18:24:40,790 - root - DEBUG - Toolbar setup completed
2025-01-31 18:24:40,791 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:24:40,794 - root - DEBUG - Table setup completed
2025-01-31 18:24:40,794 - root - DEBUG - UI setup completed successfully
2025-01-31 18:24:40,795 - root - DEBUG - Signal connections established
2025-01-31 18:24:40,798 - root - INFO - Scenario changed to: Firstasdf
2025-01-31 18:24:40,799 - root - DEBUG - UI updated for scenario: Firstasdf
2025-01-31 18:24:40,835 - root - INFO - Well pads table populated successfully.
2025-01-31 18:24:40,875 - root - INFO - Well pads table populated successfully.
2025-01-31 18:24:40,875 - root - INFO - Initial data loaded successfully.
2025-01-31 18:24:40,875 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:24:52,274 - root - INFO - Scenario '1123' added successfully with ID 17. Active: 0
2025-01-31 18:24:52,289 - root - INFO - Scenario changed to: 1123
2025-01-31 18:24:52,291 - root - DEBUG - UI updated for scenario: 1123
2025-01-31 18:24:52,294 - root - INFO - Well pads table populated successfully.
2025-01-31 18:24:52,329 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:24:52,335 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:24:52,342 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:24:52,349 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:24:52,356 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:24:52,362 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:24:52,368 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:24:52,376 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:24:52,384 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:24:52,393 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:24:52,400 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:24:52,405 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:24:52,412 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:24:52,419 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:24:52,423 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:24:52,431 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:24:52,436 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:24:52,442 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:24:52,447 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:24:52,453 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:24:52,459 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:24:52,465 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:24:52,470 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:24:52,476 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:24:52,483 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:24:52,488 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:24:52,495 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:24:56,259 - root - INFO - Scenario 17 updated with 27 wells.
2025-01-31 18:24:56,327 - root - INFO - Processing well WP8L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,355 - root - ERROR - Error processing well WP8L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,355 - root - INFO - Processing well WP3L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,365 - root - ERROR - Error processing well WP3L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,366 - root - INFO - Processing well WP2L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,376 - root - ERROR - Error processing well WP2L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,377 - root - INFO - Processing well WP7L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,387 - root - ERROR - Error processing well WP7L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,389 - root - INFO - Processing well WP3L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,400 - root - ERROR - Error processing well WP3L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,400 - root - INFO - Processing well WP6L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,411 - root - ERROR - Error processing well WP6L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,411 - root - INFO - Processing well WP8L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,421 - root - ERROR - Error processing well WP8L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,422 - root - INFO - Processing well WP3L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,431 - root - ERROR - Error processing well WP3L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,431 - root - INFO - Processing well WP7L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,443 - root - ERROR - Error processing well WP7L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,443 - root - INFO - Processing well WP5L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,453 - root - ERROR - Error processing well WP5L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,453 - root - INFO - Processing well WP9L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,462 - root - ERROR - Error processing well WP9L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,463 - root - INFO - Processing well WP1L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,474 - root - ERROR - Error processing well WP1L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,474 - root - INFO - Processing well WP2L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,483 - root - ERROR - Error processing well WP2L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,484 - root - INFO - Processing well WP7L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,497 - root - ERROR - Error processing well WP7L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,498 - root - INFO - Processing well WP9L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,510 - root - ERROR - Error processing well WP9L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,511 - root - INFO - Processing well WP6L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,522 - root - ERROR - Error processing well WP6L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,523 - root - INFO - Processing well WP5L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,534 - root - ERROR - Error processing well WP5L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,534 - root - INFO - Processing well WP6L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,544 - root - ERROR - Error processing well WP6L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,545 - root - INFO - Processing well WP4L1Side1Leg1 with Saved DC: Art
2025-01-31 18:24:56,557 - root - ERROR - Error processing well WP4L1Side1Leg1: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,557 - root - INFO - Processing well WP9L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,567 - root - ERROR - Error processing well WP9L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,567 - root - INFO - Processing well WP1L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,578 - root - ERROR - Error processing well WP1L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,579 - root - INFO - Processing well WP1L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,589 - root - ERROR - Error processing well WP1L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,590 - root - INFO - Processing well WP2L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,600 - root - ERROR - Error processing well WP2L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,600 - root - INFO - Processing well WP5L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,610 - root - ERROR - Error processing well WP5L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,610 - root - INFO - Processing well WP4L1Side1Leg3 with Saved DC: Art
2025-01-31 18:24:56,621 - root - ERROR - Error processing well WP4L1Side1Leg3: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,621 - root - INFO - Processing well WP4L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,632 - root - ERROR - Error processing well WP4L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:24:56,633 - root - INFO - Processing well WP8L1Side1Leg2 with Saved DC: Art
2025-01-31 18:24:56,642 - root - ERROR - Error processing well WP8L1Side1Leg2: "['gas_model_status', 'oil_model_status', 'q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:25:37,560 - root - INFO - Well pads table populated successfully.
2025-01-31 18:31:29,073 - root - DEBUG - Toolbar setup completed
2025-01-31 18:31:29,074 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:31:29,076 - root - DEBUG - Table setup completed
2025-01-31 18:31:29,076 - root - DEBUG - UI setup completed successfully
2025-01-31 18:31:29,077 - root - DEBUG - Signal connections established
2025-01-31 18:31:29,080 - root - INFO - Scenario changed to: 1123
2025-01-31 18:31:29,080 - root - DEBUG - UI updated for scenario: 1123
2025-01-31 18:31:29,116 - root - INFO - Well pads table populated successfully.
2025-01-31 18:31:29,155 - root - INFO - Well pads table populated successfully.
2025-01-31 18:31:29,155 - root - INFO - Initial data loaded successfully.
2025-01-31 18:31:29,156 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:31:37,751 - root - INFO - Scenario 'Firstddad' added successfully with ID 18. Active: 0
2025-01-31 18:31:37,765 - root - INFO - Scenario changed to: Firstddad
2025-01-31 18:31:37,766 - root - DEBUG - UI updated for scenario: Firstddad
2025-01-31 18:31:37,768 - root - INFO - Well pads table populated successfully.
2025-01-31 18:31:37,799 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:31:37,807 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:31:37,813 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:31:37,818 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:31:37,825 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:31:37,831 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:31:37,838 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:31:37,844 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:31:37,850 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:31:37,858 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:31:37,865 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:31:37,873 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:31:37,879 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:31:37,886 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:31:37,894 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:31:37,899 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:31:37,906 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:31:37,911 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:31:37,918 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:31:37,923 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:31:37,930 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:31:37,934 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:31:37,939 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:31:37,945 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:31:37,951 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:31:37,956 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:31:37,961 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:31:39,345 - root - INFO - Scenario 18 updated with 27 wells.
2025-01-31 18:31:39,390 - root - ERROR - Error processing well WP8L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,398 - root - ERROR - Error processing well WP3L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,409 - root - ERROR - Error processing well WP2L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,418 - root - ERROR - Error processing well WP7L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,426 - root - ERROR - Error processing well WP3L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,433 - root - ERROR - Error processing well WP6L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,441 - root - ERROR - Error processing well WP8L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,450 - root - ERROR - Error processing well WP3L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,458 - root - ERROR - Error processing well WP7L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,464 - root - ERROR - Error processing well WP5L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,472 - root - ERROR - Error processing well WP9L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,479 - root - ERROR - Error processing well WP1L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,487 - root - ERROR - Error processing well WP2L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,494 - root - ERROR - Error processing well WP7L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,502 - root - ERROR - Error processing well WP9L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,511 - root - ERROR - Error processing well WP6L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,518 - root - ERROR - Error processing well WP5L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,525 - root - ERROR - Error processing well WP6L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,531 - root - ERROR - Error processing well WP4L1Side1Leg1: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,539 - root - ERROR - Error processing well WP9L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,545 - root - ERROR - Error processing well WP1L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,554 - root - ERROR - Error processing well WP1L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,562 - root - ERROR - Error processing well WP2L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,569 - root - ERROR - Error processing well WP5L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,576 - root - ERROR - Error processing well WP4L1Side1Leg3: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,584 - root - ERROR - Error processing well WP4L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:39,590 - root - ERROR - Error processing well WP8L1Side1Leg2: "['q_oil_eur', 'q_gas_eur', 'EFR_oil', 'EFR_gas', 'EUR_oil_remaining', 'EUR_gas_remaining', 'npv', 'npv_discounted'] not in index"
2025-01-31 18:31:48,953 - root - INFO - Well pads table populated successfully.
2025-01-31 18:32:53,793 - root - DEBUG - Toolbar setup completed
2025-01-31 18:32:53,794 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:32:53,797 - root - DEBUG - Table setup completed
2025-01-31 18:32:53,797 - root - DEBUG - UI setup completed successfully
2025-01-31 18:32:53,799 - root - DEBUG - Signal connections established
2025-01-31 18:32:53,805 - root - INFO - Scenario changed to: Firstddad
2025-01-31 18:32:53,806 - root - DEBUG - UI updated for scenario: Firstddad
2025-01-31 18:32:53,852 - root - INFO - Well pads table populated successfully.
2025-01-31 18:32:53,896 - root - INFO - Well pads table populated successfully.
2025-01-31 18:32:53,897 - root - INFO - Initial data loaded successfully.
2025-01-31 18:32:53,897 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:33:01,533 - root - INFO - Scenario 'Firstadd' added successfully with ID 19. Active: 0
2025-01-31 18:33:01,546 - root - INFO - Scenario changed to: Firstadd
2025-01-31 18:33:01,547 - root - DEBUG - UI updated for scenario: Firstadd
2025-01-31 18:33:01,548 - root - INFO - Well pads table populated successfully.
2025-01-31 18:33:01,588 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:33:01,594 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:33:01,602 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:33:01,610 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:33:01,618 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:33:01,626 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:33:01,632 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:33:01,639 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:33:01,647 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:33:01,653 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:33:01,661 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:33:01,669 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:33:01,674 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:33:01,683 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:33:01,690 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:33:01,699 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:33:01,708 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:33:01,714 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:33:01,720 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:33:01,726 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:33:01,732 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:33:01,738 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:33:01,743 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:33:01,749 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:33:01,755 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:33:01,760 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:33:01,764 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:33:03,328 - root - INFO - Scenario 19 updated with 27 wells.
2025-01-31 18:36:04,276 - root - DEBUG - Toolbar setup completed
2025-01-31 18:36:04,277 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:36:04,279 - root - DEBUG - Table setup completed
2025-01-31 18:36:04,279 - root - DEBUG - UI setup completed successfully
2025-01-31 18:36:04,280 - root - DEBUG - Signal connections established
2025-01-31 18:36:04,283 - root - INFO - Scenario changed to: Firstadd
2025-01-31 18:36:04,284 - root - DEBUG - UI updated for scenario: Firstadd
2025-01-31 18:36:04,325 - root - INFO - Well pads table populated successfully.
2025-01-31 18:36:04,358 - root - INFO - Well pads table populated successfully.
2025-01-31 18:36:04,358 - root - INFO - Initial data loaded successfully.
2025-01-31 18:36:04,358 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:36:13,836 - root - INFO - Scenario 'Firstddaa222' added successfully with ID 20. Active: 0
2025-01-31 18:36:13,852 - root - INFO - Scenario changed to: Firstddaa222
2025-01-31 18:36:13,853 - root - DEBUG - UI updated for scenario: Firstddaa222
2025-01-31 18:36:13,855 - root - INFO - Well pads table populated successfully.
2025-01-31 18:36:13,894 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:36:13,900 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:36:13,907 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:36:13,914 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:36:13,922 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:36:13,928 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:36:13,936 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:36:13,944 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:36:13,951 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:36:13,958 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:36:13,965 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:36:13,971 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:36:13,978 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:36:13,983 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:36:13,989 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:36:13,995 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:36:14,001 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:36:14,008 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:36:14,015 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:36:14,021 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:36:14,027 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:36:14,034 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:36:14,041 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:36:14,047 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:36:14,053 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:36:14,059 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:36:14,065 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:36:15,227 - root - INFO - Scenario 20 updated with 27 wells.
2025-01-31 18:36:15,276 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 18:48:25,646 - root - DEBUG - Toolbar setup completed
2025-01-31 18:48:25,647 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:48:25,649 - root - DEBUG - Table setup completed
2025-01-31 18:48:25,649 - root - DEBUG - UI setup completed successfully
2025-01-31 18:48:25,650 - root - DEBUG - Signal connections established
2025-01-31 18:48:25,653 - root - INFO - Scenario changed to: Firstddaa222
2025-01-31 18:48:25,654 - root - DEBUG - UI updated for scenario: Firstddaa222
2025-01-31 18:48:25,696 - root - INFO - Well pads table populated successfully.
2025-01-31 18:48:25,730 - root - INFO - Well pads table populated successfully.
2025-01-31 18:48:25,730 - root - INFO - Initial data loaded successfully.
2025-01-31 18:48:25,730 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:48:34,036 - root - INFO - Scenario 'First4455' added successfully with ID 21. Active: 0
2025-01-31 18:48:34,049 - root - INFO - Scenario changed to: First4455
2025-01-31 18:48:34,050 - root - DEBUG - UI updated for scenario: First4455
2025-01-31 18:48:34,054 - root - INFO - Well pads table populated successfully.
2025-01-31 18:48:34,084 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:48:34,091 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:48:34,098 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:48:34,104 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:48:34,111 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:48:34,117 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:48:34,123 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:48:34,129 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:48:34,135 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:48:34,143 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:48:34,149 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:48:34,156 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:48:34,163 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:48:34,171 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:48:34,177 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:48:34,183 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:48:34,191 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:48:34,197 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:48:34,204 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:48:34,209 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:48:34,215 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:48:34,221 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:48:34,227 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:48:34,233 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:48:34,238 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:48:34,245 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:48:34,250 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:48:35,645 - root - INFO - Scenario 21 updated with 27 wells.
2025-01-31 18:48:35,728 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 18:50:21,802 - root - DEBUG - Toolbar setup completed
2025-01-31 18:50:21,803 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:50:21,805 - root - DEBUG - Table setup completed
2025-01-31 18:50:21,805 - root - DEBUG - UI setup completed successfully
2025-01-31 18:50:21,806 - root - DEBUG - Signal connections established
2025-01-31 18:50:21,809 - root - INFO - Scenario changed to: First4455
2025-01-31 18:50:21,810 - root - DEBUG - UI updated for scenario: First4455
2025-01-31 18:50:21,851 - root - INFO - Well pads table populated successfully.
2025-01-31 18:50:21,885 - root - INFO - Well pads table populated successfully.
2025-01-31 18:50:21,885 - root - INFO - Initial data loaded successfully.
2025-01-31 18:50:21,885 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:50:31,914 - root - INFO - Scenario 'gggaaaaaa' added successfully with ID 22. Active: 0
2025-01-31 18:50:31,929 - root - INFO - Scenario changed to: gggaaaaaa
2025-01-31 18:50:31,930 - root - DEBUG - UI updated for scenario: gggaaaaaa
2025-01-31 18:50:31,933 - root - INFO - Well pads table populated successfully.
2025-01-31 18:50:31,967 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:50:31,973 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:50:31,980 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:50:31,987 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:50:31,993 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:50:32,000 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:50:32,007 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:50:32,015 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:50:32,021 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:50:32,031 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:50:32,036 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:50:32,043 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:50:32,050 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:50:32,055 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:50:32,061 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:50:32,066 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:50:32,072 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:50:32,078 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:50:32,085 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:50:32,090 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:50:32,096 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:50:32,102 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:50:32,107 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:50:32,114 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:50:32,120 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:50:32,126 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:50:32,132 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:50:43,103 - root - INFO - Scenario 22 updated with 27 wells.
2025-01-31 18:50:43,141 - root - ERROR - Error processing well WP8L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,142 - root - ERROR - Error processing well WP3L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,143 - root - ERROR - Error processing well WP2L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,146 - root - ERROR - Error processing well WP7L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,148 - root - ERROR - Error processing well WP3L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,149 - root - ERROR - Error processing well WP6L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,150 - root - ERROR - Error processing well WP8L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,152 - root - ERROR - Error processing well WP3L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,154 - root - ERROR - Error processing well WP7L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,156 - root - ERROR - Error processing well WP5L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,158 - root - ERROR - Error processing well WP9L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,159 - root - ERROR - Error processing well WP1L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,160 - root - ERROR - Error processing well WP2L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,162 - root - ERROR - Error processing well WP7L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,163 - root - ERROR - Error processing well WP9L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,164 - root - ERROR - Error processing well WP6L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,166 - root - ERROR - Error processing well WP5L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,167 - root - ERROR - Error processing well WP6L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,170 - root - ERROR - Error processing well WP4L1Side1Leg1: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,172 - root - ERROR - Error processing well WP9L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,174 - root - ERROR - Error processing well WP1L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,176 - root - ERROR - Error processing well WP1L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,178 - root - ERROR - Error processing well WP2L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,180 - root - ERROR - Error processing well WP5L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,182 - root - ERROR - Error processing well WP4L1Side1Leg3: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,184 - root - ERROR - Error processing well WP4L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:50:43,186 - root - ERROR - Error processing well WP8L1Side1Leg2: 'str' object has no attribute 'strftime'
2025-01-31 18:53:37,004 - root - DEBUG - Toolbar setup completed
2025-01-31 18:53:37,005 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 18:53:37,008 - root - DEBUG - Table setup completed
2025-01-31 18:53:37,008 - root - DEBUG - UI setup completed successfully
2025-01-31 18:53:37,009 - root - DEBUG - Signal connections established
2025-01-31 18:53:37,011 - root - INFO - Scenario changed to: gggaaaaaa
2025-01-31 18:53:37,012 - root - DEBUG - UI updated for scenario: gggaaaaaa
2025-01-31 18:53:37,048 - root - INFO - Well pads table populated successfully.
2025-01-31 18:53:37,087 - root - INFO - Well pads table populated successfully.
2025-01-31 18:53:37,087 - root - INFO - Initial data loaded successfully.
2025-01-31 18:53:37,087 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 18:53:47,148 - root - INFO - Scenario '66666' added successfully with ID 23. Active: 0
2025-01-31 18:53:47,162 - root - INFO - Scenario changed to: 66666
2025-01-31 18:53:47,163 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 18:53:47,166 - root - INFO - Well pads table populated successfully.
2025-01-31 18:53:47,200 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 18:53:47,207 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 18:53:47,214 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 18:53:47,221 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 18:53:47,228 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 18:53:47,234 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 18:53:47,240 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 18:53:47,246 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 18:53:47,253 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 18:53:47,260 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 18:53:47,266 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 18:53:47,272 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 18:53:47,280 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 18:53:47,287 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 18:53:47,293 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 18:53:47,299 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 18:53:47,305 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 18:53:47,311 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 18:53:47,317 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 18:53:47,323 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 18:53:47,329 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 18:53:47,335 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 18:53:47,340 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 18:53:47,347 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 18:53:47,353 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 18:53:47,359 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 18:53:47,365 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 18:53:49,407 - root - INFO - Scenario 23 updated with 27 wells.
2025-01-31 18:53:49,474 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 18:54:45,744 - root - INFO - Processed 5/27 wells
2025-01-31 18:55:03,414 - root - INFO - Processed 10/27 wells
2025-01-31 18:55:21,179 - root - INFO - Processed 15/27 wells
2025-01-31 18:55:38,543 - root - INFO - Processed 20/27 wells
2025-01-31 18:55:56,086 - root - INFO - Processed 25/27 wells
2025-01-31 19:01:26,987 - root - INFO - Well pads table populated successfully.
2025-01-31 19:02:28,285 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:02:28,323 - root - ERROR - Error updating row 0: "['scenario_id', 'max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas'] not in index"
2025-01-31 19:02:29,708 - root - INFO - Well pads table populated successfully.
2025-01-31 19:09:45,224 - root - DEBUG - Toolbar setup completed
2025-01-31 19:09:45,225 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:09:45,227 - root - DEBUG - Table setup completed
2025-01-31 19:09:45,227 - root - DEBUG - UI setup completed successfully
2025-01-31 19:09:45,228 - root - DEBUG - Signal connections established
2025-01-31 19:09:45,232 - root - INFO - Scenario changed to: 66666
2025-01-31 19:09:45,232 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:09:45,268 - root - INFO - Well pads table populated successfully.
2025-01-31 19:09:45,309 - root - INFO - Well pads table populated successfully.
2025-01-31 19:09:45,309 - root - INFO - Initial data loaded successfully.
2025-01-31 19:09:45,309 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:09:57,678 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:09:57,705 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 19:11:02,164 - root - ERROR - Error updating row 1: "['scenario_id', 'max_oil_production', 'max_gas_production', 'max_oil_production_date', 'max_gas_production_date', 'one_year_oil_production', 'one_year_gas_production', 'di_oil', 'di_gas', 'oil_b_factor', 'gas_b_factor', 'min_dec_oil', 'min_dec_gas', 'model_oil', 'model_gas', 'economic_limit_type', 'economic_limit_date', 'oil_price', 'gas_price', 'oil_price_dif', 'gas_price_dif', 'discount_rate', 'working_interest', 'royalty', 'tax_rate', 'capital_expenditures', 'operating_expenditures', 'net_price_oil', 'net_price_gas'] not in index"
2025-01-31 19:18:49,770 - root - DEBUG - Toolbar setup completed
2025-01-31 19:18:49,771 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:18:49,773 - root - DEBUG - Table setup completed
2025-01-31 19:18:49,773 - root - DEBUG - UI setup completed successfully
2025-01-31 19:18:49,774 - root - DEBUG - Signal connections established
2025-01-31 19:18:49,778 - root - INFO - Scenario changed to: 66666
2025-01-31 19:18:49,779 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:18:49,815 - root - INFO - Well pads table populated successfully.
2025-01-31 19:18:49,854 - root - INFO - Well pads table populated successfully.
2025-01-31 19:18:49,854 - root - INFO - Initial data loaded successfully.
2025-01-31 19:18:49,854 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:18:56,157 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:18:56,213 - root - ERROR - Error processing well WP2L1Side1Leg3: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2025-01-31 19:22:12,629 - root - DEBUG - Toolbar setup completed
2025-01-31 19:22:12,630 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:22:12,631 - root - DEBUG - Table setup completed
2025-01-31 19:22:12,631 - root - DEBUG - UI setup completed successfully
2025-01-31 19:22:12,632 - root - DEBUG - Signal connections established
2025-01-31 19:22:12,636 - root - INFO - Scenario changed to: 66666
2025-01-31 19:22:12,637 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:22:12,684 - root - INFO - Well pads table populated successfully.
2025-01-31 19:22:12,722 - root - INFO - Well pads table populated successfully.
2025-01-31 19:22:12,722 - root - INFO - Initial data loaded successfully.
2025-01-31 19:22:12,723 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:22:16,653 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:22:26,365 - root - INFO - Well pads table populated successfully.
2025-01-31 19:31:01,814 - root - DEBUG - Toolbar setup completed
2025-01-31 19:31:01,815 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:31:01,818 - root - DEBUG - Table setup completed
2025-01-31 19:31:01,818 - root - DEBUG - UI setup completed successfully
2025-01-31 19:31:01,820 - root - DEBUG - Signal connections established
2025-01-31 19:31:01,822 - root - INFO - Scenario changed to: 66666
2025-01-31 19:31:01,822 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:31:01,860 - root - INFO - Well pads table populated successfully.
2025-01-31 19:31:01,901 - root - INFO - Well pads table populated successfully.
2025-01-31 19:31:01,901 - root - INFO - Initial data loaded successfully.
2025-01-31 19:31:01,901 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:31:07,546 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:31:11,081 - root - INFO - Well pads table populated successfully.
2025-01-31 19:37:58,767 - root - DEBUG - Toolbar setup completed
2025-01-31 19:37:58,768 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:37:58,770 - root - DEBUG - Table setup completed
2025-01-31 19:37:58,770 - root - DEBUG - UI setup completed successfully
2025-01-31 19:37:58,771 - root - DEBUG - Signal connections established
2025-01-31 19:37:58,775 - root - INFO - Scenario changed to: 66666
2025-01-31 19:37:58,776 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:37:58,817 - root - INFO - Well pads table populated successfully.
2025-01-31 19:37:58,862 - root - INFO - Well pads table populated successfully.
2025-01-31 19:37:58,862 - root - INFO - Initial data loaded successfully.
2025-01-31 19:37:58,862 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:38:02,557 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:38:02,583 - root - INFO - Updated well pad WP2L1Side1Leg3 in scenario 23
2025-01-31 19:38:04,539 - root - INFO - Well pads table populated successfully.
2025-01-31 19:49:52,457 - root - DEBUG - Toolbar setup completed
2025-01-31 19:49:52,458 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:49:52,460 - root - DEBUG - Table setup completed
2025-01-31 19:49:52,460 - root - DEBUG - UI setup completed successfully
2025-01-31 19:49:52,461 - root - DEBUG - Signal connections established
2025-01-31 19:49:52,464 - root - INFO - Scenario changed to: 66666
2025-01-31 19:49:52,464 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:49:52,503 - root - INFO - Well pads table populated successfully.
2025-01-31 19:49:52,544 - root - INFO - Well pads table populated successfully.
2025-01-31 19:49:52,544 - root - INFO - Initial data loaded successfully.
2025-01-31 19:49:52,544 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:49:56,196 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:49:56,204 - root - INFO - Updated well pad WP2L1Side1Leg3 with ID 354
2025-01-31 19:49:56,232 - root - WARNING - No model properties found for reference UWI: 840300000505415
2025-01-31 19:49:59,936 - root - INFO - Well pads table populated successfully.
2025-01-31 19:51:26,322 - root - DEBUG - Toolbar setup completed
2025-01-31 19:51:26,323 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:51:26,326 - root - DEBUG - Table setup completed
2025-01-31 19:51:26,326 - root - DEBUG - UI setup completed successfully
2025-01-31 19:51:26,327 - root - DEBUG - Signal connections established
2025-01-31 19:51:26,331 - root - INFO - Scenario changed to: 66666
2025-01-31 19:51:26,331 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:51:26,383 - root - INFO - Well pads table populated successfully.
2025-01-31 19:51:26,432 - root - INFO - Well pads table populated successfully.
2025-01-31 19:51:26,432 - root - INFO - Initial data loaded successfully.
2025-01-31 19:51:26,432 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:51:30,808 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:51:34,723 - root - INFO - Well pads table populated successfully.
2025-01-31 19:56:10,997 - root - DEBUG - Toolbar setup completed
2025-01-31 19:56:10,998 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:56:11,001 - root - DEBUG - Table setup completed
2025-01-31 19:56:11,001 - root - DEBUG - UI setup completed successfully
2025-01-31 19:56:11,002 - root - DEBUG - Signal connections established
2025-01-31 19:56:11,006 - root - INFO - Scenario changed to: 66666
2025-01-31 19:56:11,007 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:56:11,047 - root - INFO - Well pads table populated successfully.
2025-01-31 19:56:11,090 - root - INFO - Well pads table populated successfully.
2025-01-31 19:56:11,090 - root - INFO - Initial data loaded successfully.
2025-01-31 19:56:11,090 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:56:14,699 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:56:14,723 - root - ERROR - Error in update_scenario: 'PUDPropertiesDialog' object has no attribute 'update_well_pad_all'
2025-01-31 19:57:09,696 - root - DEBUG - Toolbar setup completed
2025-01-31 19:57:09,698 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 19:57:09,700 - root - DEBUG - Table setup completed
2025-01-31 19:57:09,701 - root - DEBUG - UI setup completed successfully
2025-01-31 19:57:09,702 - root - DEBUG - Signal connections established
2025-01-31 19:57:09,706 - root - INFO - Scenario changed to: 66666
2025-01-31 19:57:09,707 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 19:57:09,749 - root - INFO - Well pads table populated successfully.
2025-01-31 19:57:09,785 - root - INFO - Well pads table populated successfully.
2025-01-31 19:57:09,786 - root - INFO - Initial data loaded successfully.
2025-01-31 19:57:09,786 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 19:57:13,997 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 19:57:14,023 - root - ERROR - Error in update_scenario: 'total_depth'
2025-01-31 20:03:58,111 - root - DEBUG - Toolbar setup completed
2025-01-31 20:03:58,112 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:03:58,115 - root - DEBUG - Table setup completed
2025-01-31 20:03:58,115 - root - DEBUG - UI setup completed successfully
2025-01-31 20:03:58,116 - root - DEBUG - Signal connections established
2025-01-31 20:03:58,119 - root - INFO - Scenario changed to: 66666
2025-01-31 20:03:58,119 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:03:58,162 - root - INFO - Well pads table populated successfully.
2025-01-31 20:03:58,198 - root - INFO - Well pads table populated successfully.
2025-01-31 20:03:58,199 - root - INFO - Initial data loaded successfully.
2025-01-31 20:03:58,199 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:04:02,199 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:04:02,224 - root - ERROR - Error in update_scenario: 'total_depth'
2025-01-31 20:07:18,717 - root - DEBUG - Toolbar setup completed
2025-01-31 20:07:18,718 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:07:18,719 - root - DEBUG - Table setup completed
2025-01-31 20:07:18,721 - root - DEBUG - UI setup completed successfully
2025-01-31 20:07:18,722 - root - DEBUG - Signal connections established
2025-01-31 20:07:18,724 - root - INFO - Scenario changed to: 66666
2025-01-31 20:07:18,725 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:07:18,770 - root - INFO - Well pads table populated successfully.
2025-01-31 20:07:18,810 - root - INFO - Well pads table populated successfully.
2025-01-31 20:07:18,810 - root - INFO - Initial data loaded successfully.
2025-01-31 20:07:18,810 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:07:22,727 - root - INFO - Updating scenario with 2 modified rows
2025-01-31 20:07:22,752 - root - ERROR - Error in update_scenario: 'total_depth'
2025-01-31 20:10:34,057 - root - DEBUG - Toolbar setup completed
2025-01-31 20:10:34,058 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:10:34,060 - root - DEBUG - Table setup completed
2025-01-31 20:10:34,060 - root - DEBUG - UI setup completed successfully
2025-01-31 20:10:34,061 - root - DEBUG - Signal connections established
2025-01-31 20:10:34,064 - root - INFO - Scenario changed to: 66666
2025-01-31 20:10:34,065 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:10:34,110 - root - INFO - Well pads table populated successfully.
2025-01-31 20:10:34,147 - root - INFO - Well pads table populated successfully.
2025-01-31 20:10:34,147 - root - INFO - Initial data loaded successfully.
2025-01-31 20:10:34,147 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:10:44,781 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:10:44,806 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:11:14,868 - root - ERROR - Error in update_scenario: 'total_depth'
2025-01-31 20:12:35,364 - root - DEBUG - Toolbar setup completed
2025-01-31 20:12:35,365 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:12:35,367 - root - DEBUG - Table setup completed
2025-01-31 20:12:35,367 - root - DEBUG - UI setup completed successfully
2025-01-31 20:12:35,368 - root - DEBUG - Signal connections established
2025-01-31 20:12:35,372 - root - INFO - Scenario changed to: 66666
2025-01-31 20:12:35,372 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:12:35,416 - root - INFO - Well pads table populated successfully.
2025-01-31 20:12:35,452 - root - INFO - Well pads table populated successfully.
2025-01-31 20:12:35,452 - root - INFO - Initial data loaded successfully.
2025-01-31 20:12:35,452 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:12:39,378 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:12:39,401 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:16:24,567 - root - DEBUG - Toolbar setup completed
2025-01-31 20:16:24,568 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:16:24,571 - root - DEBUG - Table setup completed
2025-01-31 20:16:24,571 - root - DEBUG - UI setup completed successfully
2025-01-31 20:16:24,572 - root - DEBUG - Signal connections established
2025-01-31 20:16:24,575 - root - INFO - Scenario changed to: 66666
2025-01-31 20:16:24,576 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:16:24,613 - root - INFO - Well pads table populated successfully.
2025-01-31 20:16:24,654 - root - INFO - Well pads table populated successfully.
2025-01-31 20:16:24,654 - root - INFO - Initial data loaded successfully.
2025-01-31 20:16:24,654 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:16:28,321 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:16:28,353 - root - INFO - Scenario updated successfully!
2025-01-31 20:18:26,963 - root - DEBUG - Toolbar setup completed
2025-01-31 20:18:26,964 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:18:26,965 - root - DEBUG - Table setup completed
2025-01-31 20:18:26,966 - root - DEBUG - UI setup completed successfully
2025-01-31 20:18:26,966 - root - DEBUG - Signal connections established
2025-01-31 20:18:26,971 - root - INFO - Scenario changed to: 66666
2025-01-31 20:18:26,972 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:18:27,264 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:18:27,299 - root - INFO - Well pads table populated successfully.
2025-01-31 20:18:27,309 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:18:27,339 - root - INFO - Well pads table populated successfully.
2025-01-31 20:18:27,339 - root - INFO - Initial data loaded successfully.
2025-01-31 20:18:27,339 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:18:30,798 - root - INFO - Widget change tracked - Row: 4, Column: 1, Value: 2026-01-06
2025-01-31 20:18:34,713 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:18:34,735 - root - ERROR - Error in update_scenario: 'UWI'
2025-01-31 20:19:30,231 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:19:30,257 - root - ERROR - Error in update_scenario: 'UWI'
2025-01-31 20:20:28,586 - root - DEBUG - Toolbar setup completed
2025-01-31 20:20:28,587 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:20:28,589 - root - DEBUG - Table setup completed
2025-01-31 20:20:28,589 - root - DEBUG - UI setup completed successfully
2025-01-31 20:20:28,590 - root - DEBUG - Signal connections established
2025-01-31 20:20:28,593 - root - INFO - Scenario changed to: 66666
2025-01-31 20:20:28,595 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:20:28,892 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:20:28,923 - root - INFO - Well pads table populated successfully.
2025-01-31 20:20:28,934 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:20:28,964 - root - INFO - Well pads table populated successfully.
2025-01-31 20:20:28,964 - root - INFO - Initial data loaded successfully.
2025-01-31 20:20:28,964 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:20:32,700 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:20:32,724 - root - ERROR - Error in update_scenario: 'UWI'
2025-01-31 20:24:42,038 - root - DEBUG - Toolbar setup completed
2025-01-31 20:24:42,040 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:24:42,042 - root - DEBUG - Table setup completed
2025-01-31 20:24:42,042 - root - DEBUG - UI setup completed successfully
2025-01-31 20:24:42,043 - root - DEBUG - Signal connections established
2025-01-31 20:24:42,046 - root - INFO - Scenario changed to: 66666
2025-01-31 20:24:42,046 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:24:42,321 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:24:42,349 - root - INFO - Well pads table populated successfully.
2025-01-31 20:24:42,358 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:24:42,385 - root - INFO - Well pads table populated successfully.
2025-01-31 20:24:42,385 - root - INFO - Initial data loaded successfully.
2025-01-31 20:24:42,386 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:24:45,352 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:24:45,375 - root - ERROR - Error in update_scenario: 'NoneType' object has no attribute 'text'
2025-01-31 20:26:13,523 - root - DEBUG - Toolbar setup completed
2025-01-31 20:26:13,524 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:26:13,526 - root - DEBUG - Table setup completed
2025-01-31 20:26:13,527 - root - DEBUG - UI setup completed successfully
2025-01-31 20:26:13,529 - root - DEBUG - Signal connections established
2025-01-31 20:26:13,531 - root - INFO - Scenario changed to: 66666
2025-01-31 20:26:13,533 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:26:13,808 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:26:13,836 - root - INFO - Well pads table populated successfully.
2025-01-31 20:26:13,845 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:26:13,873 - root - INFO - Well pads table populated successfully.
2025-01-31 20:26:13,873 - root - INFO - Initial data loaded successfully.
2025-01-31 20:26:13,873 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:29:37,634 - root - DEBUG - Toolbar setup completed
2025-01-31 20:29:37,635 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:29:37,639 - root - DEBUG - Table setup completed
2025-01-31 20:29:37,639 - root - DEBUG - UI setup completed successfully
2025-01-31 20:29:37,640 - root - DEBUG - Signal connections established
2025-01-31 20:29:37,642 - root - INFO - Scenario changed to: 66666
2025-01-31 20:29:37,643 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:29:37,921 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:29:37,954 - root - INFO - Well pads table populated successfully.
2025-01-31 20:29:37,973 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:29:38,003 - root - INFO - Well pads table populated successfully.
2025-01-31 20:29:38,004 - root - INFO - Initial data loaded successfully.
2025-01-31 20:29:38,004 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:29:40,834 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:29:40,856 - root - ERROR - Error in update_scenario: 'NoneType' object has no attribute 'text'
2025-01-31 20:30:23,870 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:30:23,891 - root - ERROR - Error in update_scenario: 'NoneType' object has no attribute 'text'
2025-01-31 20:30:42,820 - root - INFO - Dialog closed successfully
2025-01-31 20:30:45,096 - root - DEBUG - Toolbar setup completed
2025-01-31 20:30:45,096 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:30:45,098 - root - DEBUG - Table setup completed
2025-01-31 20:30:45,098 - root - DEBUG - UI setup completed successfully
2025-01-31 20:30:45,099 - root - DEBUG - Signal connections established
2025-01-31 20:30:45,130 - root - INFO - Scenario changed to: 66666
2025-01-31 20:30:45,131 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:30:45,144 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:30:45,201 - root - INFO - Well pads table populated successfully.
2025-01-31 20:30:45,217 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:30:45,273 - root - INFO - Well pads table populated successfully.
2025-01-31 20:30:45,273 - root - INFO - Initial data loaded successfully.
2025-01-31 20:30:45,273 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:30:47,288 - root - INFO - Dialog closed successfully
2025-01-31 20:31:04,048 - root - DEBUG - Toolbar setup completed
2025-01-31 20:31:04,048 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:31:04,050 - root - DEBUG - Table setup completed
2025-01-31 20:31:04,050 - root - DEBUG - UI setup completed successfully
2025-01-31 20:31:04,051 - root - DEBUG - Signal connections established
2025-01-31 20:31:04,054 - root - INFO - Scenario changed to: 66666
2025-01-31 20:31:04,055 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:31:04,069 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:31:04,124 - root - INFO - Well pads table populated successfully.
2025-01-31 20:31:04,140 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:31:04,198 - root - INFO - Well pads table populated successfully.
2025-01-31 20:31:04,199 - root - INFO - Initial data loaded successfully.
2025-01-31 20:31:04,199 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:32:13,384 - root - DEBUG - Toolbar setup completed
2025-01-31 20:32:13,385 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:32:13,387 - root - DEBUG - Table setup completed
2025-01-31 20:32:13,387 - root - DEBUG - UI setup completed successfully
2025-01-31 20:32:13,388 - root - DEBUG - Signal connections established
2025-01-31 20:32:13,391 - root - INFO - Scenario changed to: 66666
2025-01-31 20:32:13,391 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:32:13,668 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:32:13,702 - root - INFO - Well pads table populated successfully.
2025-01-31 20:32:13,711 - root - ERROR - Unexpected error while populating row 3: 'PySide6.QtCore.QDate.fromString' called with wrong argument types:
  PySide6.QtCore.QDate.fromString(float, str)
Supported signatures:
  PySide6.QtCore.QDate.fromString(str, PySide6.QtCore.Qt.DateFormat = Instance(Qt.TextDate))
  PySide6.QtCore.QDate.fromString(str, str, PySide6.QtCore.QCalendar)
  PySide6.QtCore.QDate.fromString(str, str, int = 1900)
  PySide6.QtCore.QDate.fromString(str, str, int, PySide6.QtCore.QCalendar)
2025-01-31 20:32:13,739 - root - INFO - Well pads table populated successfully.
2025-01-31 20:32:13,740 - root - INFO - Initial data loaded successfully.
2025-01-31 20:32:13,740 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:34:44,651 - root - INFO - Dialog closed successfully
2025-01-31 20:34:46,758 - root - DEBUG - Toolbar setup completed
2025-01-31 20:34:46,758 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:34:46,760 - root - DEBUG - Table setup completed
2025-01-31 20:34:46,760 - root - DEBUG - UI setup completed successfully
2025-01-31 20:34:46,761 - root - DEBUG - Signal connections established
2025-01-31 20:34:46,791 - root - INFO - Scenario changed to: 66666
2025-01-31 20:34:46,791 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:34:46,866 - root - INFO - Well pads table populated successfully.
2025-01-31 20:34:46,939 - root - INFO - Well pads table populated successfully.
2025-01-31 20:34:46,939 - root - INFO - Initial data loaded successfully.
2025-01-31 20:34:46,939 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:34:57,654 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:34:57,675 - root - ERROR - Error in update_scenario: 'NoneType' object has no attribute 'text'
2025-01-31 20:35:00,184 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:35:00,207 - root - ERROR - Error in update_scenario: 'NoneType' object has no attribute 'text'
2025-01-31 20:36:24,649 - root - DEBUG - Toolbar setup completed
2025-01-31 20:36:24,651 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:36:24,653 - root - DEBUG - Table setup completed
2025-01-31 20:36:24,653 - root - DEBUG - UI setup completed successfully
2025-01-31 20:36:24,654 - root - DEBUG - Signal connections established
2025-01-31 20:36:24,657 - root - INFO - Scenario changed to: 66666
2025-01-31 20:36:24,657 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:36:24,702 - root - INFO - Well pads table populated successfully.
2025-01-31 20:36:24,740 - root - INFO - Well pads table populated successfully.
2025-01-31 20:36:24,741 - root - INFO - Initial data loaded successfully.
2025-01-31 20:36:24,741 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:36:28,910 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:36:28,931 - root - WARNING - Missing required data in row 12
2025-01-31 20:36:28,933 - root - WARNING - Missing required data for well processing
2025-01-31 20:36:28,974 - root - INFO - Well pads table populated successfully.
2025-01-31 20:37:03,978 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:37:04,006 - root - WARNING - Missing required data in row 4
2025-01-31 20:37:04,008 - root - WARNING - Missing required data for well processing
2025-01-31 20:37:04,050 - root - INFO - Well pads table populated successfully.
2025-01-31 20:38:59,414 - root - DEBUG - Toolbar setup completed
2025-01-31 20:38:59,416 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:38:59,418 - root - DEBUG - Table setup completed
2025-01-31 20:38:59,418 - root - DEBUG - UI setup completed successfully
2025-01-31 20:38:59,419 - root - DEBUG - Signal connections established
2025-01-31 20:38:59,423 - root - INFO - Scenario changed to: 66666
2025-01-31 20:38:59,424 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:38:59,469 - root - INFO - Well pads table populated successfully.
2025-01-31 20:38:59,507 - root - INFO - Well pads table populated successfully.
2025-01-31 20:38:59,507 - root - INFO - Initial data loaded successfully.
2025-01-31 20:38:59,508 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:39:02,799 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:39:02,824 - root - WARNING - Missing UWI in row 4
2025-01-31 20:39:02,824 - root - INFO - No valid well pad data to update.
2025-01-31 20:39:14,944 - root - INFO - Dialog closed successfully
2025-01-31 20:39:17,046 - root - DEBUG - Toolbar setup completed
2025-01-31 20:39:17,046 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:39:17,048 - root - DEBUG - Table setup completed
2025-01-31 20:39:17,048 - root - DEBUG - UI setup completed successfully
2025-01-31 20:39:17,049 - root - DEBUG - Signal connections established
2025-01-31 20:39:17,052 - root - INFO - Scenario changed to: 66666
2025-01-31 20:39:17,053 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:39:17,092 - root - INFO - Well pads table populated successfully.
2025-01-31 20:39:17,139 - root - INFO - Well pads table populated successfully.
2025-01-31 20:39:17,139 - root - INFO - Initial data loaded successfully.
2025-01-31 20:39:17,140 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:40:27,523 - root - DEBUG - Toolbar setup completed
2025-01-31 20:40:27,524 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:40:27,527 - root - DEBUG - Table setup completed
2025-01-31 20:40:27,527 - root - DEBUG - UI setup completed successfully
2025-01-31 20:40:27,528 - root - DEBUG - Signal connections established
2025-01-31 20:40:27,530 - root - INFO - Scenario changed to: 66666
2025-01-31 20:40:27,532 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:40:27,584 - root - INFO - Well pads table populated successfully.
2025-01-31 20:40:27,630 - root - INFO - Well pads table populated successfully.
2025-01-31 20:40:27,630 - root - INFO - Initial data loaded successfully.
2025-01-31 20:40:27,630 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:40:30,878 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:40:30,908 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:42:41,794 - root - DEBUG - Toolbar setup completed
2025-01-31 20:42:41,795 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:42:41,798 - root - DEBUG - Table setup completed
2025-01-31 20:42:41,798 - root - DEBUG - UI setup completed successfully
2025-01-31 20:42:41,799 - root - DEBUG - Signal connections established
2025-01-31 20:42:41,803 - root - INFO - Scenario changed to: 66666
2025-01-31 20:42:41,804 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:42:41,843 - root - INFO - Well pads table populated successfully.
2025-01-31 20:42:41,884 - root - INFO - Well pads table populated successfully.
2025-01-31 20:42:41,885 - root - INFO - Initial data loaded successfully.
2025-01-31 20:42:41,885 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:42:45,129 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:42:45,155 - root - INFO - Updated basic data for UWI WP3L1Side1Leg3
2025-01-31 20:42:45,155 - root - WARNING - No valid decline curve found for WP3L1Side1Leg3
2025-01-31 20:42:45,197 - root - INFO - Well pads table populated successfully.
2025-01-31 20:44:32,830 - root - DEBUG - Toolbar setup completed
2025-01-31 20:44:32,831 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:44:32,833 - root - DEBUG - Table setup completed
2025-01-31 20:44:32,833 - root - DEBUG - UI setup completed successfully
2025-01-31 20:44:32,835 - root - DEBUG - Signal connections established
2025-01-31 20:44:32,837 - root - INFO - Scenario changed to: 66666
2025-01-31 20:44:32,838 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:44:32,881 - root - INFO - Well pads table populated successfully.
2025-01-31 20:44:32,918 - root - INFO - Well pads table populated successfully.
2025-01-31 20:44:32,918 - root - INFO - Initial data loaded successfully.
2025-01-31 20:44:32,918 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:44:38,329 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:44:38,357 - root - INFO - Updated basic data for UWI WP3L1Side1Leg3
2025-01-31 20:44:38,358 - root - WARNING - No valid decline curve found for WP3L1Side1Leg3
2025-01-31 20:44:38,401 - root - INFO - Well pads table populated successfully.
2025-01-31 20:46:16,855 - root - DEBUG - Toolbar setup completed
2025-01-31 20:46:16,856 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:46:16,858 - root - DEBUG - Table setup completed
2025-01-31 20:46:16,858 - root - DEBUG - UI setup completed successfully
2025-01-31 20:46:16,859 - root - DEBUG - Signal connections established
2025-01-31 20:46:16,862 - root - INFO - Scenario changed to: 66666
2025-01-31 20:46:16,863 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:46:16,908 - root - INFO - Well pads table populated successfully.
2025-01-31 20:46:16,944 - root - INFO - Well pads table populated successfully.
2025-01-31 20:46:16,944 - root - INFO - Initial data loaded successfully.
2025-01-31 20:46:16,945 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:46:27,265 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:46:27,288 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:47:59,692 - root - DEBUG - Toolbar setup completed
2025-01-31 20:47:59,693 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:47:59,696 - root - DEBUG - Table setup completed
2025-01-31 20:47:59,696 - root - DEBUG - UI setup completed successfully
2025-01-31 20:47:59,697 - root - DEBUG - Signal connections established
2025-01-31 20:47:59,700 - root - INFO - Scenario changed to: 66666
2025-01-31 20:47:59,701 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:47:59,743 - root - INFO - Well pads table populated successfully.
2025-01-31 20:47:59,782 - root - INFO - Well pads table populated successfully.
2025-01-31 20:47:59,782 - root - INFO - Initial data loaded successfully.
2025-01-31 20:47:59,782 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:48:02,779 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:48:02,802 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:50:14,528 - root - DEBUG - Toolbar setup completed
2025-01-31 20:50:14,529 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:50:14,531 - root - DEBUG - Table setup completed
2025-01-31 20:50:14,531 - root - DEBUG - UI setup completed successfully
2025-01-31 20:50:14,533 - root - DEBUG - Signal connections established
2025-01-31 20:50:14,536 - root - INFO - Scenario changed to: 66666
2025-01-31 20:50:14,537 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:50:14,593 - root - INFO - Well pads table populated successfully.
2025-01-31 20:50:14,635 - root - INFO - Well pads table populated successfully.
2025-01-31 20:50:14,635 - root - INFO - Initial data loaded successfully.
2025-01-31 20:50:14,636 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:50:17,257 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:50:17,258 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:52:44,327 - root - DEBUG - Toolbar setup completed
2025-01-31 20:52:44,328 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:52:44,331 - root - DEBUG - Table setup completed
2025-01-31 20:52:44,331 - root - DEBUG - UI setup completed successfully
2025-01-31 20:52:44,333 - root - DEBUG - Signal connections established
2025-01-31 20:52:44,336 - root - INFO - Scenario changed to: 66666
2025-01-31 20:52:44,338 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:52:44,386 - root - INFO - Well pads table populated successfully.
2025-01-31 20:52:44,427 - root - INFO - Well pads table populated successfully.
2025-01-31 20:52:44,427 - root - INFO - Initial data loaded successfully.
2025-01-31 20:52:44,427 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:52:50,809 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:52:53,254 - root - INFO - Modified rows content: {0}
2025-01-31 20:52:54,543 - root - INFO - Modified rows type: <class 'set'>
2025-01-31 20:52:55,547 - root - INFO - Total table rows: 27
2025-01-31 20:53:06,797 - root - INFO - Updating scenario with 1 modified rows
2025-01-31 20:54:19,852 - root - DEBUG - Toolbar setup completed
2025-01-31 20:54:19,853 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:54:19,855 - root - DEBUG - Table setup completed
2025-01-31 20:54:19,855 - root - DEBUG - UI setup completed successfully
2025-01-31 20:54:19,858 - root - DEBUG - Signal connections established
2025-01-31 20:54:19,862 - root - INFO - Scenario changed to: 66666
2025-01-31 20:54:19,863 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:54:19,915 - root - INFO - Well pads table populated successfully.
2025-01-31 20:54:19,956 - root - INFO - Well pads table populated successfully.
2025-01-31 20:54:19,956 - root - INFO - Initial data loaded successfully.
2025-01-31 20:54:19,956 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:54:23,906 - root - INFO - Modified rows content: {0}
2025-01-31 20:54:23,906 - root - INFO - Total table rows: 27
2025-01-31 20:54:23,931 - root - INFO - Processing row index: 0
2025-01-31 20:54:23,931 - root - INFO - Row 0 values:
2025-01-31 20:54:23,931 - root - INFO - UWI: WP8L1Side1Leg1
2025-01-31 20:54:23,932 - root - INFO - Start Date: None
2025-01-31 20:54:23,932 - root - INFO - DC Type: None
2025-01-31 20:54:23,932 - root - INFO - DC: None
2025-01-31 20:54:23,936 - root - INFO - Updated basic data for UWI WP8L1Side1Leg1
2025-01-31 20:54:23,936 - root - WARNING - No valid decline curve found for WP8L1Side1Leg1
2025-01-31 20:54:23,979 - root - INFO - Well pads table populated successfully.
2025-01-31 20:57:09,728 - root - DEBUG - Toolbar setup completed
2025-01-31 20:57:09,729 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:57:09,732 - root - DEBUG - Table setup completed
2025-01-31 20:57:09,733 - root - DEBUG - UI setup completed successfully
2025-01-31 20:57:09,734 - root - DEBUG - Signal connections established
2025-01-31 20:57:09,737 - root - INFO - Scenario changed to: 66666
2025-01-31 20:57:09,739 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:57:09,789 - root - INFO - Well pads table populated successfully.
2025-01-31 20:57:09,832 - root - INFO - Well pads table populated successfully.
2025-01-31 20:57:09,832 - root - INFO - Initial data loaded successfully.
2025-01-31 20:57:09,832 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:57:13,874 - root - INFO - Modified rows content: {0}
2025-01-31 20:57:13,874 - root - INFO - Total table rows: 27
2025-01-31 20:57:13,898 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-01-31 20:59:42,858 - root - DEBUG - Toolbar setup completed
2025-01-31 20:59:42,859 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 20:59:42,861 - root - DEBUG - Table setup completed
2025-01-31 20:59:42,861 - root - DEBUG - UI setup completed successfully
2025-01-31 20:59:42,863 - root - DEBUG - Signal connections established
2025-01-31 20:59:42,866 - root - INFO - Scenario changed to: 66666
2025-01-31 20:59:42,867 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 20:59:42,915 - root - INFO - Well pads table populated successfully.
2025-01-31 20:59:42,956 - root - INFO - Well pads table populated successfully.
2025-01-31 20:59:42,956 - root - INFO - Initial data loaded successfully.
2025-01-31 20:59:42,956 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 20:59:54,292 - root - INFO - Modified rows content: {0}
2025-01-31 20:59:54,292 - root - INFO - Total table rows: 27
2025-01-31 20:59:54,324 - root - INFO - Processing row index: 0
2025-01-31 20:59:54,325 - root - INFO - Row 0 values:
2025-01-31 20:59:54,326 - root - INFO - UWI: WP8L1Side1Leg1
2025-01-31 20:59:54,326 - root - INFO - Start Date: 2025-01-31
2025-01-31 20:59:54,326 - root - INFO - DC Type: Saved DC
2025-01-31 20:59:54,326 - root - INFO - DC: Art
2025-01-31 20:59:54,329 - root - INFO - Updated basic data for UWI WP8L1Side1Leg1
2025-01-31 20:59:54,386 - root - ERROR - Error processing well WP8L1Side1Leg1: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2025-01-31 20:59:54,437 - root - INFO - Well pads table populated successfully.
2025-01-31 21:01:47,496 - root - DEBUG - Toolbar setup completed
2025-01-31 21:01:47,498 - root - DEBUG - Scenario dropdown setup completed
2025-01-31 21:01:47,499 - root - DEBUG - Table setup completed
2025-01-31 21:01:47,500 - root - DEBUG - UI setup completed successfully
2025-01-31 21:01:47,500 - root - DEBUG - Signal connections established
2025-01-31 21:01:47,504 - root - INFO - Scenario changed to: 66666
2025-01-31 21:01:47,505 - root - DEBUG - UI updated for scenario: 66666
2025-01-31 21:01:47,547 - root - INFO - Well pads table populated successfully.
2025-01-31 21:01:47,594 - root - INFO - Well pads table populated successfully.
2025-01-31 21:01:47,594 - root - INFO - Initial data loaded successfully.
2025-01-31 21:01:47,594 - root - INFO - PUDPropertiesDialog initialized
2025-01-31 21:01:52,004 - root - INFO - Processing row index: 0
2025-01-31 21:01:52,004 - root - INFO - Row 0 values:
2025-01-31 21:01:52,004 - root - INFO - UWI: WP8L1Side1Leg1
2025-01-31 21:01:52,004 - root - INFO - Start Date: 2025-01-31
2025-01-31 21:01:52,004 - root - INFO - DC Type: Saved DC
2025-01-31 21:01:52,004 - root - INFO - DC: Art
2025-01-31 21:01:52,008 - root - INFO - Updated basic data for UWI WP8L1Side1Leg1
2025-01-31 21:01:53,419 - root - INFO - Well pads table populated successfully.
2025-01-31 21:02:20,957 - root - INFO - Scenario 'ffdasdfasdf' added successfully with ID 24. Active: 0
2025-01-31 21:02:20,972 - root - INFO - Scenario changed to: ffdasdfasdf
2025-01-31 21:02:20,973 - root - DEBUG - UI updated for scenario: ffdasdfasdf
2025-01-31 21:02:20,975 - root - INFO - Well pads table populated successfully.
2025-01-31 21:02:21,010 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-01-31 21:02:21,018 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-01-31 21:02:21,026 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-01-31 21:02:21,033 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-01-31 21:02:21,040 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-01-31 21:02:21,048 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-01-31 21:02:21,054 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-01-31 21:02:21,062 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-01-31 21:02:21,069 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-01-31 21:02:21,076 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-01-31 21:02:21,083 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-01-31 21:02:21,090 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-01-31 21:02:21,097 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-01-31 21:02:21,104 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-01-31 21:02:21,113 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-01-31 21:02:21,119 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-01-31 21:02:21,125 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-01-31 21:02:21,132 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-01-31 21:02:21,137 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-01-31 21:02:21,142 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-01-31 21:02:21,149 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-01-31 21:02:21,156 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-01-31 21:02:21,161 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-01-31 21:02:21,168 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-01-31 21:02:21,174 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-01-31 21:02:21,179 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-01-31 21:02:21,185 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-01-31 21:02:24,405 - root - INFO - Scenario 24 updated with 27 wells.
2025-01-31 21:02:25,996 - root - INFO - Processed 5/27 wells
2025-01-31 21:02:27,539 - root - INFO - Processed 10/27 wells
2025-01-31 21:02:29,047 - root - INFO - Processed 15/27 wells
2025-01-31 21:02:30,492 - root - INFO - Processed 20/27 wells
2025-01-31 21:02:31,945 - root - INFO - Processed 25/27 wells
2025-01-31 21:02:34,359 - root - INFO - Well pads table populated successfully.
2025-02-03 11:26:34,239 - root - DEBUG - Toolbar setup completed
2025-02-03 11:26:34,241 - root - DEBUG - Scenario dropdown setup completed
2025-02-03 11:26:34,254 - root - DEBUG - Table setup completed
2025-02-03 11:26:34,255 - root - DEBUG - UI setup completed successfully
2025-02-03 11:26:34,256 - root - DEBUG - Signal connections established
2025-02-03 11:26:34,259 - root - INFO - No scenarios to load.
2025-02-03 11:26:34,259 - root - INFO - PUDPropertiesDialog initialized
2025-02-03 11:26:43,855 - root - INFO - Dialog closed successfully
2025-02-03 11:27:16,302 - root - DEBUG - Toolbar setup completed
2025-02-03 11:27:16,302 - root - DEBUG - Scenario dropdown setup completed
2025-02-03 11:27:16,304 - root - DEBUG - Table setup completed
2025-02-03 11:27:16,304 - root - DEBUG - UI setup completed successfully
2025-02-03 11:27:16,305 - root - DEBUG - Signal connections established
2025-02-03 11:27:16,307 - root - INFO - No scenarios to load.
2025-02-03 11:27:16,307 - root - INFO - PUDPropertiesDialog initialized
2025-02-03 11:27:34,199 - root - INFO - Scenario 'Frist' added successfully with ID 2. Active: 0
2025-02-03 11:27:34,250 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-02-03 11:27:34,258 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-02-03 11:27:34,265 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-02-03 11:27:34,272 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-02-03 11:27:34,279 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-02-03 11:27:34,286 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-02-03 11:27:34,292 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-02-03 11:27:34,300 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-02-03 11:27:34,308 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-02-03 11:27:34,316 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-02-03 11:27:34,322 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-02-03 11:27:34,328 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-02-03 11:27:34,334 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-02-03 11:27:34,341 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-02-03 11:27:34,347 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-02-03 11:27:34,353 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-02-03 11:27:34,360 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-02-03 11:27:34,367 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-02-03 11:27:34,373 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-02-03 11:27:34,378 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-02-03 11:27:34,384 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-02-03 11:27:34,390 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-02-03 11:27:34,396 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-02-03 11:27:34,402 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-02-03 11:27:34,409 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-02-03 11:27:34,414 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-02-03 11:27:34,420 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-02-03 11:27:35,975 - root - INFO - Scenario 2 updated with 27 wells.
2025-02-03 11:27:37,385 - root - INFO - Processed 5/27 wells
2025-02-03 11:27:38,779 - root - INFO - Processed 10/27 wells
2025-02-03 11:27:40,156 - root - INFO - Processed 15/27 wells
2025-02-03 11:27:41,544 - root - INFO - Processed 20/27 wells
2025-02-03 11:27:42,925 - root - INFO - Processed 25/27 wells
2025-02-03 11:27:45,784 - root - INFO - Well pads table populated successfully.
2025-02-03 11:27:53,697 - root - INFO - Dialog closed successfully
2025-02-03 13:18:37,519 - root - DEBUG - Toolbar setup completed
2025-02-03 13:18:37,522 - root - DEBUG - Scenario dropdown setup completed
2025-02-03 13:18:37,534 - root - DEBUG - Table setup completed
2025-02-03 13:18:37,535 - root - DEBUG - UI setup completed successfully
2025-02-03 13:18:37,536 - root - DEBUG - Signal connections established
2025-02-03 13:18:37,611 - root - INFO - Well pads table populated successfully.
2025-02-03 13:18:37,611 - root - INFO - Initial data loaded successfully.
2025-02-03 13:18:37,611 - root - INFO - PUDPropertiesDialog initialized
2025-02-03 13:18:38,815 - root - INFO - Dialog closed successfully
2025-02-04 09:21:25,535 - root - DEBUG - Toolbar setup completed
2025-02-04 09:21:25,537 - root - DEBUG - Scenario dropdown setup completed
2025-02-04 09:21:25,539 - root - DEBUG - Table setup completed
2025-02-04 09:21:25,539 - root - DEBUG - UI setup completed successfully
2025-02-04 09:21:25,542 - root - DEBUG - Signal connections established
2025-02-04 09:21:25,543 - root - INFO - No scenarios to load.
2025-02-04 09:21:25,543 - root - INFO - PUDPropertiesDialog initialized
2025-02-04 09:21:36,209 - root - INFO - Scenario 'Frist' added successfully with ID 2. Active: 0
2025-02-04 09:21:36,269 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-02-04 09:21:36,274 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-02-04 09:21:36,282 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-02-04 09:21:36,290 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-02-04 09:21:36,298 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-02-04 09:21:36,305 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-02-04 09:21:36,313 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-02-04 09:21:36,319 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-02-04 09:21:36,326 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-02-04 09:21:36,333 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-02-04 09:21:36,342 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-02-04 09:21:36,350 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-02-04 09:21:36,357 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-02-04 09:21:36,363 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-02-04 09:21:36,368 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-02-04 09:21:36,374 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-02-04 09:21:36,381 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-02-04 09:21:36,386 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-02-04 09:21:36,394 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-02-04 09:21:36,400 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-02-04 09:21:36,406 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-02-04 09:21:36,412 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-02-04 09:21:36,418 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-02-04 09:21:36,423 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-02-04 09:21:36,428 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-02-04 09:21:36,435 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-02-04 09:21:36,439 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-02-04 09:21:38,245 - root - INFO - Scenario 2 updated with 27 wells.
2025-02-04 09:21:39,790 - root - INFO - Processed 5/27 wells
2025-02-04 09:21:41,220 - root - INFO - Processed 10/27 wells
2025-02-04 09:21:42,653 - root - INFO - Processed 15/27 wells
2025-02-04 09:21:44,085 - root - INFO - Processed 20/27 wells
2025-02-04 09:21:45,519 - root - INFO - Processed 25/27 wells
2025-02-04 09:21:49,345 - root - INFO - Well pads table populated successfully.
2025-02-04 09:21:51,738 - root - INFO - Dialog closed successfully
2025-02-13 09:22:27,169 - root - DEBUG - Toolbar setup completed
2025-02-13 09:22:27,169 - root - DEBUG - Scenario dropdown setup completed
2025-02-13 09:22:27,173 - root - DEBUG - Table setup completed
2025-02-13 09:22:27,173 - root - DEBUG - UI setup completed successfully
2025-02-13 09:22:27,174 - root - DEBUG - Signal connections established
2025-02-13 09:22:27,176 - root - INFO - No scenarios to load.
2025-02-13 09:22:27,176 - root - INFO - PUDPropertiesDialog initialized
2025-02-13 09:22:30,931 - root - INFO - Dialog closed successfully
2025-02-13 09:22:44,290 - root - DEBUG - Toolbar setup completed
2025-02-13 09:22:44,290 - root - DEBUG - Scenario dropdown setup completed
2025-02-13 09:22:44,292 - root - DEBUG - Table setup completed
2025-02-13 09:22:44,292 - root - DEBUG - UI setup completed successfully
2025-02-13 09:22:44,293 - root - DEBUG - Signal connections established
2025-02-13 09:22:44,314 - root - INFO - No scenarios to load.
2025-02-13 09:22:44,315 - root - INFO - PUDPropertiesDialog initialized
2025-02-13 09:22:50,470 - root - INFO - Dialog closed successfully
2025-02-13 09:23:09,175 - root - DEBUG - Toolbar setup completed
2025-02-13 09:23:09,176 - root - DEBUG - Scenario dropdown setup completed
2025-02-13 09:23:09,177 - root - DEBUG - Table setup completed
2025-02-13 09:23:09,177 - root - DEBUG - UI setup completed successfully
2025-02-13 09:23:09,178 - root - DEBUG - Signal connections established
2025-02-13 09:23:09,182 - root - INFO - No scenarios to load.
2025-02-13 09:23:09,183 - root - INFO - PUDPropertiesDialog initialized
2025-02-13 09:24:14,927 - root - INFO - Scenario 'WellScen1' added successfully with ID 2. Active: 0
2025-02-13 09:24:14,972 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-02-13 09:24:14,978 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-02-13 09:24:14,986 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-02-13 09:24:14,992 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-02-13 09:24:14,998 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-02-13 09:24:15,006 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-02-13 09:24:15,013 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-02-13 09:24:15,019 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-02-13 09:24:15,026 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-02-13 09:24:15,033 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-02-13 09:24:15,040 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-02-13 09:24:15,046 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-02-13 09:24:15,053 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-02-13 09:24:15,058 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-02-13 09:24:15,065 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-02-13 09:24:15,072 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-02-13 09:24:15,078 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-02-13 09:24:15,085 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-02-13 09:24:15,091 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-02-13 09:24:15,099 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-02-13 09:24:15,106 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-02-13 09:24:15,113 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-02-13 09:24:15,118 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-02-13 09:24:15,124 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-02-13 09:24:15,131 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-02-13 09:24:15,136 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-02-13 09:24:15,142 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-02-13 09:24:16,349 - root - INFO - Scenario 2 updated with 27 wells.
2025-02-13 09:24:17,821 - root - INFO - Processed 5/27 wells
2025-02-13 09:24:19,253 - root - INFO - Processed 10/27 wells
2025-02-13 09:24:20,699 - root - INFO - Processed 15/27 wells
2025-02-13 09:24:22,157 - root - INFO - Processed 20/27 wells
2025-02-13 09:24:23,628 - root - INFO - Processed 25/27 wells
2025-02-13 09:24:26,013 - root - INFO - Well pads table populated successfully.
2025-02-13 09:24:38,442 - root - INFO - Dialog closed successfully
2025-02-13 09:27:01,198 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-13 09:27:01,199 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,199 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,199 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,199 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,199 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,200 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,200 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,200 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,200 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,200 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,201 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,202 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,202 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,202 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 09:27:01,202 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,202 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,203 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,203 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,203 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,204 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,204 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 09:27:01,204 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,204 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,204 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,205 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,205 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,205 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 09:27:01,205 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,205 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,205 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,207 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,208 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:01,208 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,208 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,208 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,208 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:01,209 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,209 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,209 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,209 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,209 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,210 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,210 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,210 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 09:27:01,210 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,210 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,210 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,211 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,211 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,211 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,211 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,211 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,213 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,213 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:01,213 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,213 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 09:27:01,213 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,214 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,214 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,214 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,214 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,214 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:01,214 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,215 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,216 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,216 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,216 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,216 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,216 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,216 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,217 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:01,217 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,217 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,217 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,218 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,218 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,218 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,218 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,218 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,219 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 09:27:01,219 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,219 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,219 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,220 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,220 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,220 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:01,220 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,220 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,220 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,221 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,221 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,221 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:01,221 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 09:27:01,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 09:27:01,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:01,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:01,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 09:27:01,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 09:27:01,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:01,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,250 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,251 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,251 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,251 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,251 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,251 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,252 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,252 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,252 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 09:27:01,252 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,253 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:01,253 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,253 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,253 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,253 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,253 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:01,254 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,254 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,254 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,254 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,254 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,254 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,255 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,255 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,255 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,255 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,255 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,255 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:01,256 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,256 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,256 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,256 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,256 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,257 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,258 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,258 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,258 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,258 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,260 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,260 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,260 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:01,260 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,260 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,260 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,261 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,262 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,262 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,262 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,262 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,262 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 09:27:01,262 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,263 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,264 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:01,264 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,264 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,264 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,264 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,264 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 09:27:01,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:01,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:01,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:01,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 09:27:01,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:01,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:01,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 09:27:01,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:01,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 09:27:01,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:01,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 09:27:01,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:01,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:01,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:01,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:01,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:01,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:01,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:01,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:01,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,295 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,295 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,295 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,295 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,295 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:01,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:01,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 09:27:01,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 09:27:01,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:01,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:01,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:01,298 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:01,298 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 09:27:02,565 - matplotlib.colorbar - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x000001C1EFB6E510>
2025-02-13 09:27:02,989 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
2025-02-13 09:27:02,989 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,990 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,990 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,990 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,990 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,990 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,991 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,991 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,991 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,991 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,992 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,992 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,992 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:02,992 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 09:27:02,992 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:02,993 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:02,993 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,993 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,993 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,993 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 09:27:02,994 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,994 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:02,994 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:02,994 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,994 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,995 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,995 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 09:27:02,995 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,995 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,995 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,996 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,996 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,996 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 09:27:02,996 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,997 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,997 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:02,997 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:02,997 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:02,997 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,998 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,998 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,998 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:02,998 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:02,999 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:02,999 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:02,999 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:02,999 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:02,999 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:02,999 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,001 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,001 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,001 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,001 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,001 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 09:27:03,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,003 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,003 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,003 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,003 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,004 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,004 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,004 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,004 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 09:27:03,004 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,005 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,005 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,005 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,005 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,005 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,008 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,008 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,008 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,008 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,008 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,010 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,010 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,010 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,010 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,010 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,010 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 09:27:03,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,012 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,012 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:03,012 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,012 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,012 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,013 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,013 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,013 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,013 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,013 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,014 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,014 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,014 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,014 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,014 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,015 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,015 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,015 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,015 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,015 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,016 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,016 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,016 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,016 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:03,018 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,018 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,018 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,018 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,019 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,019 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,019 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,019 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,019 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,019 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,022 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 09:27:03,022 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 09:27:03,022 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,022 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,022 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,022 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,023 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,023 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,023 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,023 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,023 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,023 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,025 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,025 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,025 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,025 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,026 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,026 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,026 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,026 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,026 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,026 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,027 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,028 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,028 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,028 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,028 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,028 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,028 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,029 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,029 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,029 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,029 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,029 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,029 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,030 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,030 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,030 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,030 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,030 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,030 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,031 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,031 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,031 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 09:27:03,031 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,031 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,033 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,033 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 09:27:03,033 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,033 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 09:27:03,033 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,034 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,034 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,034 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:03,034 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,034 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 09:27:03,034 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 09:27:03,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:03,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 09:27:03,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 09:27:03,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 09:27:03,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:03,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 09:27:03,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 09:27:03,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 09:27:03,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:03,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:03,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,088 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 09:27:03,344 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 6.8.1.
2025-02-13 09:27:03,629 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-02-13 09:27:03,629 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,630 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,631 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,632 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 09:27:03,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,633 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,634 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 09:27:03,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,635 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 09:27:03,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,637 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 09:27:03,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,638 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,639 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:03,640 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:03,641 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,642 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 09:27:03,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 09:27:03,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,647 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:03,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,658 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:03,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 09:27:03,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 09:27:03,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 09:27:03,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 09:27:03,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:03,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 09:27:03,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,677 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 09:27:03,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:03,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 09:27:03,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,695 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 09:27:03,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 09:27:03,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:03,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:03,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 09:27:03,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 09:27:03,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,714 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 09:27:03,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,717 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 09:27:03,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 09:27:03,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 09:27:03,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 09:27:03,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 09:27:03,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 09:27:03,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 09:27:03,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 09:27:03,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 09:27:03,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 09:27:03,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 09:27:03,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 09:27:03,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 09:27:03,735 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 10:52:20,705 - root - DEBUG - Toolbar setup completed
2025-02-13 10:52:20,706 - root - DEBUG - Scenario dropdown setup completed
2025-02-13 10:52:20,710 - root - DEBUG - Table setup completed
2025-02-13 10:52:20,710 - root - DEBUG - UI setup completed successfully
2025-02-13 10:52:20,711 - root - DEBUG - Signal connections established
2025-02-13 10:52:20,714 - root - INFO - No scenarios to load.
2025-02-13 10:52:20,714 - root - INFO - PUDPropertiesDialog initialized
2025-02-13 10:52:30,671 - root - INFO - Dialog closed successfully
2025-02-13 10:52:41,224 - root - DEBUG - Toolbar setup completed
2025-02-13 10:52:41,224 - root - DEBUG - Scenario dropdown setup completed
2025-02-13 10:52:41,226 - root - DEBUG - Table setup completed
2025-02-13 10:52:41,226 - root - DEBUG - UI setup completed successfully
2025-02-13 10:52:41,226 - root - DEBUG - Signal connections established
2025-02-13 10:52:41,234 - root - INFO - No scenarios to load.
2025-02-13 10:52:41,234 - root - INFO - PUDPropertiesDialog initialized
2025-02-13 10:53:27,646 - root - INFO - Scenario 'WEllpad' added successfully with ID 2. Active: 0
2025-02-13 10:53:27,698 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg1
2025-02-13 10:53:27,706 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg1
2025-02-13 10:53:27,712 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg1
2025-02-13 10:53:27,720 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg1
2025-02-13 10:53:27,727 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg1
2025-02-13 10:53:27,734 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg1
2025-02-13 10:53:27,741 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg1
2025-02-13 10:53:27,749 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg1
2025-02-13 10:53:27,756 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg1
2025-02-13 10:53:27,765 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg2
2025-02-13 10:53:27,772 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg2
2025-02-13 10:53:27,780 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg2
2025-02-13 10:53:27,787 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg2
2025-02-13 10:53:27,793 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg2
2025-02-13 10:53:27,801 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg2
2025-02-13 10:53:27,807 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg2
2025-02-13 10:53:27,815 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg2
2025-02-13 10:53:27,822 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg2
2025-02-13 10:53:27,828 - root - INFO - Inserting new well pad for UWI: WP7L1Side1Leg3
2025-02-13 10:53:27,836 - root - INFO - Inserting new well pad for UWI: WP2L1Side1Leg3
2025-02-13 10:53:27,843 - root - INFO - Inserting new well pad for UWI: WP8L1Side1Leg3
2025-02-13 10:53:27,850 - root - INFO - Inserting new well pad for UWI: WP9L1Side1Leg3
2025-02-13 10:53:27,856 - root - INFO - Inserting new well pad for UWI: WP5L1Side1Leg3
2025-02-13 10:53:27,863 - root - INFO - Inserting new well pad for UWI: WP6L1Side1Leg3
2025-02-13 10:53:27,869 - root - INFO - Inserting new well pad for UWI: WP4L1Side1Leg3
2025-02-13 10:53:27,874 - root - INFO - Inserting new well pad for UWI: WP3L1Side1Leg3
2025-02-13 10:53:27,882 - root - INFO - Inserting new well pad for UWI: WP1L1Side1Leg3
2025-02-13 10:53:28,844 - root - INFO - Scenario 2 updated with 27 wells.
2025-02-13 10:53:30,593 - root - INFO - Processed 5/27 wells
2025-02-13 10:53:32,329 - root - INFO - Processed 10/27 wells
2025-02-13 10:53:34,064 - root - INFO - Processed 15/27 wells
2025-02-13 10:53:35,798 - root - INFO - Processed 20/27 wells
2025-02-13 10:53:37,546 - root - INFO - Processed 25/27 wells
2025-02-13 10:53:39,814 - root - INFO - Well pads table populated successfully.
2025-02-13 10:53:48,262 - root - INFO - Dialog closed successfully
2025-02-13 10:55:09,343 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-13 10:55:09,344 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,344 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,345 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,345 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,345 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 10:55:09,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 10:55:09,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,351 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,351 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,351 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 10:55:09,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 10:55:09,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,356 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:09,356 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:09,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 10:55:09,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,360 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,360 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,360 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,360 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:09,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 10:55:09,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:09,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:09,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:09,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:09,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:09,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:09,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 10:55:09,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 10:55:09,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:09,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:09,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,395 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,395 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,395 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,395 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 10:55:09,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:09,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 10:55:09,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 10:55:09,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 10:55:09,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:09,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:09,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,417 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,417 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,417 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,417 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,418 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:09,418 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,418 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,418 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,419 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,419 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,419 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,419 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,419 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,419 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,421 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,421 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,421 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,421 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,421 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,421 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,422 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,422 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,422 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,422 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:09,422 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,423 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,423 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,423 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,423 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,424 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,424 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,424 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,424 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,425 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,426 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,426 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,426 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,426 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,426 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,427 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,427 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:09,427 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,427 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,427 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,428 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,430 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,430 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,430 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 10:55:09,431 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:09,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,432 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,433 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 10:55:09,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:09,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:09,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 10:55:09,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:09,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:09,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:09,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:09,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:09,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,454 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:09,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:09,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:09,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:09,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:09,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:09,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,465 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,466 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:09,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:09,468 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:09,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 10:55:09,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,469 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:09,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:09,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:09,470 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:09,471 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 10:55:10,398 - matplotlib.colorbar - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x00000206DE93D850>
2025-02-13 10:55:10,731 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
2025-02-13 10:55:10,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 10:55:10,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 10:55:10,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 10:55:10,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 10:55:10,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:10,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:10,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 10:55:10,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:10,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 10:55:10,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:10,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:10,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:10,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:10,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,760 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,764 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 10:55:10,767 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 10:55:10,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,772 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:10,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:10,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 10:55:10,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 10:55:10,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 10:55:10,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:10,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 10:55:10,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 10:55:10,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:10,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 10:55:10,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:10,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:10,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:10,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 10:55:10,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:10,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 10:55:10,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:10,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:10,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:10,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 10:55:10,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:10,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:10,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 10:55:10,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:10,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:10,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:10,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,825 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,827 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:10,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:10,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,835 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:10,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,837 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:10,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:10,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:10,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:10,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:10,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:10,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:10,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:10,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:10,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:10,850 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 10:55:11,278 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-02-13 10:55:11,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 10:55:11,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 10:55:11,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 10:55:11,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 10:55:11,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:11,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:11,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 10:55:11,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,294 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,296 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 10:55:11,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,297 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,299 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,299 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,299 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,299 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,300 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,300 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,300 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,300 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,301 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,301 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,301 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,302 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,302 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,302 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,302 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,303 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,303 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,303 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,304 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,304 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,304 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,304 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,304 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,306 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,306 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,306 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,306 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:11,306 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,307 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,307 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,307 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,307 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,309 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:11,309 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,309 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,309 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,310 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,310 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,310 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,310 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,311 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,311 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,311 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,311 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,312 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,312 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,312 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,312 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,312 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,313 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,313 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,313 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,313 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,313 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,314 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,314 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,314 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,314 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,315 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,315 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,316 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:11,316 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,316 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,316 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,316 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,317 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,317 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,317 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,317 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,318 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,318 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,318 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,318 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,320 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,320 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,320 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,320 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,320 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,321 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,321 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,321 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,321 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,321 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,322 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 10:55:11,322 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 10:55:11,322 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,322 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,323 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,323 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,323 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,323 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,324 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,324 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,324 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,324 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,325 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,325 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,325 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,326 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,326 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,326 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,326 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,327 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,327 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,327 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,327 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,328 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,328 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,328 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,330 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,330 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,330 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,330 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,331 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,331 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,331 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,331 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,332 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,332 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,332 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,333 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,333 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,333 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,333 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,334 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,334 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,334 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,334 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,334 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,334 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,335 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,335 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,335 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 10:55:11,335 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,336 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,337 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,337 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 10:55:11,337 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,337 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 10:55:11,338 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,338 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,338 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,339 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:11,339 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,339 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 10:55:11,340 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,340 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,340 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,340 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,341 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,341 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,341 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 10:55:11,342 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,342 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,342 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,343 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,343 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,343 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,343 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,344 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,344 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,344 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,345 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,345 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,345 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,346 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,347 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,347 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,347 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,347 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,347 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:11,348 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,349 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,350 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,351 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,351 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,351 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,352 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,353 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 10:55:11,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,354 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,355 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,356 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,356 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,356 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,356 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,357 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,358 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,359 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,361 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,362 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,363 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,364 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,365 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,365 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,365 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,365 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,366 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,368 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,369 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,370 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 10:55:11,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:11,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 10:55:11,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:11,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:11,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 10:55:11,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,387 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:11,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:11,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:11,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,394 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,395 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,395 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:11,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,401 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:11,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:11,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 10:55:11,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,414 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 10:55:11,643 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0.
2025-02-13 10:55:11,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,644 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,645 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,646 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 10:55:11,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,648 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 10:55:11,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,649 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 10:55:11,650 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,651 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 10:55:11,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,653 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,654 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:11,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,655 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:11,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,656 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 10:55:11,657 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,659 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,660 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 10:55:11,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,661 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,662 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,663 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,665 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,666 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,667 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,668 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:11,669 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,670 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:11,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,671 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,672 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,674 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,675 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,676 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,678 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:11,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,679 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,680 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,681 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,682 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,683 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,684 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 10:55:11,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 10:55:11,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,685 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,686 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,688 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,694 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 10:55:11,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 10:55:11,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 10:55:11,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:11,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 10:55:11,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,702 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,703 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 10:55:11,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,704 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,705 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,706 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,707 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,708 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:11,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,709 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,710 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,711 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,712 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,713 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 10:55:11,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,715 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,716 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,719 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 10:55:11,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 10:55:11,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:55:11,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 10:55:11,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:11,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:11,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 10:55:11,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:11,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,751 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:55:11,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:55:11,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,758 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,759 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:55:11,761 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:55:11,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,762 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,763 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,765 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:55:11,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:55:11,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,766 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,768 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,769 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,770 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:55:11,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:55:11,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,771 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:55:11,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 10:55:11,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:55:11,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:55:11,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:55:11,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:55:11,774 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 10:56:25,813 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.0.
2025-02-13 10:56:25,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-13 10:56:25,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-13 10:56:25,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-13 10:56:25,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-13 10:56:25,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,823 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:56:25,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Italic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:56:25,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,824 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,826 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-13 10:56:25,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,828 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome4.7-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,829 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Bold.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:56:25,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-13 10:56:25,830 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDMRR.TTF', name='PT Bold Mirror', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Regular.ttf', name='Zilla Slab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,831 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:56:25,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDSHD.TTF', name='Simple Indust Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,832 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH2.TTF', name='DecoType Naskh Variants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFOUTSHD.TTF', name='Kufi Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,833 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:56:25,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,834 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:56:25,836 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,838 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Italic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:56:25,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH1.TTF', name='DecoType Naskh Special', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,839 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,840 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:56:25,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,841 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,842 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,843 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons6-webfont.ttf', name='Material Design Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,844 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,845 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MUDIR.TTF', name='Mudir MT', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:56:25,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,846 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Italic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\phosphor.ttf', name='Phosphor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTHULUTH.TTF', name='DecoType Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPOUTPAT.TTF', name='Simple Outline Pat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Regular.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBR.TTF', name='Akhbar MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH0.TTF', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDDSK.TTF', name='PT Bold Dusky', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-13 10:56:25,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-13 10:56:25,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\elusiveicons-webfont.ttf', name='elusiveicons', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Regular.ttf', name='Open Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANBNT.TTF', name='Diwani Bent', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-BoldItalic.ttf', name='Cormorant Infant', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSH2.TTF', name='Diwani Simple Outline 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDOUTSH.TTF', name='Old Antic Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNOUTSH.TTF', name='Diwani Outline Shaded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:56:25,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:56:25,860 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-Italic-VariableFont_wght.ttf', name='Merriweather Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Italic.ttf', name='Open Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH4.TTF', name='DecoType Naskh Swashes', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CormorantInfant-Bold.ttf', name='Cormorant Infant', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-BoldItalic.ttf', name='Roboto', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-13 10:56:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTSEPBAL.TTF', name='PT Separated Baloon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-13 10:56:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-13 10:56:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:56:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-13 10:56:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-13 10:56:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\remixicon.ttf', name='remixicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Regular.ttf', name='Caveat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\codicon.ttf', name='codicon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLSSTR.TTF', name='PT Bold Stars', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-brands-webfont.ttf', name='Font Awesome 5 Brands', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Bold.ttf', name='Roboto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\materialdesignicons5-webfont.ttf', name='Material Design Icons 5.9.55', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-BoldItalic.ttf', name='Roboto Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:56:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AKHBRBD.TTF', name='Akhbar MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Italic.ttf', name='Roboto', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDARC.TTF', name='PT Bold Arch', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Regular.ttf', name='Roboto', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZWAdobeF.TTF', name='ZWAdobeF', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-13 10:56:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DTNASKH3.TTF', name='DecoType Naskh Extensions', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:56:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARABSQ.TTF', name='AGA Arabesque', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-solid-webfont.ttf', name='Font Awesome 5 Free Solid', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:56:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DIWANLTR.TTF', name='Diwani Letter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDHAD.TTF', name='PT Bold Heading', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:56:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Bold.ttf', name='Zilla Slab', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDRUL.TTF', name='PT Simple Bold Ruled', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITLOUTAR.TTF', name='Italic Outline Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANOUT.TTF', name='Old Antic Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPINDOUT.TTF', name='Simple Indust Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-BoldItalic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:56:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-Bold.ttf', name='Open Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-13 10:56:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:56:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MerriweatherSans-VariableFont_wght.ttf', name='Merriweather Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,896 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,896 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPSTR.TTF', name='Diwani Simple Striped', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,897 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,898 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,898 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ZillaSlab-Italic.ttf', name='Zilla Slab', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,898 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,898 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPOUT.TTF', name='Farsi Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,898 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,898 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OpenSans-BoldItalic.ttf', name='Open Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,899 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-13 10:56:25,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,900 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:56:25,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,903 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANDEC.TTF', name='Old Antic Decorative', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:56:25,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-13 10:56:25,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-13 10:56:25,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KOUFIBD.TTF', name='Monotype Koufi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KFEXTOUT.TTF', name='Kufi Extended Outline', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:56:25,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-BoldItalic.ttf', name='Barlow Condensed', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:56:25,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-13 10:56:25,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:56:25,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:56:25,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:56:25,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caveat-Bold.ttf', name='Caveat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DWNSPOUT.TTF', name='Diwani Simple Outline', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Regular.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RobotoCondensed-Regular.ttf', name='Roboto Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-13 10:56:25,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-13 10:56:25,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARBSQDTP.TTF', name='AGA Arabesque Desktop', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Roboto-Black.ttf', name='Roboto Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-13 10:56:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEDITFNT.TTF', name='Led Italic Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-13 10:56:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-13 10:56:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,931 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,931 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,931 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,931 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDANBLD.TTF', name='Old Antic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BarlowCondensed-Bold.ttf', name='Barlow Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-13 10:56:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-13 10:56:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PTBLDBRK.TTF', name='PT Bold Broken', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\jerem\\AppData\\Local\\Microsoft\\Windows\\Fonts\\fontawesome5-regular-webfont.ttf', name='Font Awesome 5 Free Regular', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-13 10:56:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-13 10:56:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSSPBL.TTF', name='Farsi Simple Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-13 10:56:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SPBLDJUT.TTF', name='Simple Bold Jut Out', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-13 10:56:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-13 10:56:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-13 10:56:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BLDITLAR.TTF', name='Bold Italic Art', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-13 10:56:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-13 10:56:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-13 10:56:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-13 10:56:25,943 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.0 to DejaVu Sans ('C:\\Users\\jerem\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-13 11:03:49,497 - root - DEBUG - Toolbar setup completed
2025-02-13 11:03:49,497 - root - DEBUG - Scenario dropdown setup completed
2025-02-13 11:03:49,499 - root - DEBUG - Table setup completed
2025-02-13 11:03:49,499 - root - DEBUG - UI setup completed successfully
2025-02-13 11:03:49,500 - root - DEBUG - Signal connections established
2025-02-13 11:03:49,564 - root - INFO - Well pads table populated successfully.
2025-02-13 11:03:49,565 - root - INFO - Initial data loaded successfully.
2025-02-13 11:03:49,565 - root - INFO - PUDPropertiesDialog initialized
2025-02-13 11:04:00,289 - root - INFO - Dialog closed successfully
2025-02-13 11:05:59,179 - matplotlib.colorbar - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x00000206EB349CA0>
2025-02-15 14:32:21,158 - root - DEBUG - Toolbar setup completed
2025-02-15 14:32:21,159 - root - DEBUG - Scenario dropdown setup completed
2025-02-15 14:32:21,163 - root - DEBUG - Table setup completed
2025-02-15 14:32:21,163 - root - DEBUG - UI setup completed successfully
2025-02-15 14:32:21,164 - root - DEBUG - Signal connections established
2025-02-15 14:32:21,167 - root - INFO - No scenarios to load.
2025-02-15 14:32:21,167 - root - INFO - PUDPropertiesDialog initialized
2025-02-15 14:32:22,903 - root - INFO - Dialog closed successfully
2025-02-15 16:48:37,947 - root - DEBUG - Toolbar setup completed
2025-02-15 16:48:37,963 - root - DEBUG - Scenario dropdown setup completed
2025-02-15 16:48:37,976 - root - DEBUG - Table setup completed
2025-02-15 16:48:37,976 - root - DEBUG - UI setup completed successfully
2025-02-15 16:48:37,980 - root - DEBUG - Signal connections established
2025-02-15 16:48:37,984 - root - INFO - No scenarios to load.
2025-02-15 16:48:37,984 - root - INFO - PUDPropertiesDialog initialized
2025-02-15 16:48:39,494 - root - INFO - Dialog closed successfully
2025-02-17 14:51:07,622 - root - DEBUG - Toolbar setup completed
2025-02-17 14:51:07,624 - root - DEBUG - Scenario dropdown setup completed
2025-02-17 14:51:07,629 - root - DEBUG - Table setup completed
2025-02-17 14:51:07,629 - root - DEBUG - UI setup completed successfully
2025-02-17 14:51:07,631 - root - DEBUG - Signal connections established
2025-02-17 14:51:07,633 - root - INFO - No scenarios to load.
2025-02-17 14:51:07,633 - root - INFO - PUDPropertiesDialog initialized
2025-02-17 14:51:10,053 - root - INFO - Dialog closed successfully
2025-02-18 09:48:32,745 - root - DEBUG - Toolbar setup completed
2025-02-18 09:48:32,747 - root - DEBUG - Scenario dropdown setup completed
2025-02-18 09:48:32,754 - root - DEBUG - Table setup completed
2025-02-18 09:48:32,754 - root - DEBUG - UI setup completed successfully
2025-02-18 09:48:32,757 - root - DEBUG - Signal connections established
2025-02-18 09:48:32,760 - root - INFO - No scenarios to load.
2025-02-18 09:48:32,760 - root - INFO - PUDPropertiesDialog initialized
2025-02-18 09:48:48,290 - root - INFO - Dialog closed successfully
